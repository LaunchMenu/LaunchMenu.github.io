{"pageProps":{"source":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", {\n    \"name\": \"UI layers\",\n    \"depth\": 1\n  }, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"UI layers\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"LaunchMenu manages its UI by keeping track of a stack of \\\"UI layers\\\". The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/concepts/base/iocontext\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"IOContext\")), \" is responsible for managing this stack of independent layers. Each layer can provide a subset of 5 different types of data:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The path/program location (can be a custom component)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The Menu data\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The field data\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The content data\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The key handler data\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The last four of these can be stacks (as lists) of data themselves. This allows you to reuse other layers within your layer, and essentially nest them logically. Visually they will behave the same as if they were separately opened.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Below is the exact interface required for UI Layers:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=IUILayer.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/_types/IUILayer.ts\",\n    \"title\": \"IUILayer.ts\",\n    \"source\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/_types/IUILayer.ts\"\n  }, \"export type IUILayer = {\\n    /**\\n     * A override for the view to use to represent this layer's path\\n     */\\n    pathView?: JSX.Element;\\n    /**\\n     * Retrieves the path to show to the user representing this layer\\n     * @param hook The data hook to subscribe to changes\\n     * @returns The path\\n     */\\n    getPath(hook?: IDataHook): IUILayerPathNode[];\\n    /**\\n     * Retrieves the menu data\\n     * @param hook The data hook to subscribe to changes\\n     * @returns The menu data of this layer\\n     */\\n    getMenuData(hook?: IDataHook): IUILayerMenuData[];\\n    /**\\n     * Retrieves the field data\\n     * @param hook The data hook to subscribe to changes\\n     * @returns The field data of this layer\\n     */\\n    getFieldData(hook?: IDataHook): IUILayerFieldData[];\\n    /**\\n     * Retrieves the content data\\n     * @param hook The data hook to subscribe to changes\\n     * @returns The content data of this layer\\n     */\\n    getContentData(hook?: IDataHook): IUILayerContentData[];\\n    /**\\n     * Retrieves the key listener data\\n     * @param hook The data hook to subscribe to changes\\n     * @returns The key listener data of this layer\\n     */\\n    getKeyHandlers(hook?: IDataHook): IKeyEventListener[];\\n    /**\\n     * A callback for when the UI layer is opened\\n     * @param context The context that this layer was opened in\\n     * @param close A method to close this layer from the given context\\n     * @returns A callback for when this layer is closed (both when invoked by our close call, or closed external)\\n     */\\n    onOpen(\\n        context: IIOContext,\\n        close: () => void\\n    ):\\n        | void\\n        | (() => void | Promise<void>)\\n        | Promise<void | (() => void | Promise<void>)>;\\n};\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onOpen\"), \" function can be used to prime the layer, and is invoked by the context it's added to.\"), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"UI sections\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"UI sections\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The LaunchMenu has 3 base UI sections, as well as a path section. Each of these base sections can provide additional data that indicate their intentions, but internally only their \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"view\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"keyHandler\"), \" is used. You can learn more about the key handlers on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"\"\n  }, \"key events page\"), \".\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"All views have the following interface:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=IViewStackItem.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/_types/IViewStackItem.ts\",\n    \"title\": \"IViewStackItem.ts\",\n    \"source\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/_types/IViewStackItem.ts\"\n  }, \"export type IViewStackItem =\\n    | {close: true; closeTransitionDuration?: number}\\n    | IVisibleViewStackItem;\\n\\n/**  An item that can be added to view stacks */\\ntype IVisibleViewStackItem =\\n    | {\\n          view: IViewStackItemView;\\n          transparent?: boolean;\\n          transitions?: IViewTransitions;\\n      }\\n    | IViewStackItemView;\\n\\n/** The view of a view stack item */\\ntype IViewStackItemView = LFC<IViewStackItemProps> | JSX.Element;\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"With the supporting transitions type:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=IViewTransitions.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/_types/IViewTransitions.ts spoiler\",\n    \"title\": \"IViewTransitions.ts\",\n    \"source\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/_types/IViewTransitions.ts\",\n    \"spoiler\": true\n  }, \"/**\\n * The transition components to use to change the views\\n */\\nexport type IViewTransitions = {\\n    /** The opening transition type */\\n    Open?: FC<IOpenTransitionProps>;\\n    /** The changing transition type */\\n    Change?: FC<IChangeTransitionProps>;\\n    /** The closing transition type */\\n    Close?: FC<ICloseTransitionProps>;\\n};\\n\\ntype IOpenTransitionProps = {\\n    /** The callback when the transition finishes */\\n    onComplete?: () => void;\\n    /** The child to open */\\n    children: ReactNode;\\n    /** Whether to activate the transition, defaults to true */\\n    activate?: boolean;\\n};\\n\\ntype IChangeTransitionProps = {\\n    /** The callback when the transition finishes */\\n    onComplete?: () => void;\\n    /** The children to transition through to the last child */\\n    children: ReactNode[];\\n    /** Whether to activate the transition, defaults to true */\\n    activate?: boolean;\\n};\\n\\ntype ICloseTransitionProps = {\\n    /** The callback when the transition finishes */\\n    onComplete?: () => void;\\n    /** The child to close */\\n    children: ReactNode;\\n    /** Whether to activate the transition, defaults to true */\\n    activate?: boolean;\\n};\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"We can infer 3 main types of views from this interface:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A view that simply closes the whole section by specifying \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{close: true}\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A simple React component or element view by providing a component or element\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An advanced React component or element view by providing an object with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{view: myView}\"))), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"When the last type of view is provided, we can indicate that the view may be transparent by specifying property \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"transparent\"), \" to be true. This makes sure that the element below isn't hidden. We can also supply custom transitions for when the view is opened, closed, or swapped out for another view.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"LaunchMenu already contains 3 different types of built-in transition components:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"InstantOpenTransition\"), \": Essentially don't apply a transition at all, instantly update the view\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"FadeOpenTransition\"), \": Increase the opacity from 0 to 1 for a smooth fade\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SlideOpenTransition\"), \": Slide the element from outside the section into the section. This comes in 4 pre-configured flavors:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SlideRightOpenTransition\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SlideLeftOpenTransition\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SlideUpOpenTransition\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SlideDownOpenTransition\"))))), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In all of these types \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Open\"), \" can be swapped out for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Close\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Change\"), \" for their corresponding transitions.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"And advanced view may look as follows:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"title=viewExample.tsx\",\n    \"title\": \"viewExample.tsx\"\n  }, \"const myView: IVisibleViewStackItem = {\\n    view: <div>I like trains</div>,\\n    transparent: true,\\n    transitions: {\\n        Open: FadeOpenTransition,\\n        Close: FadeCloseTransition,\\n    },\\n};\\n\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Data storage\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Data storage\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Note that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useState\"), \" and other component based state management should be avoided because of how views are managed. Views may be removed from both the virtual and real dom at any point, if they are covered by other layers on top. This means that when you return to this view, it will be instantiated from scratch and thus not maintain its state.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Data storage should therefor be done in react life-cycle independent facilities, such as using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tarvk.github.io/model-react/examples/build/#Field\"\n  }, \"model-react fields\"), \".\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"This choice may be worth reconsidering, but so far it hasn't been problematic in my experience.\"))), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Paths\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Paths\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"UI layers can specify a path to give the user a rough idea of where in the application they are. This helps to visualize how many UI layers are opened below the current layer. The path specified by an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IUILayer\"), \" may be any path at all, and is a simple string. When you make a UI layer that extends \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AbstractUILayer\"), \" you're however supposed to specify relative paths. These paths are automatically merged with the path of the layer below to obtain the absolute path. In these relative paths, you can use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"..\"), \" to remove the last item of the parent path, and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".\"), \" to add yourself to to the same path as the parent.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Below is an example showing some paths specified to a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"UILayer\"), \" instance, which extends \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AbstractUILayer\"), \":\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerPath\",\n    \"title\": \"src/index.tsx\",\n    \"source\": \"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerPath\"\n  }, \"export default declare({\\n    info,\\n    settings,\\n    async open({context, onClose}) {\\n        // Add `Example` and `oranges` to the previous path (which was empty)\\n        await context.open(\\n            new UILayer(() => ({menu: new Menu(context, items), onClose}), {\\n                path: \\\"Example/oranges\\\",\\n            })\\n        );\\n\\n        // Remove the last item from the previous path, add `something`\\n        await context.open(\\n            new UILayer(() => ({menu: new Menu(context, items), onClose}), {\\n                path: \\\"../something\\\",\\n            })\\n        );\\n\\n        // Don't change the path, but indicate that this layer belongs to the same path now\\n        await context.open(\\n            new UILayer(() => ({menu: new Menu(context, items), onClose}), {\\n                path: \\\".\\\",\\n            })\\n        );\\n    },\\n});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"When this example is opened, 3 layers are added to the context. You will see that when you exit out of the top layer, the path doesn't actually change. This is because the third item didn't add anything to the path. When we exit out of the second layer, you will see that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"something\\\"\"), \" is replaced with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"oranges\\\"\"), \". This is because the top layer has the path \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"example/oranges\\\"\"), \" but the second layer removed the top \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"oranges\\\"\"), \" and added \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"something\\\"\"), \" to it.\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"UILayer class\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"UILayer class\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"A standard UILayer class is provided that can be used to easily construct a UILayer from a collection of separate components. This class will also supplement your data to the best of its abilities using default implementations and features:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Model completion: If you provide an \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/docs/concepts/ui/menu\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"IMenu\")), \" -, \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/docs/concepts/ui/textfield\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"ITextField\")), \" -, or \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/docs/concepts/ui/content\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"IContent\")), \" data model, standard key handlers and views are automatically added if absent to make your data interactive and visualize it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Searchable menu: If you provide an \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/docs/concepts/ui/menu\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"IMenu\")), \" data model, it will automatically add a searchfield to search in that menu unless \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"searchable\"), \" is explicitly set to false\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Menu content: If you provide an \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/docs/concepts/ui/menu\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"IMenu\")), \" data model, it will automatically show the content of the selected menu item, unless \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hideItemContent\"), \" is explicitly set to true\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Overlays: Transparent overlays are automatically added for sections that no content was provided for, to indicate that data doesn't belong to this layer\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Key barrier: The opened UILayer automatically prevents layers below from receiving key events\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Interface\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Interface\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Below is the exact interface of the data that can be passed to the UILayer constructor:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=UILayer.ts source source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/standardUILayer/UILayer.tsx\",\n    \"title\": \"UILayer.ts\",\n    \"source\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/standardUILayer/UILayer.tsx\"\n  }, \"export class UILayer extends UnifiedAbstractUILayer {\\n     /**\\n     * Creates a new standard UILayer\\n     * @param data The data to create the layer from\\n     * @param config Base ui layer configuration\\n     */\\n    public constructor(\\n        data: IStandardUILayerData[] | IStandardUILayerData,\\n        config?: IUILayerBaseConfig\\n    ) { }\\n\\n    ...\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=IStandardUILayerData.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/standardUILayer/_types/IStandardUILayerData.ts spoiler\",\n    \"title\": \"IStandardUILayerData.ts\",\n    \"source\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/standardUILayer/_types/IStandardUILayerData.ts\",\n    \"spoiler\": true\n  }, \"export type IStandardUILayerData =\\n    | IStandardUILayerDataObject\\n    | ((\\n          context: IIOContext,\\n          close: () => void\\n      ) => IStandardUILayerDataObject & {onClose?: () => void | Promise<void>})\\n    | IUILayer;\\n\\n/** The format for one of the layer's objects */\\nexport type IStandardUILayerDataObject = {\\n    // Menu\\n    /** The menu's view */\\n    menuView: IViewStackItem;\\n    /** The menu data structure */\\n    menu?: IMenu;\\n    /** The menu's key handler */\\n    menuHandler?: IKeyEventListener;\\n    /** The callback to perform when an item in the menu is executed */\\n    onExecute?: IMenuItemExecuteCallback;\\n    /** Whether a search field should be generated for the passed menu (defaults to true) */\\n    searchable?: boolean;\\n    /** Whether the content of this menu should be displayed */\\n    hideItemContent?: boolean;\\n    /** Whether to destroy the menu when closing this layer (defaults to true) */\\n    destroyOnClose?: boolean;\\n\\n    // Field\\n    /** The field's view */\\n    fieldView: IViewStackItem;\\n    /** The field data structure */\\n    field?: ITextField;\\n    /** The field's key handler */\\n    fieldHandler?: IKeyEventListener;\\n    /** The highlighter to use for the field if any */\\n    highlighter?: IHighlighter;\\n    /** The icon to show at the start of the field */\\n    icon?: IThemeIcon | ReactElement;\\n\\n    // Content\\n    /** The content's view */\\n    contentView?: IViewStackItem | undefined;\\n    /** The content data structure */\\n    content?: IContent;\\n    /** The content's key handler */\\n    contentHandler?: IKeyEventListener;\\n\\n    // Shared\\n    /** The overlay group to use, making sure that only the bottom view with the same group in a continuous sequence is shown */\\n    overlayGroup?: Symbol;\\n    /** Whether to prevent the layer from closing when the user uses their back key, defaults to whether a menu is present */\\n    handleClose?: boolean;\\n};\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=IUILayerBaseConfig source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/_types/IUILayerBaseConfig.ts spoiler\",\n    \"title\": \"IUILayerBaseConfig\",\n    \"source\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/_types/IUILayerBaseConfig.ts\",\n    \"spoiler\": true\n  }, \"export type IUILayerBaseConfig = {\\n    /** The relative input path, defaults to \\\".\\\" */\\n    path?: string;\\n    /** Whether to show a semi transparent overlay for sections without content, defaults to true */\\n    showNodataOverlay?: boolean;\\n    /** Whether to catch all key events and prevent lower layers from catching them, defaults to true */\\n    catchAllKeys?: boolean;\\n};\\n\"))), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Model completion\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Model completion\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Whenever a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IMenu\"), \" -, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ITextField\"), \" -, or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IContent\"), \" instance is passed to the UILayer, the layer will automatically generate the corresponding standard views and key handlers. You can also provide these manually, by specifying \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"menuView\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"menuHandler\"), \" or the equivalent properties for the other types.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The generated key handlers can take care of automatically closing the layer and calling \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onClose\"), \" too, if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"handleClose\"), \" is set to true. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"handleClose\"), \" defaults to false for provided field and content instances, but defaults to true if a menu is present.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerModelCompletion\",\n    \"title\": \"src/index.tsx\",\n    \"source\": \"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerModelCompletion\"\n  }, \"export default declare({\\n    info,\\n    settings,\\n    open({context, onClose}) {\\n        const field = new TextField(\\\"Bob\\\", {start: 3, end: 3});\\n        const content = new Content(<Loader>{h => field.get(h)}</Loader>);\\n\\n        context.open(\\n            new UILayer(() => ({field, content, handleClose: true, onClose}), {\\n                path: \\\"Example\\\",\\n            })\\n        );\\n    },\\n});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"This example simply opens up a text field and content with the same text as the field whenever the example applet is opened.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"To learn more about the used views and handlers, check the the corresponding section for each of the UI types:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/docs/concepts/ui/menu\"\n  }, \"Menu\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/docs/concepts/ui/textfield\"\n  }, \"TextField\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/docs/concepts/ui/content\"\n  }, \"Content\")))), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Searchable menu\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Searchable menu\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"By default a menu opened by a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"UILayer\"), \" is searchable. This is achieved by using the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#MenuSearchLayer\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"MenuSearchLayer\")), \". This may be unnecessary if you handle your own search, or use the text field for something else. We however recommend to allow the user to search at all time, to improve usage efficiency.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"We can easily stop a menu from being searched, by specifying \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"searchable: false\"), \":\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerSearching\",\n    \"title\": \"src/index.tsx\",\n    \"source\": \"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerSearching\"\n  }, \"export default declare({\\n    info,\\n    settings,\\n    async open({context, onClose}) {\\n        const menu = new Menu(context, items);\\n        await context.open(\\n            new UILayer(() => ({menu, onClose}), {\\n                path: \\\"Example searchable\\\",\\n            })\\n        );\\n\\n        await context.open(\\n            new UILayer(\\n                {menu, searchable: false, destroyOnClose: false},\\n                {\\n                    path: \\\"Example not searchable\\\",\\n                }\\n            )\\n        );\\n    },\\n});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In this example, whenever you open the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"example\"), \" applet, it will add 2 UILayers. The first UILayer won't be searchable. But when that's exited using the back key (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"esc\"), \" by default), we will enter the same menu but now in searchable form.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"destroyOnClose: false\"), \" is specified on the second layer, because we don't want to destroy the menu when we exit the layer, since it's also used by the layer below.\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Menu content\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Menu content\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Any menu opened by a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"UILayer\"), \" will automatically show the selected item's content in the content area. This content will override the content that was provided separately, unless \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hideItemContent: true\"), \" is supplied.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerMenuContent\",\n    \"title\": \"src/index.tsx\",\n    \"source\": \"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerMenuContent\"\n  }, \"const items = [\\n    createStandardMenuItem({\\n        name: \\\"Hello world\\\",\\n        content: <div>hoi</div>,\\n        onExecute: () => alert(\\\"Hello!\\\"),\\n    }),\\n    createStandardMenuItem({\\n        name: \\\"Bye world\\\",\\n        onExecute: () => alert(\\\"Bye!\\\"),\\n    }),\\n];\\n\\nexport default declare({\\n    info,\\n    settings,\\n    open({context, onClose}) {\\n        context.open(\\n            new UILayer(\\n                () => ({\\n                    menu: new Menu(context, items),\\n                    content: new Content(\\n                        <Box background=\\\"secondary\\\">Super cool example</Box>\\n                    ),\\n                    onClose,\\n                }),\\n                {\\n                    path: \\\"Example\\\",\\n                }\\n            )\\n        );\\n    },\\n});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Here when we open the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"example\"), \" applet, we can see how the item's content animates in and out of view as we select and deselect the item.\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Overlays\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Overlays\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"A somewhat advanced concept is the concept of overlays. The premise is quite simple, and sounds like it shouldn't require special behavior. Whenever we open a UILayer and some section such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content\"), \" is missing, we still want to show the content of the layer below, but we want to indicate it doesn't belong to this layer. This can easily be achieved by adding a transparent component on top of this content, allowing the user to still see the content below while visually separating it from this layer.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"This simple idea however leaves us with 1 problem: when we open multiple layers that all have an overlay for the content, the content below becomes increasingly less visible. This isn't a huge problem, but still not favorable in our opinion. This is why we added the concept of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"overlayGroups\"), \". These groups are simply JavaScript symbols, specifying some group identifier. Then when we have multiple views of the same group stacked on top of each other, only the bottom view belonging to this group will be rendered.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerOverlays spoiler\",\n    \"title\": \"src/index.tsx\",\n    \"source\": \"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerOverlays\",\n    \"spoiler\": true\n  }, \"export default declare({\\n    info,\\n    settings,\\n    async open({context, onClose}) {\\n        const menu = new Menu(context, items);\\n        // Don't use overlays\\n        await context.open(\\n            new UILayer(() => ({menu, searchable: false, onClose}), {\\n                path: \\\"Layer 1\\\",\\n                showNodataOverlay: false,\\n            })\\n        );\\n\\n        // Use default overlays\\n        await context.open(\\n            new UILayer(\\n                {menu, searchable: false, destroyOnClose: false},\\n                {\\n                    path: \\\"Layer 2\\\",\\n                }\\n            )\\n        );\\n\\n        // Add a field view, but use the overlay group\\n        await context.open(\\n            new UILayer(\\n                [\\n                    {\\n                        overlayGroup: standardOverlayGroup,\\n                        fieldView: (\\n                            <FillBox background=\\\"primary\\\" opacity={0.5} />\\n                        ),\\n                    },\\n                    {menu, searchable: false, destroyOnClose: false},\\n                ],\\n                {\\n                    path: \\\"Layer 3\\\",\\n                    showNodataOverlay: false, // don't use default overlays\\n                }\\n            )\\n        );\\n\\n        // Add a field overlay but add custom overlay group\\n        const group = Symbol(\\\"new group\\\");\\n        await context.open(\\n            new UILayer(\\n                [\\n                    {\\n                        overlayGroup: group,\\n                        fieldView: {\\n                            view: (\\n                                <FillBox background=\\\"primary\\\" opacity={0.5} />\\n                            ),\\n                            transparent: true,\\n                        },\\n                    },\\n                    {menu, searchable: false, destroyOnClose: false},\\n                ],\\n                {\\n                    path: \\\"Layer 4\\\",\\n                    showNodataOverlay: false, // don't use default overlays\\n                }\\n            )\\n        );\\n\\n        // Add another field overlay but use same custom overlay group\\n        await context.open(\\n            new UILayer(\\n                [\\n                    {\\n                        overlayGroup: group,\\n                        fieldView: {\\n                            view: (\\n                                <FillBox background=\\\"secondary\\\" opacity={0.5} />\\n                            ),\\n                            transparent: true,\\n                        },\\n                    },\\n                    {menu, searchable: false, destroyOnClose: false},\\n                ],\\n                {\\n                    path: \\\"Layer 5\\\",\\n                    showNodataOverlay: false, // don't use default overlays\\n                }\\n            )\\n        );\\n    },\\n});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In this example, whenever the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"example\"), \" applet is opened, it will add 5 layers to the context. The menu content it adds can be ignored, it's mostly about the overlays that are visible in the field section.\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When you exit layer 5, you will see that it doesn't visually add an overlay, despite specifying a view for the field. This is because layer 4 and 5 specify an overlay using the same overlayGroup, so only the bottom consecutive one (layer 4) will show the overlay.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When you exit layer 4, you will see that the custom field overlay it added disappears.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When you exit layer 3, you will see that it doesn't visually add an overlay, despite specifying a view for the field. This is because layer 3 uses the default overlay group, which is also used by layer 2.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When you exit layer 2, you will see that the overlay it added by default also disappears.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When you exit layer 1, you will see that no overlay disappears, since we disabled the default overlay for layer 1.\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"These visual overlays are independent of keyboard interaction, which is addressed in the section below.\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Key barrier\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Key barrier\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"By default any UILayer will catch all events that are emitted. This is to prevent things in other layers from accidentally triggering. There are however several situations in which you do want things in layers below to trigger, which is why you can explicitly disable this by specifying \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"catchAllKeys: false\"), \".\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerKeyBarrier spoiler\",\n    \"title\": \"src/index.tsx\",\n    \"source\": \"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerKeyBarrier\",\n    \"spoiler\": true\n  }, \"export default declare({\\n    info,\\n    settings,\\n    async open({context, onClose}) {\\n        const back = context.settings.get(baseSettings).controls.common.back;\\n        const handleClose = (event: KeyEvent, close: () => void) => {\\n            if (back.get().matches(event)) {\\n                close();\\n                return true;\\n            }\\n        };\\n\\n        await context.open(\\n            new UILayer(\\n                (context, close) => ({\\n                    onClose,\\n                    contentView: <div>Layer 1</div>,\\n                    contentHandler: event => {\\n                        if (handleClose(event, close)) return true;\\n                        if (event.matches(\\\"1\\\")) {\\n                            alert(\\\"Detected 1\\\");\\n                            return true;\\n                        }\\n                    },\\n                }),\\n                {path: \\\"Layer 1\\\"}\\n            )\\n        );\\n\\n        // Open up a layer above that doesn't capture all events\\n        await context.open(\\n            new UILayer(\\n                (context, close) => ({\\n                    contentView: <div>Layer 2</div>,\\n                    contentHandler: event => {\\n                        if (handleClose(event, close)) return true;\\n                        if (event.matches(\\\"2\\\")) {\\n                            alert(\\\"Detected 2\\\");\\n                            return true;\\n                        }\\n                    },\\n                }),\\n                {\\n                    path: \\\"Layer 2\\\",\\n                    catchAllKeys: false,\\n                }\\n            )\\n        );\\n\\n        // Open up a layer that does capture all events (defaults to capturing all)\\n        await context.open(\\n            new UILayer(\\n                (context, close) => ({\\n                    contentView: <div>Layer 3</div>,\\n                    contentHandler: event => {\\n                        if (handleClose(event, close)) return true;\\n                        if (event.matches(\\\"3\\\")) {\\n                            alert(\\\"Detected 3\\\");\\n                            return true;\\n                        }\\n                    },\\n                }),\\n                {path: \\\"Layer 3\\\"}\\n            )\\n        );\\n    },\\n});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In this example, whenever the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"example\"), \" applet is opened, it will add 3 layers to the context. You will notice that both pressing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"3\"), \" will open an alert box, but pressing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"2\"), \" won't do this. This is because layer 3 doesn't specify \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"catchAllKeys: false\"), \" and thus catches all keys by default. When we exit layer 3, you will notice that both \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"2\"), \" will open alert boxes. This is because layer 2 allows events to sink down, since we specified \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"catchAllKeys: false\"), \".\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Note that in this example we have to manually handle closing in our keyhandler, since we didn't generate any standard key handlers that could take care of this for us.\"))), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Custom UILayer\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Custom UILayer\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can make a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IUILayer\"), \" totally from scratch if you like, and implement the entire interface from scratch. We however also have a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AbstractUILayer\"), \" class which takes care of a couple of common things:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Making supplied paths relative to the layer on top\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Adding overlays to missing sections\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Showing the content of the selected menu item if present\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Simplify layer initialization\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In the example below, we created a custom \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GambleLayer\"), \" which can take care of providing a view and key handlers for a given menu. The UI provided for the menu is quite custom and rather special however, since you can no longer navigate with the up and down keys, and have to use a 'launcher' instead using the space bar.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerCustomLayer spoiler\",\n    \"title\": \"src/index.tsx\",\n    \"source\": \"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerCustomLayer\",\n    \"spoiler\": true\n  }, \"const items = new Array(30).fill(0).map((_, i) =>\\n    createStandardMenuItem({\\n        name: `Item ${i}`,\\n        onExecute: () => alert(`Activated ${i}`),\\n    })\\n);\\n\\nclass GambleLayer extends AbstractUILayer {\\n    protected menu: IMenu;\\n    protected data = new Field([] as IUILayerMenuData[]);\\n    protected charge = {\\n        chargeSpeed: 0.05,\\n        minCharge: 0.3,\\n        decay: 0.03,\\n        speed: 1,\\n    };\\n\\n    /**\\n     * Creates a new menu gambling layer\\n     * @param menu The menu that the layer is for\\n     * @param config The base layer config\\n     */\\n    public constructor(menu: IMenu, config: IUILayerBaseConfig) {\\n        super(config);\\n        this.menu = menu;\\n    }\\n\\n    /** @override */\\n    protected initialize(context: IIOContext, close: () => void): () => void {\\n        const handler = this.getMenuHandler(this.menu, close);\\n        const view = this.getMenuUI(this.menu, handler.getCharge);\\n        this.data.set([\\n            {\\n                ID: uuid(),\\n                menu: this.menu,\\n                menuView: view,\\n                menuHandler: handler.handler,\\n            },\\n        ]);\\n\\n        return () => handler.destroy();\\n    }\\n\\n    /**\\n     * Creates the UI for the given menu\\n     * @param menu The menu to visualize\\n     * @param getCharge The function to retrieve the current charge\\n     * @returns The view element\\n     */\\n    protected getMenuUI(\\n        menu: IMenu,\\n        getCharge: IDataRetriever<number>\\n    ): JSX.Element {\\n        return (\\n            <Box display=\\\"flex\\\" flexDirection=\\\"column\\\" height=\\\"100%\\\">\\n                <Loader>\\n                    {h => (\\n                        <Box\\n                            height={10}\\n                            width={`${Math.round(10 + getCharge(h) * 90)}%`}\\n                            css={{backgroundColor: \\\"red\\\"}}\\n                        />\\n                    )}\\n                </Loader>\\n                <Box flexGrow={1} position=\\\"relative\\\">\\n                    <MenuView menu={menu} />\\n                </Box>\\n            </Box>\\n        );\\n    }\\n\\n    /**\\n     * Retrieves the key handler for a menu\\n     * @param menu The menu to create the handler for\\n     * @param onExit The function to execute when receiving an exit command\\n     * @returns The key listener\\n     */\\n    protected getMenuHandler(\\n        menu: IMenu,\\n        onExit: () => void\\n    ): {getCharge: IDataRetriever<number>} & IDisposableKeyEventListener {\\n        const context = menu.getContext();\\n        const controls = context.settings.get(baseSettings).controls;\\n        const launchKey = context.settings.get(settings).launch;\\n        const fieldSettings = controls.menu;\\n        const launcher = this.setupLauncher(() => {\\n            const items = menu.getItems();\\n            const cursor = menu.getCursor();\\n            const index = cursor\\n                ? (items.indexOf(cursor) + 1) % items.length\\n                : 0;\\n            if (items.length > 0) menu.setCursor(items[index]);\\n        });\\n\\n        // Setup handlers\\n        let {\\n            handler: handleItemKeyListeners,\\n            destroy: destroyItemListenersHandler,\\n        } = setupItemKeyListenerHandler(menu);\\n        const {\\n            handler: handleContextMenu,\\n            destroy: destroyContextMenuHandler,\\n        } = setupContextMenuHandler(menu, {\\n            useContextItemKeyHandlers: true,\\n            pattern: () => fieldSettings.openContextMenu.get(),\\n        });\\n\\n        // Return the listener\\n        return {\\n            handler: async (e: KeyEvent) => {\\n                if (await handleItemKeyListeners?.(e)) return true;\\n                if (await handleContextMenu(e)) return true;\\n                if (\\n                    handleExecuteInput(\\n                        e,\\n                        menu,\\n                        undefined,\\n                        fieldSettings.execute.get()\\n                    )\\n                )\\n                    return true;\\n                if (launchKey.get().matches(e)) {\\n                    launcher.fire();\\n                    return true;\\n                }\\n\\n                const back = controls.common.back.get();\\n                if (handleDeselectInput(e, menu, back)) return true;\\n                if (onExit && back.matches(e)) {\\n                    onExit();\\n                    return true;\\n                }\\n            },\\n            destroy: () => {\\n                destroyItemListenersHandler?.();\\n                destroyContextMenuHandler();\\n                launcher.destroy();\\n            },\\n            getCharge: launcher.getCharge,\\n        };\\n    }\\n\\n    /**\\n     * Creates the launcher function\\n     * @param selectNext The function to call to select the next item in the menu\\n     * @returns The data to manage the launcher\\n     */\\n    protected setupLauncher(\\n        selectNext: () => void\\n    ): {\\n        getCharge: IDataRetriever<number>;\\n        destroy: () => void;\\n        fire: () => void;\\n    } {\\n        const charge = new Field(0);\\n\\n        let up = true;\\n        const chargeIntervalID = setInterval(() => {\\n            let value = Math.max(\\n                0,\\n                Math.min(\\n                    charge.get() + (up ? 1 : -1) * this.charge.chargeSpeed,\\n                    1\\n                )\\n            );\\n            charge.set(value);\\n            if (value == 0 || value == 1) up = !up;\\n        }, 50);\\n\\n        return {\\n            getCharge: h => charge.get(h),\\n            destroy: () => {\\n                clearInterval(chargeIntervalID);\\n            },\\n            fire: () => {\\n                let speed = charge.get() + this.charge.minCharge;\\n                let pos = 0;\\n                const intervalID = setInterval(() => {\\n                    speed = Math.max(0, speed - this.charge.decay);\\n                    pos += this.charge.speed * speed;\\n                    while (pos > 1) {\\n                        pos--;\\n                        selectNext();\\n                    }\\n                    if (speed == 0) clearInterval(intervalID);\\n                }, 50);\\n            },\\n        };\\n    }\\n\\n    /** @override */\\n    public getMenuData(\\n        hook?: IDataHook,\\n        extendData: IUILayerMenuData[] = []\\n    ): IUILayerMenuData[] {\\n        return super.getMenuData(hook, [...this.data.get(hook), ...extendData]);\\n    }\\n}\\n\\nexport default declare({\\n    info,\\n    settings,\\n    open({context, onClose}) {\\n        context.open(\\n            new GambleLayer(new Menu(context, items), {\\n                path: \\\"Example\\\",\\n            }),\\n            {onClose}\\n        );\\n    },\\n});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In this example, whenever the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"example\"), \" applet is opened, it will open our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GambleLayer\"), \". You will see a charge bar cycling up and down, and whenever space is pressed the cursor will be launched down. The launch speed depends on the charge amount when the cursor was launched.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"We're considering replacing all menus in LaunchMenu with this system in the future, but for now you can reproduce it yourself.\"), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Reusing UILayers\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Reusing UILayers\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can easily reuse existing layers within your custom layer. If you want to use a layer class \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"X\"), \", all you have to do is:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create an instance \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"x\"), \" of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"X\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Call \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onOpen\"), \" on \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"x\"), \" whenever your layer is opened, and store the close callback \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onClose\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Call \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onClose\"), \" whenever your close callback is executed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Forward the sections and key handlers from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"x\"), \" in your own output\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Since this is still a fair bit of effort, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"UnifiedAbstractUILayer\"), \" can be used to take care of this. This layer takes in a single list of section data or sub-layers, and forwards them to the correct sections. This will also automatically take care of sub-layer initialization and disposal.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The only drawback of this system is that all sections are combined in one list, so whenever your layer adds something to one of the sections, all sections will received an update.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Below is an example of a custom layer that represents an applet, and makes use of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuSearch\"), \" layer to allow for searching:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerReuseLayer\",\n    \"title\": \"src/index.tsx\",\n    \"source\": \"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerReuseLayer\"\n  }, \"class MyApplication extends UnifiedAbstractUILayer {\\n    protected data = new Field([] as IUILayerData[]);\\n\\n    /** Creates a new cool application thing */\\n    public constructor() {\\n        super({path: \\\"My cool example\\\"});\\n    }\\n\\n    /** @override */\\n    public getAll(hook?: IDataHook): IUILayerData[] {\\n        return this.data.get(hook);\\n    }\\n\\n    /** @override */\\n    protected initialize(context: IIOContext, close: () => void): () => void {\\n        // Setup menu\\n        const items = [\\n            createStandardMenuItem({\\n                name: \\\"Hello world\\\",\\n                onExecute: () => alert(\\\"Hello!\\\"),\\n            }),\\n            createStandardMenuItem({\\n                name: \\\"Bye world\\\",\\n                onExecute: () => alert(\\\"Bye!\\\"),\\n            }),\\n        ];\\n\\n        const menu = new Menu(context, items);\\n        const {\\n            handler: menuHandler,\\n            destroy: destroyMenuHandler,\\n        } = createStandardMenuKeyHandler(menu, {onExit: close});\\n        const menuData = {\\n            ID: uuid(),\\n            menu,\\n            menuView: <MenuView menu={menu} />,\\n            menuHandler: menuHandler,\\n        };\\n\\n        // Setup a search field + menu by reusing the menu search layer\\n        const menuSearch = new MenuSearch({\\n            menu,\\n        });\\n\\n        // Setup some content\\n        const content = new Content(\\n            <Box>This is a great applet, very useful.</Box>\\n        );\\n        const contentHandler = createStandardContentKeyHandler(\\n            content,\\n            context\\n        );\\n        const contentData = {\\n            ID: uuid(),\\n            content,\\n            contentView: <ContentView content={content} />,\\n            contentHandler,\\n        };\\n\\n        // Set all the data (in the appropriate order, search on top)\\n        this.data.set([menuData, contentData, menuSearch]);\\n\\n        // Return a function that can be invoked to dispose all data\\n        return () => destroyMenuHandler();\\n    }\\n}\\n\\nexport default declare({\\n    info,\\n    settings,\\n    open({context, onClose}) {\\n        context.open(new MyApplication(), {onClose});\\n    },\\n});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In this example, whenever the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"example\"), \" applet is opened, it will open our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MyApplication\"), \" layer. This layer will simply show a searchable menu, and some content.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Note that the above example is meant to show off layer reusing. However because the situation above is rather simple and didn't do anything custom for views or handlers, a similar effect could've been achieved using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"UILayer\"), \" class:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=UILayerExtendingExample.tsx\",\n    \"title\": \"UILayerExtendingExample.tsx\"\n  }, \"class MyApplication extends UILayer {\\n    /** Creates a new cool application thing */\\n    public constructor() {\\n        super(\\n            context => ({\\n                menu: new Menu(context, [\\n                    createStandardMenuItem({\\n                        name: \\\"Hello world\\\",\\n                        onExecute: () => alert(\\\"Hello!\\\"),\\n                    }),\\n                    createStandardMenuItem({\\n                        name: \\\"Bye world\\\",\\n                        onExecute: () => alert(\\\"Bye!\\\"),\\n                    }),\\n                ]),\\n                content: new Content(\\n                    <Box>This is a great applet, very useful.</Box>\\n                ),\\n            }),\\n            {path: \\\"My cool example\\\"}\\n        );\\n    }\\n}\\n\")))), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Types\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Types\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"LaunchMenu has several built-in layers that are used throughout the application, and may also be useable as sub-layers:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#inputlayer\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"InputLayer\")), \": A layer to handle string input prompts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#selectlayer\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"SelectLayer\")), \": A layer to handle 1 item selection input prompts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#multiselectlayer\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"MultiSelectLayer\")), \": A layer to handle multiple item selection input prompts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#contextmenulayer\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"ContextMenuLayer\")), \": A layer that specifies to use the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"contextMenu\"), \" icon, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\\"Context\\\"\"), \" path and a slide from the left menu transition\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#menusearchlayer\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"MenuSearchLayer\")), \": A layer to handle searching within menus\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"InputLayer\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"InputLayer\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/input/InputLayer.tsx\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"InputLayer\")), \" class takes in a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tarvk.github.io/model-react/examples/build/#Field\"\n  }, \"model-react field\"), \" and a config. When opened, it allows the user to update this field's value using a text field.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Below is the interface of the class:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=InputLayer.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/input/InputLayer.tsx spoiler\",\n    \"title\": \"InputLayer.ts\",\n    \"source\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/input/InputLayer.tsx\",\n    \"spoiler\": true\n  }, \"export class InputLayer<T> extends AbstractUILayer {\\n    /**\\n     * Creates a new input field\\n     * @param field The field to target\\n     */\\n    public constructor(field: T extends string ? IField<T> : never);\\n\\n    /**\\n     * Creates a new input field\\n     * @param field The field to target\\n     * @param config The configuration for the field\\n     */\\n    public constructor(field: IField<T>, config: IInputConfig<T>);\\n    public constructor(field: IField<T>, config?: IInputConfig<T>);\\n    // Value helpers\\n    /**\\n     * Retrieves the resulting value if valid, or an error otherwise\\n     * @param hook The data hook to subscribe to changes\\n     * @returns The resulting value, or error\\n     */\\n    public getValue(hook?: IDataHook): T | IInputError;\\n    /**\\n     * Commits the current text value to the target field, if the input value is valid\\n     * @returns Whether the input was valid\\n     */\\n    public updateField(): boolean;\\n    // Error handling\\n    /**\\n     * Retrieves the input error if any\\n     * @param hook The hook to subscribe to changes\\n     * @returns The error with the current input if any\\n     */\\n    public getError(hook?: IDataHook): IInputError | null;\\n}\\n\\ntype IInputConfig<T> = {\\n    /** Checks whether the given input is valid */\\n    checkValidity?: (v: string) => IInputError | undefined;\\n    /** The function to transform the field value into a string */\\n    serialize?: (v: T) => string;\\n    /** The function to transform the input string to a valid field value (if the input is valid) */\\n    deserialize?: (v: string) => T;\\n    /** Whether to only update on any valid input, or only when the input field (defaults to true)*/\\n    liveUpdate?: boolean;\\n    /** Whether to dispatch a command on submit (defaults to false, can't be combined with liveUpdate or onSubmit) */\\n    undoable?: boolean;\\n    /** The icon to be shown for the input */\\n    icon?: IThemeIcon | ReactElement;\\n    /** The highlighter to use for the input */\\n    highlighter?: IHighlighter;\\n    /** Whether to allow usage of submit to exit the input, even if the input isn't valid (defaults to true) */\\n    allowSubmitExitOnError?: boolean;\\n    /** A callback for when the value was submitted, and UI was closed (note that invalid inputs aren't submitted, defaults to a function that updates the input field)*/\\n    onSubmit?: (value: T) => void;\\n};\\n\\ntype IInputError = {\\n    ranges?: {start: number; end: number}[];\\n} & ({message: string} | {view: IViewStackItem});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"There is also a corresponding \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"promptInputExecuteHandler\"), \" to open this layer with a specified config from a menu item when it's executed.\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"SelectLayer\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"SelectLayer\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/select/SelectLayer.tsx\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"SelectLayer\")), \" class takes in a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tarvk.github.io/model-react/examples/build/#Field\"\n  }, \"model-react field\"), \" and a config. When opened, it allows the user to update this field's value by selecting one of the options. Depending on the configuration it also allows for entering a custom option.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Below is the interface of the class:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=SelectLayer.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/select/SelectLayer.tsx spoiler\",\n    \"title\": \"SelectLayer.ts\",\n    \"source\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/select/SelectLayer.tsx\",\n    \"spoiler\": true\n  }, \"export class SelectLayer<T> extends InputLayer<T> {\\n    /**\\n     * Creates a new select UI\\n     * @param field The data field to target\\n     * @param config The configuration for the UI\\n     */\\n    public constructor(field: IField<T>, config: ISelectConfig<T>);\\n    // Value helpers\\n    /**\\n     * Retrieves the resulting value if valid, or an error otherwise\\n     * @param hook The data hook to subscribe to changes\\n     * @returns The resulting value, or error\\n     */\\n    public getValue(hook?: IDataHook): T | IInputError;\\n    /**\\n     * Commits the current text value to the target field, if the input value is valid\\n     * @returns Whether the input was valid\\n     */\\n    public updateField(): boolean;\\n    // Error handling\\n    /**\\n     * Retrieves the input error if any\\n     * @param hook The hook to subscribe to changes\\n     * @returns The error with the current input if any\\n     */\\n    public getError(hook?: IDataHook): IInputError | null;\\n    // Custom value menu item handling\\n    /**\\n     * Retrieves whether custom is currently selected\\n     * @param hook The hook to subscribe to changes\\n     * @returns Whether custom input is selected\\n     */\\n    public isCustomSelected(hook?: IDataHook): boolean;\\n}\\n\\ntype ISelectConfig<T> = {\\n    /** The options for the dropdown */\\n    options: readonly ISelectOption<T>[];\\n    /** A method to retrieve the UI for an option */\\n    createOptionView: (value: T, isDisabled: boolean) => IMenuItem;\\n    /** A check whether two values are equal, used to highlight the currently selected option */\\n    equals?: (a: T, b: T) => boolean;\\n    /** Menu category configuration for the search results */\\n    categoryConfig?: IPrioritizedMenuConfig;\\n    /** The item to use for custom input */\\n    customView?: IMenuItem;\\n    /** Checks whether the given input is valid */\\n    checkValidity?: (v: string) => IInputError | undefined;\\n    /** The function to transform the field value into a string */\\n    serialize?: (v: T) => string;\\n    /** The function to transform the input string to a valid field value (if the input is valid) */\\n    deserialize?: (v: string) => T;\\n    /** Whether to only update on any valid input, or only when the input field (defaults to true)*/\\n    liveUpdate?: boolean;\\n    /** Whether to dispatch a command on submit (defaults to false, can't be combined with liveUpdate or onSubmit) */\\n    undoable?: boolean;\\n    /** The icon to be shown for the input */\\n    icon?: IThemeIcon | ReactElement;\\n    /** The highlighter to use for the input */\\n    highlighter?: IHighlighter;\\n    /** Whether to allow usage of submit to exit the input, even if the input isn't valid (defaults to false) */\\n    allowSubmitExitOnError?: boolean;\\n    /** A callback for when the value was submitted, and UI was closed (note that invalid inputs aren't submitted, defaults to a function that updates the input field)*/\\n    onSubmit?: (value: T) => void;\\n    /** Whether to allow custom user inputs (certain config fields are ignored if disabled, defaults to false) */\\n    allowCustomInput?: boolean;\\n};\\n\\ntype ISelectOption<T> =\\n    | {\\n          /** The value for the option */\\n          value: T;\\n          /** Whether this option should not be selectable */\\n          disabled?: boolean;\\n      }\\n    | T;\\n\\ntype IInputError = {\\n    ranges?: {start: number; end: number}[];\\n} & ({message: string} | {view: IViewStackItem});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"There is also a corresponding \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"promptSelectExecuteHandler\"), \" to open this layer with a specified config from a menu item when it's executed.\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"MultiSelectLayer\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"MultiSelectLayer\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/multiSelect/MultiSelectLayer.tsx\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"MultiSelectLayer\")), \" class takes in a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tarvk.github.io/model-react/examples/build/#Field\"\n  }, \"model-react field\"), \" and a config. When opened, it allows the user to update this field's value by selecting one or more options. Depending on the configuration it also allows for entering a custom option.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Below is the interface of the class:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=MultiSelectLayer.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/multiSelect/MultiSelectLayer.tsx spoiler\",\n    \"title\": \"MultiSelectLayer.ts\",\n    \"source\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/multiSelect/MultiSelectLayer.tsx\",\n    \"spoiler\": true\n  }, \"export class MultiSelectLayer<T> extends AbstractUILayer {\\n    /**\\n     * Creates a new select UI\\n     * @param field The data field to target\\n     * @param config The configuration for the UI\\n     */\\n    public constructor(field: IField<T[]>, config: IMultiSelectConfig<T>);\\n    // Error handling\\n    /**\\n     * Retrieves the input error if any\\n     * @param hook The hook to subscribe to changes\\n     * @returns The error with the current input if any\\n     */\\n    public getError(hook?: IDataHook): IInputError | null;\\n    // Value selection handling\\n    /**\\n     * Retrieves the current value\\n     * @param hook The hook to subscribe to changes\\n     * @returns The current selection\\n     */\\n    public getValue(hook?: IDataHook): T[];\\n    /**\\n     * Commits the current text value to the target field\\n     */\\n    public updateField();\\n    // Custom value menu item handling\\n    /**\\n     * Retrieves whether custom is currently selected\\n     * @param hook The hook to subscribe to changes\\n     * @returns Whether custom input is selected\\n     */\\n    public isCustomSelected(hook?: IDataHook): boolean;\\n}\\n\\ntype IMultiSelectConfig<T> = {\\n    /** The options for the dropdown */\\n    options: IMultiSelectOption<T>[];\\n    /** A method to retrieve the UI for an option */\\n    createOptionView: (\\n        value: T,\\n        isSelected: (hook?: IDataHook) => boolean,\\n        isDisabled: boolean\\n    ) => IMenuItem;\\n    /** A check whether two values are equal, used to highlight the currently selected option */\\n    equals?: (a: T, b: T) => boolean;\\n    /** Menu category configuration for the search results */\\n    categoryConfig?: IPrioritizedMenuConfig;\\n    /** The item to use for custom input */\\n    createCustomView?: (\\n        getText: (hook?: IDataHook) => string | null\\n    ) => IMenuItem;\\n    /** Checks whether the given input is valid */\\n    checkValidity?: (v: string) => IInputError | undefined;\\n    /** The function to transform the field value into a string */\\n    serialize?: (v: T) => string;\\n    /** The function to transform the input string to a valid field value (if the input is valid) */\\n    deserialize?: (v: string) => T;\\n    /** Whether to only update on any valid input, or only when the input field (defaults to true)*/\\n    liveUpdate?: boolean;\\n    /** Whether to dispatch a command on submit (defaults to false, can't be combined with liveUpdate or onSubmit) */\\n    undoable?: boolean;\\n    /** The icon to be shown for the input */\\n    icon?: IThemeIcon | ReactElement;\\n    /** The highlighter to use for the input */\\n    highlighter?: IHighlighter;\\n    /** Whether to allow usage of submit to exit the input, even if the input isn't valid (defaults to true) */\\n    allowSubmitExitOnError?: boolean;\\n    /** A callback for when the value was submitted, and UI was closed (note that invalid inputs aren't submitted, defaults to a function that updates the input field)*/\\n    onSubmit?: (value: T[]) => void;\\n    /** Whether to allow custom user inputs (certain config fields are ignored if disabled, defaults to false) */\\n    allowCustomInput?: boolean;\\n};\\n\\ntype IMultiSelectOption<T> =\\n    | {\\n          /** The value for the option */\\n          value: T;\\n          /** Whether this option should not be selectable */\\n          disabled?: boolean;\\n      }\\n    | T;\\n\\ntype IInputError = {\\n    ranges?: {start: number; end: number}[];\\n} & ({message: string} | {view: IViewStackItem});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"There is also a corresponding \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"promptMultiSelectExecuteHandler\"), \" to open this layer with a specified config from a menu item when it's executed.\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"ContextMenuLayer\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"ContextMenuLayer\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/context/ContextMenuLayer.tsx\"\n  }, \"ContextMenuLayer\"), \" is a rather specific layer, just for correctly showing a context menu. It probably won't see much reuse within LaunchMenu for other purpose than showing the context menu, but it could serve as a simple example.\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"MenuSearchLayer\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"MenuSearchLayer\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/menuSearch/MenuSearch.tsx\"\n  }, \"MenuSearch\"), \" layer is a layer that takes care of all searching needs. It will show a search field, and open up a dedicated search menu when a query is entered. The constructor takes a simple configuration:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=MenuSearch.tsx source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/menuSearch/MenuSearch.tsx spoiler\",\n    \"title\": \"MenuSearch.tsx\",\n    \"source\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/menuSearch/MenuSearch.tsx\",\n    \"spoiler\": true\n  }, \"export class MenuSearch extends AbstractUILayer {\\n    /**\\n     * Creates a new SearchField which can be used to search within a menu\\n     * @param data The menu, context and config data\\n     */\\n    public constructor(data: IMenuSearchConfig);\\n    /**\\n     * Retrieves whether the search menu is opened\\n     * @param hook The hook to subscribe to changes\\n     * @returns Whether the search menu is opened\\n     */\\n    public hasSearch(hook: IDataHook): boolean;\\n}\\n\\ntype IMenuSearchConfig = {\\n    /** The highlighter to be used for the search (defaults to plain text) */\\n    highlighter?: IHighlighter;\\n    /** Whether to highlight found patterns (defaults to true) */\\n    usePatternHighlighter?: boolean;\\n    /** Initial search text */\\n    text?: string;\\n    /** Initial text selection */\\n    selection?: ITextSelection;\\n    /** The menu this field should search in */\\n    menu: IMenu;\\n    /** The menu to be shown when no search term is provided */\\n    defaultMenu?: IUILayerMenuData | ((hook: IDataHook) => IUILayerMenuData);\\n    /** Category configuration for the search results */\\n    categoryConfig?: IPrioritizedMenuConfig;\\n    /** The callback to make when an item is executed */\\n    onExecute?: IMenuItemExecuteCallback;\\n    /** Whether to use key handler of items in the menu search menu */\\n    useItemKeyHandlers?: boolean;\\n    /** Whether to use key handlers of items in the context menu of the selected item(s) of the search menu */\\n    useContextItemKeyHandlers?: boolean;\\n    /** The icon to use for the search field, defaults to the search icon */\\n    icon?: IThemeIcon | ReactElement;\\n};\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Usage of this layer can be seen in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#reusing-uilayers\"\n  }, \"Reusing UILayers\"), \" section of this page.\")))));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#ui-layers\" class=\"css-nn640c\"><h1>UI layers</h1></a><p>LaunchMenu manages its UI by keeping track of a stack of &quot;UI layers&quot;. The <a href=\"/docs/concepts/base/iocontext\" class=\"css-0\"><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">IOContext</code></a> is responsible for managing this stack of independent layers. Each layer can provide a subset of 5 different types of data:</p><ul><li>The path/program location (can be a custom component)</li><li>The Menu data</li><li>The field data</li><li>The content data</li><li>The key handler data</li></ul><p>The last four of these can be stacks (as lists) of data themselves. This allows you to reuse other layers within your layer, and essentially nest them logically. Visually they will behave the same as if they were separately opened.</p><p>Below is the exact interface required for UI Layers:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=IUILayer.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/_types/IUILayer.ts\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">IUILayer.ts</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/_types/IUILayer.ts\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss11\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><code class=\"language-ts undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IUILayer</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * A override for the view to use to represent this layer&#x27;s path\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    pathView</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">JSX</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access maybe-class-name\">Element</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Retrieves the path to show to the user representing this layer\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">hook</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The data hook to subscribe to changes\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The path\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">getPath</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IUILayerPathNode</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Retrieves the menu data\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">hook</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The data hook to subscribe to changes\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The menu data of this layer\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">getMenuData</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IUILayerMenuData</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Retrieves the field data\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">hook</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The data hook to subscribe to changes\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The field data of this layer\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">getFieldData</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IUILayerFieldData</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Retrieves the content data\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">hook</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The data hook to subscribe to changes\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The content data of this layer\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">getContentData</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IUILayerContentData</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Retrieves the key listener data\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">hook</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The data hook to subscribe to changes\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The key listener data of this layer\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">getKeyHandlers</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IKeyEventListener</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * A callback for when the UI layer is opened\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">context</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The context that this layer was opened in\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">close</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> A method to close this layer from the given context\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> A callback for when this layer is closed (both when invoked by our close call, or closed external)\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">onOpen</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        context</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IIOContext</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token function-variable\" style=\"color:#393A34\">close</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">Promise</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">Promise</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#0000ff\">void</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">Promise</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></div><p>The <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">onOpen</code> function can be used to prime the layer, and is invoked by the context it&#x27;s added to.</p><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#ui-sections\" class=\"css-nn640c\"><h2>UI sections</h2></a><p>The LaunchMenu has 3 base UI sections, as well as a path section. Each of these base sections can provide additional data that indicate their intentions, but internally only their <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">view</code> and <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">keyHandler</code> is used. You can learn more about the key handlers on the <a href=\"\" class=\"css-0\">key events page</a>.</p><p>All views have the following interface:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=IViewStackItem.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/_types/IViewStackItem.ts\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">IViewStackItem.ts</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/_types/IViewStackItem.ts\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss12\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><code class=\"language-ts undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IViewStackItem</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>close</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">;</span><span> closeTransitionDuration</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">number</span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token maybe-class-name\">IVisibleViewStackItem</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**  An item that can be added to view stacks */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IVisibleViewStackItem</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>          view</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IViewStackItemView</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>          transparent</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>          transitions</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IViewTransitions</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>      </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token maybe-class-name\">IViewStackItemView</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The view of a view stack item */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IViewStackItemView</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#36acaa\">LFC</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token maybe-class-name\">IViewStackItemProps</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#36acaa\">JSX</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access maybe-class-name\">Element</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></div><p>With the supporting transitions type:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=IViewTransitions.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/_types/IViewTransitions.ts spoiler\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">IViewTransitions.ts</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/_types/IViewTransitions.ts\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss13\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><details><summary class=\"css-1iuj5ih\">View code</summary> <code class=\"language-ts undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\"> * The transition components to use to change the views\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IViewTransitions</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The opening transition type */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token maybe-class-name\">Open</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">FC</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token maybe-class-name\">IOpenTransitionProps</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The changing transition type */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token maybe-class-name\">Change</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">FC</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token maybe-class-name\">IChangeTransitionProps</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The closing transition type */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token maybe-class-name\">Close</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">FC</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token maybe-class-name\">ICloseTransitionProps</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IOpenTransitionProps</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The callback when the transition finishes */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    onComplete</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The child to open */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    children</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">ReactNode</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to activate the transition, defaults to true */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    activate</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IChangeTransitionProps</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The callback when the transition finishes */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    onComplete</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The children to transition through to the last child */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    children</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">ReactNode</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to activate the transition, defaults to true */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    activate</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">ICloseTransitionProps</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The callback when the transition finishes */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    onComplete</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The child to close */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    children</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">ReactNode</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to activate the transition, defaults to true */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    activate</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></details></div><p>We can infer 3 main types of views from this interface:</p><ul><li>A view that simply closes the whole section by specifying <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">{close:&nbsp;true}</code></li><li>A simple React component or element view by providing a component or element</li><li>An advanced React component or element view by providing an object with <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">{view:&nbsp;myView}</code></li></ul><p>When the last type of view is provided, we can indicate that the view may be transparent by specifying property <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">transparent</code> to be true. This makes sure that the element below isn&#x27;t hidden. We can also supply custom transitions for when the view is opened, closed, or swapped out for another view.</p><p>LaunchMenu already contains 3 different types of built-in transition components:</p><ul><li><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">InstantOpenTransition</code>: Essentially don&#x27;t apply a transition at all, instantly update the view</li><li><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">FadeOpenTransition</code>: Increase the opacity from 0 to 1 for a smooth fade</li><li><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">SlideOpenTransition</code>: Slide the element from outside the section into the section. This comes in 4 pre-configured flavors:<ul><li><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">SlideRightOpenTransition</code></li><li><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">SlideLeftOpenTransition</code></li><li><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">SlideUpOpenTransition</code></li><li><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">SlideDownOpenTransition</code></li></ul></li></ul><p>In all of these types <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">Open</code> can be swapped out for <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">Close</code> and <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">Change</code> for their corresponding transitions.</p><p>And advanced view may look as follows:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=viewExample.tsx\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">viewExample.tsx</div><div class=\"MuiBox-root jss14\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><code class=\"language-tsx undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">const</span><span> myView</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IVisibleViewStackItem</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    view</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#800000\">div</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token plain-text\">I like trains</span><span class=\"token\" style=\"color:#393A34\">&lt;/</span><span class=\"token\" style=\"color:#800000\">div</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    transparent</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    transitions</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token maybe-class-name\">Open</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">FadeOpenTransition</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token maybe-class-name\">Close</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">FadeCloseTransition</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></div><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#data-storage\" class=\"css-nn640c\"><h3>Data storage</h3></a><p>Note that <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">useState</code> and other component based state management should be avoided because of how views are managed. Views may be removed from both the virtual and real dom at any point, if they are covered by other layers on top. This means that when you return to this view, it will be instantiated from scratch and thus not maintain its state.</p><p>Data storage should therefor be done in react life-cycle independent facilities, such as using <a href=\"https://tarvk.github.io/model-react/examples/build/#Field\" class=\"css-0\">model-react fields</a>.</p><p>This choice may be worth reconsidering, but so far it hasn&#x27;t been problematic in my experience.</p></section></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#paths\" class=\"css-nn640c\"><h2>Paths</h2></a><p>UI layers can specify a path to give the user a rough idea of where in the application they are. This helps to visualize how many UI layers are opened below the current layer. The path specified by an <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">IUILayer</code> may be any path at all, and is a simple string. When you make a UI layer that extends <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">AbstractUILayer</code> you&#x27;re however supposed to specify relative paths. These paths are automatically merged with the path of the layer below to obtain the absolute path. In these relative paths, you can use <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">..</code> to remove the last item of the parent path, and <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">.</code> to add yourself to to the same path as the parent.</p><p>Below is an example showing some paths specified to a <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">UILayer</code> instance, which extends <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">AbstractUILayer</code>:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerPath\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">src/index.tsx</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerPath\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss15\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><code class=\"language-ts undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">default</span><span> </span><span class=\"token\" style=\"color:#0000ff\">declare</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    info</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    settings</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">async</span><span> </span><span class=\"token\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>context</span><span class=\"token\" style=\"color:#393A34\">,</span><span> onClose</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Add `Example` and `oranges` to the previous path (which was empty)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">await</span><span> context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>menu</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Menu</span><span class=\"token\" style=\"color:#393A34\">(</span><span>context</span><span class=\"token\" style=\"color:#393A34\">,</span><span> items</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span> onClose</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Example/oranges&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Remove the last item from the previous path, add `something`</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">await</span><span> context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>menu</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Menu</span><span class=\"token\" style=\"color:#393A34\">(</span><span>context</span><span class=\"token\" style=\"color:#393A34\">,</span><span> items</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span> onClose</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;../something&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Don&#x27;t change the path, but indicate that this layer belongs to the same path now</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">await</span><span> context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>menu</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Menu</span><span class=\"token\" style=\"color:#393A34\">(</span><span>context</span><span class=\"token\" style=\"color:#393A34\">,</span><span> items</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span> onClose</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;.&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></div><p>When this example is opened, 3 layers are added to the context. You will see that when you exit out of the top layer, the path doesn&#x27;t actually change. This is because the third item didn&#x27;t add anything to the path. When we exit out of the second layer, you will see that <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">&#34;something&#34;</code> is replaced with <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">&#34;oranges&#34;</code>. This is because the top layer has the path <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">&#34;example/oranges&#34;</code> but the second layer removed the top <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">&#34;oranges&#34;</code> and added <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">&#34;something&#34;</code> to it.</p></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#uilayer-class\" class=\"css-nn640c\"><h2>UILayer class</h2></a><p>A standard UILayer class is provided that can be used to easily construct a UILayer from a collection of separate components. This class will also supplement your data to the best of its abilities using default implementations and features:</p><ul><li>Model completion: If you provide an <a href=\"/docs/concepts/ui/menu\" class=\"css-0\"><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">IMenu</code></a> -, <a href=\"/docs/concepts/ui/textfield\" class=\"css-0\"><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">ITextField</code></a> -, or <a href=\"/docs/concepts/ui/content\" class=\"css-0\"><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">IContent</code></a> data model, standard key handlers and views are automatically added if absent to make your data interactive and visualize it</li><li>Searchable menu: If you provide an <a href=\"/docs/concepts/ui/menu\" class=\"css-0\"><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">IMenu</code></a> data model, it will automatically add a searchfield to search in that menu unless <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">searchable</code> is explicitly set to false</li><li>Menu content: If you provide an <a href=\"/docs/concepts/ui/menu\" class=\"css-0\"><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">IMenu</code></a> data model, it will automatically show the content of the selected menu item, unless <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">hideItemContent</code> is explicitly set to true</li><li>Overlays: Transparent overlays are automatically added for sections that no content was provided for, to indicate that data doesn&#x27;t belong to this layer</li><li>Key barrier: The opened UILayer automatically prevents layers below from receiving key events</li></ul><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#interface\" class=\"css-nn640c\"><h3>Interface</h3></a><p>Below is the exact interface of the data that can be passed to the UILayer constructor:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=UILayer.ts source source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/standardUILayer/UILayer.tsx\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">UILayer.ts</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/standardUILayer/UILayer.tsx\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss16\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><code class=\"language-ts undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">class</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span> </span><span class=\"token\" style=\"color:#0000ff\">extends</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UnifiedAbstractUILayer</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>     </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Creates a new standard UILayer\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">data</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The data to create the layer from\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">config</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> Base ui layer configuration\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#0000ff\">constructor</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        data</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IStandardUILayerData</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token maybe-class-name\">IStandardUILayerData</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        config</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IUILayerBaseConfig</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span> </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token spread\" style=\"color:#393A34\">...</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span></span></code></div><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=IStandardUILayerData.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/standardUILayer/_types/IStandardUILayerData.ts spoiler\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">IStandardUILayerData.ts</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/standardUILayer/_types/IStandardUILayerData.ts\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss17\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><details><summary class=\"css-1iuj5ih\">View code</summary> <code class=\"language-ts undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IStandardUILayerData</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token maybe-class-name\">IStandardUILayerDataObject</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>          context</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IIOContext</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>          </span><span class=\"token function-variable\" style=\"color:#393A34\">close</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>      </span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token maybe-class-name\">IStandardUILayerDataObject</span><span> </span><span class=\"token\" style=\"color:#393A34\">&amp;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>onClose</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">Promise</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token maybe-class-name\">IUILayer</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The format for one of the layer&#x27;s objects */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IStandardUILayerDataObject</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Menu</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The menu&#x27;s view */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    menuView</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IViewStackItem</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The menu data structure */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    menu</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IMenu</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The menu&#x27;s key handler */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    menuHandler</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IKeyEventListener</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The callback to perform when an item in the menu is executed */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    onExecute</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IMenuItemExecuteCallback</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether a search field should be generated for the passed menu (defaults to true) */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    searchable</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether the content of this menu should be displayed */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    hideItemContent</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to destroy the menu when closing this layer (defaults to true) */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    destroyOnClose</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Field</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The field&#x27;s view */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    fieldView</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IViewStackItem</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The field data structure */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    field</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">ITextField</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The field&#x27;s key handler */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    fieldHandler</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IKeyEventListener</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The highlighter to use for the field if any */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    highlighter</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IHighlighter</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The icon to show at the start of the field */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    icon</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IThemeIcon</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token maybe-class-name\">ReactElement</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Content</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The content&#x27;s view */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    contentView</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IViewStackItem</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#0000ff\">undefined</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The content data structure */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    content</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IContent</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The content&#x27;s key handler */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    contentHandler</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IKeyEventListener</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Shared</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The overlay group to use, making sure that only the bottom view with the same group in a continuous sequence is shown */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    overlayGroup</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">Symbol</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to prevent the layer from closing when the user uses their back key, defaults to whether a menu is present */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    handleClose</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></details></div><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=IUILayerBaseConfig source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/_types/IUILayerBaseConfig.ts spoiler\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">IUILayerBaseConfig</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/_types/IUILayerBaseConfig.ts\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss18\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><details><summary class=\"css-1iuj5ih\">View code</summary> <code class=\"language-ts undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IUILayerBaseConfig</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The relative input path, defaults to &quot;.&quot; */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    path</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to show a semi transparent overlay for sections without content, defaults to true */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    showNodataOverlay</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to catch all key events and prevent lower layers from catching them, defaults to true */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    catchAllKeys</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></details></div></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#model-completion\" class=\"css-nn640c\"><h3>Model completion</h3></a><p>Whenever a <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">IMenu</code> -, <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">ITextField</code> -, or <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">IContent</code> instance is passed to the UILayer, the layer will automatically generate the corresponding standard views and key handlers. You can also provide these manually, by specifying <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">menuView</code> and <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">menuHandler</code> or the equivalent properties for the other types.</p><p>The generated key handlers can take care of automatically closing the layer and calling <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">onClose</code> too, if <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">handleClose</code> is set to true. <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">handleClose</code> defaults to false for provided field and content instances, but defaults to true if a menu is present.</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerModelCompletion\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">src/index.tsx</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerModelCompletion\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss19\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><code class=\"language-tsx undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">default</span><span> </span><span class=\"token\" style=\"color:#0000ff\">declare</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    info</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    settings</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\" style=\"color:#393A34\">{</span><span class=\"token parameter\">context</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> onClose</span><span class=\"token parameter\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> field </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">TextField</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;Bob&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>start</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">3</span><span class=\"token\" style=\"color:#393A34\">,</span><span> end</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">3</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> content </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Content</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">Loader</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token parameter\">h</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> field</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span>h</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">&lt;/</span><span class=\"token\" style=\"color:#2B91AF\">Loader</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>field</span><span class=\"token\" style=\"color:#393A34\">,</span><span> content</span><span class=\"token\" style=\"color:#393A34\">,</span><span> handleClose</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">,</span><span> onClose</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Example&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></div><p>This example simply opens up a text field and content with the same text as the field whenever the example applet is opened.</p><p>To learn more about the used views and handlers, check the the corresponding section for each of the UI types:</p><ul><li><a href=\"/docs/concepts/ui/menu\" class=\"css-0\">Menu</a></li><li><a href=\"/docs/concepts/ui/textfield\" class=\"css-0\">TextField</a></li><li><a href=\"/docs/concepts/ui/content\" class=\"css-0\">Content</a></li></ul></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#searchable-menu\" class=\"css-nn640c\"><h3>Searchable menu</h3></a><p>By default a menu opened by a <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">UILayer</code> is searchable. This is achieved by using the <a href=\"#MenuSearchLayer\" class=\"css-0\"><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">MenuSearchLayer</code></a>. This may be unnecessary if you handle your own search, or use the text field for something else. We however recommend to allow the user to search at all time, to improve usage efficiency.</p><p>We can easily stop a menu from being searched, by specifying <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">searchable:&nbsp;false</code>:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerSearching\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">src/index.tsx</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerSearching\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss20\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><code class=\"language-ts undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">default</span><span> </span><span class=\"token\" style=\"color:#0000ff\">declare</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    info</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    settings</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">async</span><span> </span><span class=\"token\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>context</span><span class=\"token\" style=\"color:#393A34\">,</span><span> onClose</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> menu </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Menu</span><span class=\"token\" style=\"color:#393A34\">(</span><span>context</span><span class=\"token\" style=\"color:#393A34\">,</span><span> items</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">await</span><span> context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>menu</span><span class=\"token\" style=\"color:#393A34\">,</span><span> onClose</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Example searchable&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">await</span><span> context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span>menu</span><span class=\"token\" style=\"color:#393A34\">,</span><span> searchable</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">false</span><span class=\"token\" style=\"color:#393A34\">,</span><span> destroyOnClose</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">false</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Example not searchable&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></div><p>In this example, whenever you open the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">example</code> applet, it will add 2 UILayers. The first UILayer won&#x27;t be searchable. But when that&#x27;s exited using the back key (<style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">esc</code> by default), we will enter the same menu but now in searchable form.</p><p><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">destroyOnClose:&nbsp;false</code> is specified on the second layer, because we don&#x27;t want to destroy the menu when we exit the layer, since it&#x27;s also used by the layer below.</p></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#menu-content\" class=\"css-nn640c\"><h3>Menu content</h3></a><p>Any menu opened by a <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">UILayer</code> will automatically show the selected item&#x27;s content in the content area. This content will override the content that was provided separately, unless <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">hideItemContent:&nbsp;true</code> is supplied.</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerMenuContent\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">src/index.tsx</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerMenuContent\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss21\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><code class=\"language-tsx undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">const</span><span> items </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">createStandardMenuItem</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        name</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Hello world&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        content</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#800000\">div</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token plain-text\">hoi</span><span class=\"token\" style=\"color:#393A34\">&lt;/</span><span class=\"token\" style=\"color:#800000\">div</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token function-variable\" style=\"color:#393A34\">onExecute</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">alert</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;Hello!&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">createStandardMenuItem</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        name</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Bye world&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token function-variable\" style=\"color:#393A34\">onExecute</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">alert</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;Bye!&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">default</span><span> </span><span class=\"token\" style=\"color:#0000ff\">declare</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    info</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    settings</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\" style=\"color:#393A34\">{</span><span class=\"token parameter\">context</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> onClose</span><span class=\"token parameter\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    menu</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Menu</span><span class=\"token\" style=\"color:#393A34\">(</span><span>context</span><span class=\"token\" style=\"color:#393A34\">,</span><span> items</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    content</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Content</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">Box</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#ff0000\">background</span><span class=\"token attr-equals\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#393A34\">&quot;</span><span class=\"token\" style=\"color:#0000ff\">secondary</span><span class=\"token\" style=\"color:#393A34\">&quot;</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token plain-text\">Super cool example</span><span class=\"token\" style=\"color:#393A34\">&lt;/</span><span class=\"token\" style=\"color:#2B91AF\">Box</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    onClose</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Example&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></div><p>Here when we open the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">example</code> applet, we can see how the item&#x27;s content animates in and out of view as we select and deselect the item.</p></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#overlays\" class=\"css-nn640c\"><h3>Overlays</h3></a><p>A somewhat advanced concept is the concept of overlays. The premise is quite simple, and sounds like it shouldn&#x27;t require special behavior. Whenever we open a UILayer and some section such as <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">content</code> is missing, we still want to show the content of the layer below, but we want to indicate it doesn&#x27;t belong to this layer. This can easily be achieved by adding a transparent component on top of this content, allowing the user to still see the content below while visually separating it from this layer.</p><p>This simple idea however leaves us with 1 problem: when we open multiple layers that all have an overlay for the content, the content below becomes increasingly less visible. This isn&#x27;t a huge problem, but still not favorable in our opinion. This is why we added the concept of <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">overlayGroups</code>. These groups are simply JavaScript symbols, specifying some group identifier. Then when we have multiple views of the same group stacked on top of each other, only the bottom view belonging to this group will be rendered.</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerOverlays spoiler\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">src/index.tsx</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerOverlays\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss22\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><details><summary class=\"css-1iuj5ih\">View code</summary> <code class=\"language-tsx undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">default</span><span> </span><span class=\"token\" style=\"color:#0000ff\">declare</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    info</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    settings</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">async</span><span> </span><span class=\"token\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\" style=\"color:#393A34\">{</span><span class=\"token parameter\">context</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> onClose</span><span class=\"token parameter\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> menu </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Menu</span><span class=\"token\" style=\"color:#393A34\">(</span><span>context</span><span class=\"token\" style=\"color:#393A34\">,</span><span> items</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Don&#x27;t use overlays</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">await</span><span> context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>menu</span><span class=\"token\" style=\"color:#393A34\">,</span><span> searchable</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">false</span><span class=\"token\" style=\"color:#393A34\">,</span><span> onClose</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Layer 1&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                showNodataOverlay</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">false</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Use default overlays</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">await</span><span> context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span>menu</span><span class=\"token\" style=\"color:#393A34\">,</span><span> searchable</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">false</span><span class=\"token\" style=\"color:#393A34\">,</span><span> destroyOnClose</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">false</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Layer 2&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Add a field view, but use the overlay group</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">await</span><span> context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">[</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        overlayGroup</span><span class=\"token\" style=\"color:#393A34\">:</span><span> standardOverlayGroup</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        fieldView</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">FillBox</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#ff0000\">background</span><span class=\"token attr-equals\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#393A34\">&quot;</span><span class=\"token\" style=\"color:#0000ff\">primary</span><span class=\"token\" style=\"color:#393A34\">&quot;</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#ff0000\">opacity</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#36acaa\">0.5</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#393A34\">/&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">{</span><span>menu</span><span class=\"token\" style=\"color:#393A34\">,</span><span> searchable</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">false</span><span class=\"token\" style=\"color:#393A34\">,</span><span> destroyOnClose</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">false</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Layer 3&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    showNodataOverlay</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">false</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// don&#x27;t use default overlays</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Add a field overlay but add custom overlay group</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> group </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">Symbol</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;new group&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">await</span><span> context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">[</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        overlayGroup</span><span class=\"token\" style=\"color:#393A34\">:</span><span> group</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        fieldView</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            view</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                                </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">FillBox</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#ff0000\">background</span><span class=\"token attr-equals\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#393A34\">&quot;</span><span class=\"token\" style=\"color:#0000ff\">primary</span><span class=\"token\" style=\"color:#393A34\">&quot;</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#ff0000\">opacity</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#36acaa\">0.5</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#393A34\">/&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            transparent</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">{</span><span>menu</span><span class=\"token\" style=\"color:#393A34\">,</span><span> searchable</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">false</span><span class=\"token\" style=\"color:#393A34\">,</span><span> destroyOnClose</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">false</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Layer 4&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    showNodataOverlay</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">false</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// don&#x27;t use default overlays</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Add another field overlay but use same custom overlay group</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">await</span><span> context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">[</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        overlayGroup</span><span class=\"token\" style=\"color:#393A34\">:</span><span> group</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        fieldView</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            view</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                                </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">FillBox</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#ff0000\">background</span><span class=\"token attr-equals\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#393A34\">&quot;</span><span class=\"token\" style=\"color:#0000ff\">secondary</span><span class=\"token\" style=\"color:#393A34\">&quot;</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#ff0000\">opacity</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#36acaa\">0.5</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#393A34\">/&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            transparent</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">{</span><span>menu</span><span class=\"token\" style=\"color:#393A34\">,</span><span> searchable</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">false</span><span class=\"token\" style=\"color:#393A34\">,</span><span> destroyOnClose</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">false</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Layer 5&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    showNodataOverlay</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">false</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// don&#x27;t use default overlays</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></details></div><p>In this example, whenever the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">example</code> applet is opened, it will add 5 layers to the context. The menu content it adds can be ignored, it&#x27;s mostly about the overlays that are visible in the field section.</p><ul><li>When you exit layer 5, you will see that it doesn&#x27;t visually add an overlay, despite specifying a view for the field. This is because layer 4 and 5 specify an overlay using the same overlayGroup, so only the bottom consecutive one (layer 4) will show the overlay.</li><li>When you exit layer 4, you will see that the custom field overlay it added disappears.</li><li>When you exit layer 3, you will see that it doesn&#x27;t visually add an overlay, despite specifying a view for the field. This is because layer 3 uses the default overlay group, which is also used by layer 2.</li><li>When you exit layer 2, you will see that the overlay it added by default also disappears.</li><li>When you exit layer 1, you will see that no overlay disappears, since we disabled the default overlay for layer 1.</li></ul><p>These visual overlays are independent of keyboard interaction, which is addressed in the section below.</p></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#key-barrier\" class=\"css-nn640c\"><h3>Key barrier</h3></a><p>By default any UILayer will catch all events that are emitted. This is to prevent things in other layers from accidentally triggering. There are however several situations in which you do want things in layers below to trigger, which is why you can explicitly disable this by specifying <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">catchAllKeys:&nbsp;false</code>.</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerKeyBarrier spoiler\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">src/index.tsx</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerKeyBarrier\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss23\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><details><summary class=\"css-1iuj5ih\">View code</summary> <code class=\"language-tsx undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">default</span><span> </span><span class=\"token\" style=\"color:#0000ff\">declare</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    info</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    settings</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">async</span><span> </span><span class=\"token\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\" style=\"color:#393A34\">{</span><span class=\"token parameter\">context</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> onClose</span><span class=\"token parameter\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> back </span><span class=\"token\" style=\"color:#393A34\">=</span><span> context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">settings</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span>baseSettings</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">controls</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">common</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">back</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> </span><span class=\"token function-variable\" style=\"color:#393A34\">handleClose</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>event</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">KeyEvent</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token function-variable\" style=\"color:#393A34\">close</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">if</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>back</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">matches</span><span class=\"token\" style=\"color:#393A34\">(</span><span>event</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">close</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">await</span><span> context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\">context</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> close</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    onClose</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    contentView</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#800000\">div</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token plain-text\">Layer 1</span><span class=\"token\" style=\"color:#393A34\">&lt;/</span><span class=\"token\" style=\"color:#800000\">div</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token function-variable\" style=\"color:#393A34\">contentHandler</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token parameter\">event</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#0000ff\">if</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">handleClose</span><span class=\"token\" style=\"color:#393A34\">(</span><span>event</span><span class=\"token\" style=\"color:#393A34\">,</span><span> close</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#0000ff\">if</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>event</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">matches</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;1&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            </span><span class=\"token\" style=\"color:#393A34\">alert</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;Detected 1&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span>path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Layer 1&quot;</span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Open up a layer above that doesn&#x27;t capture all events</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">await</span><span> context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\">context</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> close</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    contentView</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#800000\">div</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token plain-text\">Layer 2</span><span class=\"token\" style=\"color:#393A34\">&lt;/</span><span class=\"token\" style=\"color:#800000\">div</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token function-variable\" style=\"color:#393A34\">contentHandler</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token parameter\">event</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#0000ff\">if</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">handleClose</span><span class=\"token\" style=\"color:#393A34\">(</span><span>event</span><span class=\"token\" style=\"color:#393A34\">,</span><span> close</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#0000ff\">if</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>event</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">matches</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;2&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            </span><span class=\"token\" style=\"color:#393A34\">alert</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;Detected 2&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Layer 2&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    catchAllKeys</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">false</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Open up a layer that does capture all events (defaults to capturing all)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">await</span><span> context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\">context</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> close</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    contentView</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#800000\">div</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token plain-text\">Layer 3</span><span class=\"token\" style=\"color:#393A34\">&lt;/</span><span class=\"token\" style=\"color:#800000\">div</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token function-variable\" style=\"color:#393A34\">contentHandler</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token parameter\">event</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#0000ff\">if</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">handleClose</span><span class=\"token\" style=\"color:#393A34\">(</span><span>event</span><span class=\"token\" style=\"color:#393A34\">,</span><span> close</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#0000ff\">if</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>event</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">matches</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;3&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            </span><span class=\"token\" style=\"color:#393A34\">alert</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;Detected 3&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span>path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Layer 3&quot;</span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></details></div><p>In this example, whenever the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">example</code> applet is opened, it will add 3 layers to the context. You will notice that both pressing <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">3</code> will open an alert box, but pressing <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">1</code> and <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">2</code> won&#x27;t do this. This is because layer 3 doesn&#x27;t specify <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">catchAllKeys:&nbsp;false</code> and thus catches all keys by default. When we exit layer 3, you will notice that both <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">1</code> and <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">2</code> will open alert boxes. This is because layer 2 allows events to sink down, since we specified <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">catchAllKeys:&nbsp;false</code>.</p><p>Note that in this example we have to manually handle closing in our keyhandler, since we didn&#x27;t generate any standard key handlers that could take care of this for us.</p></section></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#custom-uilayer\" class=\"css-nn640c\"><h2>Custom UILayer</h2></a><p>You can make a <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">IUILayer</code> totally from scratch if you like, and implement the entire interface from scratch. We however also have a <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">AbstractUILayer</code> class which takes care of a couple of common things:</p><ul><li>Making supplied paths relative to the layer on top</li><li>Adding overlays to missing sections</li><li>Showing the content of the selected menu item if present</li><li>Simplify layer initialization</li></ul><p>In the example below, we created a custom <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">GambleLayer</code> which can take care of providing a view and key handlers for a given menu. The UI provided for the menu is quite custom and rather special however, since you can no longer navigate with the up and down keys, and have to use a &#x27;launcher&#x27; instead using the space bar.</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerCustomLayer spoiler\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">src/index.tsx</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerCustomLayer\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss24\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><details><summary class=\"css-1iuj5ih\">View code</summary> <code class=\"language-tsx undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">const</span><span> items </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">Array</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#36acaa\">30</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">fill</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">map</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\">_</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> i</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">createStandardMenuItem</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        name</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token template-string template-punctuation\" style=\"color:#A31515\">`</span><span class=\"token template-string\" style=\"color:#A31515\">Item </span><span class=\"token template-string interpolation interpolation-punctuation\" style=\"color:#393A34\">${</span><span class=\"token template-string interpolation\">i</span><span class=\"token template-string interpolation interpolation-punctuation\" style=\"color:#393A34\">}</span><span class=\"token template-string template-punctuation\" style=\"color:#A31515\">`</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token function-variable\" style=\"color:#393A34\">onExecute</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">alert</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token template-string template-punctuation\" style=\"color:#A31515\">`</span><span class=\"token template-string\" style=\"color:#A31515\">Activated </span><span class=\"token template-string interpolation interpolation-punctuation\" style=\"color:#393A34\">${</span><span class=\"token template-string interpolation\">i</span><span class=\"token template-string interpolation interpolation-punctuation\" style=\"color:#393A34\">}</span><span class=\"token template-string template-punctuation\" style=\"color:#A31515\">`</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">class</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">GambleLayer</span><span> </span><span class=\"token\" style=\"color:#0000ff\">extends</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">AbstractUILayer</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">protected</span><span> menu</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IMenu</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">protected</span><span> data </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Field</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span> </span><span class=\"token\" style=\"color:#0000ff\">as</span><span> </span><span class=\"token maybe-class-name\">IUILayerMenuData</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">protected</span><span> charge </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        chargeSpeed</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">0.05</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        minCharge</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">0.3</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        decay</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">0.03</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        speed</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Creates a new menu gambling layer\n</span><span style=\"flex-wrap:wrap\">     * @param menu The menu that the layer is for\n</span><span style=\"flex-wrap:wrap\">     * @param config The base layer config\n</span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#0000ff\">constructor</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\">menu</span><span class=\"token parameter\" style=\"color:#393A34\">:</span><span class=\"token parameter\"> </span><span class=\"token parameter maybe-class-name\">IMenu</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> config</span><span class=\"token parameter\" style=\"color:#393A34\">:</span><span class=\"token parameter\"> </span><span class=\"token parameter maybe-class-name\">IUILayerBaseConfig</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">super</span><span class=\"token\" style=\"color:#393A34\">(</span><span>config</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">menu</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> menu</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/** @override */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">protected</span><span> </span><span class=\"token\" style=\"color:#393A34\">initialize</span><span class=\"token\" style=\"color:#393A34\">(</span><span>context</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IIOContext</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token function-variable\" style=\"color:#393A34\">close</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> handler </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">getMenuHandler</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">menu</span><span class=\"token\" style=\"color:#393A34\">,</span><span> close</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> view </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">getMenuUI</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">menu</span><span class=\"token\" style=\"color:#393A34\">,</span><span> handler</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">getCharge</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">data</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">set</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">[</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#36acaa\">ID</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">uuid</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                menu</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">menu</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                menuView</span><span class=\"token\" style=\"color:#393A34\">:</span><span> view</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                menuHandler</span><span class=\"token\" style=\"color:#393A34\">:</span><span> handler</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">handler</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> handler</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">destroy</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Creates the UI for the given menu\n</span><span style=\"flex-wrap:wrap\">     * @param menu The menu to visualize\n</span><span style=\"flex-wrap:wrap\">     * @param getCharge The function to retrieve the current charge\n</span><span style=\"flex-wrap:wrap\">     * @returns The view element\n</span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">protected</span><span> </span><span class=\"token\" style=\"color:#393A34\">getMenuUI</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        menu</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IMenu</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        getCharge</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataRetriever</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">JSX</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access maybe-class-name\">Element</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">Box</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#ff0000\">display</span><span class=\"token attr-equals\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#393A34\">&quot;</span><span class=\"token\" style=\"color:#0000ff\">flex</span><span class=\"token\" style=\"color:#393A34\">&quot;</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#ff0000\">flexDirection</span><span class=\"token attr-equals\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#393A34\">&quot;</span><span class=\"token\" style=\"color:#0000ff\">column</span><span class=\"token\" style=\"color:#393A34\">&quot;</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#ff0000\">height</span><span class=\"token attr-equals\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#393A34\">&quot;</span><span class=\"token\" style=\"color:#0000ff\">100%</span><span class=\"token\" style=\"color:#393A34\">&quot;</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token plain-text\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token plain-text\">                </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">Loader</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token plain-text\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token plain-text\">                    </span><span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token parameter\">h</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">Box</span><span class=\"token\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#800000\">                            </span><span class=\"token\" style=\"color:#ff0000\">height</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#36acaa\">10</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#800000\">                            </span><span class=\"token\" style=\"color:#ff0000\">width</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript template-string template-punctuation\" style=\"color:#800000\">`</span><span class=\"token script language-javascript template-string interpolation interpolation-punctuation\" style=\"color:#800000\">${</span><span class=\"token script language-javascript template-string interpolation known-class-name\" style=\"color:#800000\">Math</span><span class=\"token script language-javascript template-string interpolation\" style=\"color:#800000\">.</span><span class=\"token script language-javascript template-string interpolation method property-access\" style=\"color:#800000\">round</span><span class=\"token script language-javascript template-string interpolation\" style=\"color:#800000\">(</span><span class=\"token script language-javascript template-string interpolation\" style=\"color:#800000\">10</span><span class=\"token script language-javascript template-string interpolation\" style=\"color:#800000\"> </span><span class=\"token script language-javascript template-string interpolation\" style=\"color:#800000\">+</span><span class=\"token script language-javascript template-string interpolation\" style=\"color:#800000\"> </span><span class=\"token script language-javascript template-string interpolation\" style=\"color:#800000\">getCharge</span><span class=\"token script language-javascript template-string interpolation\" style=\"color:#800000\">(</span><span class=\"token script language-javascript template-string interpolation\" style=\"color:#800000\">h</span><span class=\"token script language-javascript template-string interpolation\" style=\"color:#800000\">)</span><span class=\"token script language-javascript template-string interpolation\" style=\"color:#800000\"> </span><span class=\"token script language-javascript template-string interpolation\" style=\"color:#800000\">*</span><span class=\"token script language-javascript template-string interpolation\" style=\"color:#800000\"> </span><span class=\"token script language-javascript template-string interpolation\" style=\"color:#800000\">90</span><span class=\"token script language-javascript template-string interpolation\" style=\"color:#800000\">)</span><span class=\"token script language-javascript template-string interpolation interpolation-punctuation\" style=\"color:#800000\">}</span><span class=\"token script language-javascript template-string\" style=\"color:#800000\">%</span><span class=\"token script language-javascript template-string template-punctuation\" style=\"color:#800000\">`</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#800000\">                            </span><span class=\"token\" style=\"color:#ff0000\">css</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#800000\">backgroundColor</span><span class=\"token script language-javascript\" style=\"color:#393A34\">:</span><span class=\"token script language-javascript\" style=\"color:#800000\"> </span><span class=\"token script language-javascript\" style=\"color:#A31515\">&quot;red&quot;</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#800000\">                        </span><span class=\"token\" style=\"color:#393A34\">/&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token plain-text\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token plain-text\">                </span><span class=\"token\" style=\"color:#393A34\">&lt;/</span><span class=\"token\" style=\"color:#2B91AF\">Loader</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token plain-text\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token plain-text\">                </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">Box</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#ff0000\">flexGrow</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#36acaa\">1</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#ff0000\">position</span><span class=\"token attr-equals\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#393A34\">&quot;</span><span class=\"token\" style=\"color:#0000ff\">relative</span><span class=\"token\" style=\"color:#393A34\">&quot;</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token plain-text\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token plain-text\">                    </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">MenuView</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#ff0000\">menu</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#800000\">menu</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#393A34\">/&gt;</span><span class=\"token plain-text\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token plain-text\">                </span><span class=\"token\" style=\"color:#393A34\">&lt;/</span><span class=\"token\" style=\"color:#2B91AF\">Box</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token plain-text\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token plain-text\">            </span><span class=\"token\" style=\"color:#393A34\">&lt;/</span><span class=\"token\" style=\"color:#2B91AF\">Box</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Retrieves the key handler for a menu\n</span><span style=\"flex-wrap:wrap\">     * @param menu The menu to create the handler for\n</span><span style=\"flex-wrap:wrap\">     * @param onExit The function to execute when receiving an exit command\n</span><span style=\"flex-wrap:wrap\">     * @returns The key listener\n</span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">protected</span><span> </span><span class=\"token\" style=\"color:#393A34\">getMenuHandler</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        menu</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IMenu</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token function-variable\" style=\"color:#393A34\">onExit</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>getCharge</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataRetriever</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#393A34\">&amp;</span><span> </span><span class=\"token maybe-class-name\">IDisposableKeyEventListener</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> context </span><span class=\"token\" style=\"color:#393A34\">=</span><span> menu</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">getContext</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> controls </span><span class=\"token\" style=\"color:#393A34\">=</span><span> context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">settings</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span>baseSettings</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">controls</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> launchKey </span><span class=\"token\" style=\"color:#393A34\">=</span><span> context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">settings</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span>settings</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">launch</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> fieldSettings </span><span class=\"token\" style=\"color:#393A34\">=</span><span> controls</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">menu</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> launcher </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">setupLauncher</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> items </span><span class=\"token\" style=\"color:#393A34\">=</span><span> menu</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">getItems</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> cursor </span><span class=\"token\" style=\"color:#393A34\">=</span><span> menu</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">getCursor</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> index </span><span class=\"token\" style=\"color:#393A34\">=</span><span> cursor\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">?</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>items</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">indexOf</span><span class=\"token\" style=\"color:#393A34\">(</span><span>cursor</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">+</span><span> </span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">%</span><span> items</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">length</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">if</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>items</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">length</span><span> </span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">)</span><span> menu</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">setCursor</span><span class=\"token\" style=\"color:#393A34\">(</span><span>items</span><span class=\"token\" style=\"color:#393A34\">[</span><span>index</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Setup handlers</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">let</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            handler</span><span class=\"token\" style=\"color:#393A34\">:</span><span> handleItemKeyListeners</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            destroy</span><span class=\"token\" style=\"color:#393A34\">:</span><span> destroyItemListenersHandler</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">setupItemKeyListenerHandler</span><span class=\"token\" style=\"color:#393A34\">(</span><span>menu</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            handler</span><span class=\"token\" style=\"color:#393A34\">:</span><span> handleContextMenu</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            destroy</span><span class=\"token\" style=\"color:#393A34\">:</span><span> destroyContextMenuHandler</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">setupContextMenuHandler</span><span class=\"token\" style=\"color:#393A34\">(</span><span>menu</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            useContextItemKeyHandlers</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token function-variable\" style=\"color:#393A34\">pattern</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> fieldSettings</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">openContextMenu</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Return the listener</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token function-variable\" style=\"color:#393A34\">handler</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#0000ff\">async</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\">e</span><span class=\"token parameter\" style=\"color:#393A34\">:</span><span class=\"token parameter\"> </span><span class=\"token parameter maybe-class-name\">KeyEvent</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#0000ff\">if</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#0000ff\">await</span><span> handleItemKeyListeners</span><span class=\"token\" style=\"color:#393A34\">?.</span><span class=\"token\" style=\"color:#393A34\">(</span><span>e</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#0000ff\">if</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#0000ff\">await</span><span> </span><span class=\"token\" style=\"color:#393A34\">handleContextMenu</span><span class=\"token\" style=\"color:#393A34\">(</span><span>e</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#0000ff\">if</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">handleExecuteInput</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        e</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        menu</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#0000ff\">undefined</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        fieldSettings</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">execute</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#0000ff\">if</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>launchKey</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">matches</span><span class=\"token\" style=\"color:#393A34\">(</span><span>e</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    launcher</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">fire</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> back </span><span class=\"token\" style=\"color:#393A34\">=</span><span> controls</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">common</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">back</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#0000ff\">if</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">handleDeselectInput</span><span class=\"token\" style=\"color:#393A34\">(</span><span>e</span><span class=\"token\" style=\"color:#393A34\">,</span><span> menu</span><span class=\"token\" style=\"color:#393A34\">,</span><span> back</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#0000ff\">if</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>onExit </span><span class=\"token\" style=\"color:#393A34\">&amp;&amp;</span><span> back</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">matches</span><span class=\"token\" style=\"color:#393A34\">(</span><span>e</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">onExit</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token function-variable\" style=\"color:#393A34\">destroy</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                destroyItemListenersHandler</span><span class=\"token\" style=\"color:#393A34\">?.</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">destroyContextMenuHandler</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                launcher</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">destroy</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            getCharge</span><span class=\"token\" style=\"color:#393A34\">:</span><span> launcher</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">getCharge</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Creates the launcher function\n</span><span style=\"flex-wrap:wrap\">     * @param selectNext The function to call to select the next item in the menu\n</span><span style=\"flex-wrap:wrap\">     * @returns The data to manage the launcher\n</span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">protected</span><span> </span><span class=\"token\" style=\"color:#393A34\">setupLauncher</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token function-variable\" style=\"color:#393A34\">selectNext</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        getCharge</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataRetriever</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token function-variable\" style=\"color:#393A34\">destroy</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token function-variable\" style=\"color:#393A34\">fire</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> charge </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Field</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">let</span><span> up </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> chargeIntervalID </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">setInterval</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">let</span><span> value </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">Math</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">max</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">Math</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">min</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    charge</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">+</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>up </span><span class=\"token\" style=\"color:#393A34\">?</span><span> </span><span class=\"token\" style=\"color:#36acaa\">1</span><span> </span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">-</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">*</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">charge</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">chargeSpeed</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#36acaa\">1</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            charge</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">set</span><span class=\"token\" style=\"color:#393A34\">(</span><span>value</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">if</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>value </span><span class=\"token\" style=\"color:#393A34\">==</span><span> </span><span class=\"token\" style=\"color:#36acaa\">0</span><span> </span><span class=\"token\" style=\"color:#393A34\">||</span><span> value </span><span class=\"token\" style=\"color:#393A34\">==</span><span> </span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">)</span><span> up </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">!</span><span>up</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#36acaa\">50</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token function-variable\" style=\"color:#393A34\">getCharge</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token parameter\">h</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> charge</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span>h</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token function-variable\" style=\"color:#393A34\">destroy</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">clearInterval</span><span class=\"token\" style=\"color:#393A34\">(</span><span>chargeIntervalID</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token function-variable\" style=\"color:#393A34\">fire</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#0000ff\">let</span><span> speed </span><span class=\"token\" style=\"color:#393A34\">=</span><span> charge</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">+</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">charge</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">minCharge</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#0000ff\">let</span><span> pos </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> intervalID </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">setInterval</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    speed </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">Math</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">max</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">,</span><span> speed </span><span class=\"token\" style=\"color:#393A34\">-</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">charge</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">decay</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    pos </span><span class=\"token\" style=\"color:#393A34\">+=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">charge</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">speed</span><span> </span><span class=\"token\" style=\"color:#393A34\">*</span><span> speed</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">while</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>pos </span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        pos</span><span class=\"token\" style=\"color:#393A34\">--</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">selectNext</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">if</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>speed </span><span class=\"token\" style=\"color:#393A34\">==</span><span> </span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">clearInterval</span><span class=\"token\" style=\"color:#393A34\">(</span><span>intervalID</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#36acaa\">50</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/** @override */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">getMenuData</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        extendData</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IUILayerMenuData</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IUILayerMenuData</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#0000ff\">super</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">getMenuData</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token spread\" style=\"color:#393A34\">...</span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">data</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token spread\" style=\"color:#393A34\">...</span><span>extendData</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">default</span><span> </span><span class=\"token\" style=\"color:#0000ff\">declare</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    info</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    settings</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\" style=\"color:#393A34\">{</span><span class=\"token parameter\">context</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> onClose</span><span class=\"token parameter\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">GambleLayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Menu</span><span class=\"token\" style=\"color:#393A34\">(</span><span>context</span><span class=\"token\" style=\"color:#393A34\">,</span><span> items</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Example&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">{</span><span>onClose</span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></details></div><p>In this example, whenever the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">example</code> applet is opened, it will open our <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">GambleLayer</code>. You will see a charge bar cycling up and down, and whenever space is pressed the cursor will be launched down. The launch speed depends on the charge amount when the cursor was launched.</p><p>We&#x27;re considering replacing all menus in LaunchMenu with this system in the future, but for now you can reproduce it yourself.</p><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#reusing-uilayers\" class=\"css-nn640c\"><h3>Reusing UILayers</h3></a><p>You can easily reuse existing layers within your custom layer. If you want to use a layer class <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">X</code>, all you have to do is:</p><ul><li>Create an instance <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">x</code> of <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">X</code></li><li>Call <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">onOpen</code> on <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">x</code> whenever your layer is opened, and store the close callback <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">onClose</code></li><li>Call <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">onClose</code> whenever your close callback is executed</li><li>Forward the sections and key handlers from <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">x</code> in your own output</li></ul><p>Since this is still a fair bit of effort, the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">UnifiedAbstractUILayer</code> can be used to take care of this. This layer takes in a single list of section data or sub-layers, and forwards them to the correct sections. This will also automatically take care of sub-layer initialization and disposal.</p><p>The only drawback of this system is that all sections are combined in one list, so whenever your layer adds something to one of the sections, all sections will received an update.</p><p>Below is an example of a custom layer that represents an applet, and makes use of the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">MenuSearch</code> layer to allow for searching:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerReuseLayer\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">src/index.tsx</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/UILayerReuseLayer\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss25\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><code class=\"language-tsx undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">class</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">MyApplication</span><span> </span><span class=\"token\" style=\"color:#0000ff\">extends</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UnifiedAbstractUILayer</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">protected</span><span> data </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Field</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span> </span><span class=\"token\" style=\"color:#0000ff\">as</span><span> </span><span class=\"token maybe-class-name\">IUILayerData</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/** Creates a new cool application thing */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#0000ff\">constructor</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">super</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;My cool example&quot;</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/** @override */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">getAll</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IUILayerData</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">data</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/** @override */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">protected</span><span> </span><span class=\"token\" style=\"color:#393A34\">initialize</span><span class=\"token\" style=\"color:#393A34\">(</span><span>context</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IIOContext</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token function-variable\" style=\"color:#393A34\">close</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Setup menu</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> items </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">createStandardMenuItem</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                name</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Hello world&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token function-variable\" style=\"color:#393A34\">onExecute</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">alert</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;Hello!&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">createStandardMenuItem</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                name</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Bye world&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token function-variable\" style=\"color:#393A34\">onExecute</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">alert</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;Bye!&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> menu </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Menu</span><span class=\"token\" style=\"color:#393A34\">(</span><span>context</span><span class=\"token\" style=\"color:#393A34\">,</span><span> items</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            handler</span><span class=\"token\" style=\"color:#393A34\">:</span><span> menuHandler</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            destroy</span><span class=\"token\" style=\"color:#393A34\">:</span><span> destroyMenuHandler</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">createStandardMenuKeyHandler</span><span class=\"token\" style=\"color:#393A34\">(</span><span>menu</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>onExit</span><span class=\"token\" style=\"color:#393A34\">:</span><span> close</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> menuData </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#36acaa\">ID</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">uuid</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            menu</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            menuView</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">MenuView</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#ff0000\">menu</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#800000\">menu</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#393A34\">/&gt;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            menuHandler</span><span class=\"token\" style=\"color:#393A34\">:</span><span> menuHandler</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Setup a search field + menu by reusing the menu search layer</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> menuSearch </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">MenuSearch</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            menu</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Setup some content</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> content </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Content</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">Box</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token plain-text\">This is a great applet, very useful.</span><span class=\"token\" style=\"color:#393A34\">&lt;/</span><span class=\"token\" style=\"color:#2B91AF\">Box</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> contentHandler </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">createStandardContentKeyHandler</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            content</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\">            context\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> contentData </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#36acaa\">ID</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">uuid</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            content</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            contentView</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">ContentView</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#ff0000\">content</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#800000\">content</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\"> </span><span class=\"token\" style=\"color:#393A34\">/&gt;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            contentHandler</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Set all the data (in the appropriate order, search on top)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">data</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">set</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">[</span><span>menuData</span><span class=\"token\" style=\"color:#393A34\">,</span><span> contentData</span><span class=\"token\" style=\"color:#393A34\">,</span><span> menuSearch</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Return a function that can be invoked to dispose all data</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">destroyMenuHandler</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">default</span><span> </span><span class=\"token\" style=\"color:#0000ff\">declare</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    info</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    settings</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\" style=\"color:#393A34\">{</span><span class=\"token parameter\">context</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> onClose</span><span class=\"token parameter\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">MyApplication</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>onClose</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></div><p>In this example, whenever the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">example</code> applet is opened, it will open our <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">MyApplication</code> layer. This layer will simply show a searchable menu, and some content.</p><p>Note that the above example is meant to show off layer reusing. However because the situation above is rather simple and didn&#x27;t do anything custom for views or handlers, a similar effect could&#x27;ve been achieved using the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">UILayer</code> class:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=UILayerExtendingExample.tsx\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">UILayerExtendingExample.tsx</div><div class=\"MuiBox-root jss26\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><code class=\"language-ts undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">class</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">MyApplication</span><span> </span><span class=\"token\" style=\"color:#0000ff\">extends</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Creates a new cool application thing */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#0000ff\">constructor</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">super</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            context </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                menu</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Menu</span><span class=\"token\" style=\"color:#393A34\">(</span><span>context</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">createStandardMenuItem</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        name</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Hello world&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token function-variable\" style=\"color:#393A34\">onExecute</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">alert</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;Hello!&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">createStandardMenuItem</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        name</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Bye world&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token function-variable\" style=\"color:#393A34\">onExecute</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">alert</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;Bye!&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                content</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">Content</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token maybe-class-name\">Box</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token maybe-class-name\">This</span><span> </span><span class=\"token\" style=\"color:#0000ff\">is</span><span> a great applet</span><span class=\"token\" style=\"color:#393A34\">,</span><span> very useful</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#393A34\">/</span><span class=\"token maybe-class-name\">Box</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">{</span><span>path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;My cool example&quot;</span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span></span></code></div></section></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#types\" class=\"css-nn640c\"><h2>Types</h2></a><p>LaunchMenu has several built-in layers that are used throughout the application, and may also be useable as sub-layers:</p><ul><li><a href=\"#inputlayer\" class=\"css-0\"><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">InputLayer</code></a>: A layer to handle string input prompts</li><li><a href=\"#selectlayer\" class=\"css-0\"><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">SelectLayer</code></a>: A layer to handle 1 item selection input prompts</li><li><a href=\"#multiselectlayer\" class=\"css-0\"><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">MultiSelectLayer</code></a>: A layer to handle multiple item selection input prompts</li><li><a href=\"#contextmenulayer\" class=\"css-0\"><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">ContextMenuLayer</code></a>: A layer that specifies to use the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">contextMenu</code> icon, <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">&#34;Context&#34;</code> path and a slide from the left menu transition</li><li><a href=\"#menusearchlayer\" class=\"css-0\"><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">MenuSearchLayer</code></a>: A layer to handle searching within menus</li></ul><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#inputlayer\" class=\"css-nn640c\"><h3>InputLayer</h3></a><p>The <a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/input/InputLayer.tsx\" class=\"css-0\"><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">InputLayer</code></a> class takes in a <a href=\"https://tarvk.github.io/model-react/examples/build/#Field\" class=\"css-0\">model-react field</a> and a config. When opened, it allows the user to update this field&#x27;s value using a text field.</p><p>Below is the interface of the class:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=InputLayer.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/input/InputLayer.tsx spoiler\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">InputLayer.ts</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/input/InputLayer.tsx\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss27\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><details><summary class=\"css-1iuj5ih\">View code</summary> <code class=\"language-ts undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">class</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">InputLayer</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">extends</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">AbstractUILayer</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Creates a new input field\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">field</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The field to target\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#0000ff\">constructor</span><span class=\"token\" style=\"color:#393A34\">(</span><span>field</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span> </span><span class=\"token\" style=\"color:#0000ff\">extends</span><span> </span><span class=\"token builtin\" style=\"color:#2B91AF\">string</span><span> </span><span class=\"token\" style=\"color:#393A34\">?</span><span> </span><span class=\"token maybe-class-name\">IField</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">never</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Creates a new input field\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">field</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The field to target\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">config</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The configuration for the field\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#0000ff\">constructor</span><span class=\"token\" style=\"color:#393A34\">(</span><span>field</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IField</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">,</span><span> config</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IInputConfig</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#0000ff\">constructor</span><span class=\"token\" style=\"color:#393A34\">(</span><span>field</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IField</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">,</span><span> config</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IInputConfig</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Value helpers</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Retrieves the resulting value if valid, or an error otherwise\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">hook</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The data hook to subscribe to changes\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The resulting value, or error\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">getValue</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">IInputError</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Commits the current text value to the target field, if the input value is valid\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> Whether the input was valid\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">updateField</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Error handling</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Retrieves the input error if any\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">hook</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The hook to subscribe to changes\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The error with the current input if any\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">getError</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">IInputError</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#0000ff\">null</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IInputConfig</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Checks whether the given input is valid */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    checkValidity</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>v</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">IInputError</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#0000ff\">undefined</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The function to transform the field value into a string */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    serialize</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>v</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The function to transform the input string to a valid field value (if the input is valid) */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    deserialize</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>v</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to only update on any valid input, or only when the input field (defaults to true)*/</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    liveUpdate</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to dispatch a command on submit (defaults to false, can&#x27;t be combined with liveUpdate or onSubmit) */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    undoable</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The icon to be shown for the input */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    icon</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IThemeIcon</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token maybe-class-name\">ReactElement</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The highlighter to use for the input */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    highlighter</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IHighlighter</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to allow usage of submit to exit the input, even if the input isn&#x27;t valid (defaults to true) */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    allowSubmitExitOnError</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** A callback for when the value was submitted, and UI was closed (note that invalid inputs aren&#x27;t submitted, defaults to a function that updates the input field)*/</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    onSubmit</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>value</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">IInputError</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    ranges</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>start</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">number</span><span class=\"token\" style=\"color:#393A34\">;</span><span> end</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">number</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#393A34\">&amp;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>message</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>view</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IViewStackItem</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></details></div><p>There is also a corresponding <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">promptInputExecuteHandler</code> to open this layer with a specified config from a menu item when it&#x27;s executed.</p></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#selectlayer\" class=\"css-nn640c\"><h3>SelectLayer</h3></a><p>The <a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/select/SelectLayer.tsx\" class=\"css-0\"><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">SelectLayer</code></a> class takes in a <a href=\"https://tarvk.github.io/model-react/examples/build/#Field\" class=\"css-0\">model-react field</a> and a config. When opened, it allows the user to update this field&#x27;s value by selecting one of the options. Depending on the configuration it also allows for entering a custom option.</p><p>Below is the interface of the class:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=SelectLayer.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/select/SelectLayer.tsx spoiler\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">SelectLayer.ts</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/select/SelectLayer.tsx\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss28\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><details><summary class=\"css-1iuj5ih\">View code</summary> <code class=\"language-ts undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">class</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">SelectLayer</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">extends</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">InputLayer</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Creates a new select UI\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">field</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The data field to target\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">config</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The configuration for the UI\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#0000ff\">constructor</span><span class=\"token\" style=\"color:#393A34\">(</span><span>field</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IField</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">,</span><span> config</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">ISelectConfig</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Value helpers</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Retrieves the resulting value if valid, or an error otherwise\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">hook</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The data hook to subscribe to changes\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The resulting value, or error\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">getValue</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">IInputError</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Commits the current text value to the target field, if the input value is valid\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> Whether the input was valid\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">updateField</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Error handling</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Retrieves the input error if any\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">hook</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The hook to subscribe to changes\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The error with the current input if any\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">getError</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">IInputError</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#0000ff\">null</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Custom value menu item handling</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Retrieves whether custom is currently selected\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">hook</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The hook to subscribe to changes\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> Whether custom input is selected\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">isCustomSelected</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">ISelectConfig</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The options for the dropdown */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    options</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#0000ff\">readonly</span><span> </span><span class=\"token maybe-class-name\">ISelectOption</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** A method to retrieve the UI for an option */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token function-variable\" style=\"color:#393A34\">createOptionView</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>value</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">,</span><span> isDisabled</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token maybe-class-name\">IMenuItem</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** A check whether two values are equal, used to highlight the currently selected option */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    equals</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>a</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">,</span><span> b</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Menu category configuration for the search results */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    categoryConfig</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IPrioritizedMenuConfig</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The item to use for custom input */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    customView</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IMenuItem</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Checks whether the given input is valid */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    checkValidity</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>v</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">IInputError</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#0000ff\">undefined</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The function to transform the field value into a string */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    serialize</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>v</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The function to transform the input string to a valid field value (if the input is valid) */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    deserialize</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>v</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to only update on any valid input, or only when the input field (defaults to true)*/</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    liveUpdate</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to dispatch a command on submit (defaults to false, can&#x27;t be combined with liveUpdate or onSubmit) */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    undoable</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The icon to be shown for the input */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    icon</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IThemeIcon</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token maybe-class-name\">ReactElement</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The highlighter to use for the input */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    highlighter</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IHighlighter</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to allow usage of submit to exit the input, even if the input isn&#x27;t valid (defaults to false) */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    allowSubmitExitOnError</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** A callback for when the value was submitted, and UI was closed (note that invalid inputs aren&#x27;t submitted, defaults to a function that updates the input field)*/</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    onSubmit</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>value</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to allow custom user inputs (certain config fields are ignored if disabled, defaults to false) */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    allowCustomInput</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">ISelectOption</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>          </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The value for the option */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>          value</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>          </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether this option should not be selectable */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>          disabled</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>      </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">IInputError</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    ranges</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>start</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">number</span><span class=\"token\" style=\"color:#393A34\">;</span><span> end</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">number</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#393A34\">&amp;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>message</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>view</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IViewStackItem</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></details></div><p>There is also a corresponding <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">promptSelectExecuteHandler</code> to open this layer with a specified config from a menu item when it&#x27;s executed.</p></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#multiselectlayer\" class=\"css-nn640c\"><h3>MultiSelectLayer</h3></a><p>The <a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/multiSelect/MultiSelectLayer.tsx\" class=\"css-0\"><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">MultiSelectLayer</code></a> class takes in a <a href=\"https://tarvk.github.io/model-react/examples/build/#Field\" class=\"css-0\">model-react field</a> and a config. When opened, it allows the user to update this field&#x27;s value by selecting one or more options. Depending on the configuration it also allows for entering a custom option.</p><p>Below is the interface of the class:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=MultiSelectLayer.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/multiSelect/MultiSelectLayer.tsx spoiler\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">MultiSelectLayer.ts</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/multiSelect/MultiSelectLayer.tsx\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss29\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><details><summary class=\"css-1iuj5ih\">View code</summary> <code class=\"language-ts undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">class</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">MultiSelectLayer</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">extends</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">AbstractUILayer</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Creates a new select UI\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">field</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The data field to target\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">config</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The configuration for the UI\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#0000ff\">constructor</span><span class=\"token\" style=\"color:#393A34\">(</span><span>field</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IField</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">,</span><span> config</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IMultiSelectConfig</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Error handling</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Retrieves the input error if any\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">hook</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The hook to subscribe to changes\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The error with the current input if any\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">getError</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">IInputError</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#0000ff\">null</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Value selection handling</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Retrieves the current value\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">hook</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The hook to subscribe to changes\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The current selection\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">getValue</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Commits the current text value to the target field\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">updateField</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Custom value menu item handling</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Retrieves whether custom is currently selected\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">hook</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The hook to subscribe to changes\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> Whether custom input is selected\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">isCustomSelected</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IMultiSelectConfig</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The options for the dropdown */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    options</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IMultiSelectOption</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** A method to retrieve the UI for an option */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token function-variable\" style=\"color:#393A34\">createOptionView</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        value</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token function-variable\" style=\"color:#393A34\">isSelected</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        isDisabled</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token maybe-class-name\">IMenuItem</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** A check whether two values are equal, used to highlight the currently selected option */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    equals</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>a</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">,</span><span> b</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Menu category configuration for the search results */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    categoryConfig</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IPrioritizedMenuConfig</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The item to use for custom input */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    createCustomView</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token function-variable\" style=\"color:#393A34\">getText</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token builtin\">string</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#0000ff\">null</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token maybe-class-name\">IMenuItem</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Checks whether the given input is valid */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    checkValidity</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>v</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">IInputError</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#0000ff\">undefined</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The function to transform the field value into a string */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    serialize</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>v</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The function to transform the input string to a valid field value (if the input is valid) */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    deserialize</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>v</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to only update on any valid input, or only when the input field (defaults to true)*/</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    liveUpdate</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to dispatch a command on submit (defaults to false, can&#x27;t be combined with liveUpdate or onSubmit) */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    undoable</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The icon to be shown for the input */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    icon</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IThemeIcon</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token maybe-class-name\">ReactElement</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The highlighter to use for the input */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    highlighter</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IHighlighter</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to allow usage of submit to exit the input, even if the input isn&#x27;t valid (defaults to true) */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    allowSubmitExitOnError</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** A callback for when the value was submitted, and UI was closed (note that invalid inputs aren&#x27;t submitted, defaults to a function that updates the input field)*/</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    onSubmit</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>value</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to allow custom user inputs (certain config fields are ignored if disabled, defaults to false) */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    allowCustomInput</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IMultiSelectOption</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>          </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The value for the option */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>          value</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>          </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether this option should not be selectable */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>          disabled</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>      </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">IInputError</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    ranges</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>start</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">number</span><span class=\"token\" style=\"color:#393A34\">;</span><span> end</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">number</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#393A34\">&amp;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>message</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>view</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IViewStackItem</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></details></div><p>There is also a corresponding <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">promptMultiSelectExecuteHandler</code> to open this layer with a specified config from a menu item when it&#x27;s executed.</p></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#contextmenulayer\" class=\"css-nn640c\"><h3>ContextMenuLayer</h3></a><p>The <a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/context/ContextMenuLayer.tsx\" class=\"css-0\">ContextMenuLayer</a> is a rather specific layer, just for correctly showing a context menu. It probably won&#x27;t see much reuse within LaunchMenu for other purpose than showing the context menu, but it could serve as a simple example.</p></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#menusearchlayer\" class=\"css-nn640c\"><h3>MenuSearchLayer</h3></a><p>The <a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/menuSearch/MenuSearch.tsx\" class=\"css-0\">MenuSearch</a> layer is a layer that takes care of all searching needs. It will show a search field, and open up a dedicated search menu when a query is entered. The constructor takes a simple configuration:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=MenuSearch.tsx source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/menuSearch/MenuSearch.tsx spoiler\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">MenuSearch.tsx</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/uiLayers/types/menuSearch/MenuSearch.tsx\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss30\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><details><summary class=\"css-1iuj5ih\">View code</summary> <code class=\"language-ts undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">class</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">MenuSearch</span><span> </span><span class=\"token\" style=\"color:#0000ff\">extends</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">AbstractUILayer</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Creates a new SearchField which can be used to search within a menu\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">data</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The menu, context and config data\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#0000ff\">constructor</span><span class=\"token\" style=\"color:#393A34\">(</span><span>data</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IMenuSearchConfig</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Retrieves whether the search menu is opened\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">hook</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The hook to subscribe to changes\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> Whether the search menu is opened\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">public</span><span> </span><span class=\"token\" style=\"color:#393A34\">hasSearch</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IMenuSearchConfig</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The highlighter to be used for the search (defaults to plain text) */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    highlighter</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IHighlighter</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to highlight found patterns (defaults to true) */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    usePatternHighlighter</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Initial search text */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    text</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Initial text selection */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    selection</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">ITextSelection</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The menu this field should search in */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    menu</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IMenu</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The menu to be shown when no search term is provided */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    defaultMenu</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IUILayerMenuData</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token maybe-class-name\">IUILayerMenuData</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Category configuration for the search results */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    categoryConfig</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IPrioritizedMenuConfig</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The callback to make when an item is executed */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    onExecute</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IMenuItemExecuteCallback</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to use key handler of items in the menu search menu */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    useItemKeyHandlers</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to use key handlers of items in the context menu of the selected item(s) of the search menu */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    useContextItemKeyHandlers</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The icon to use for the search field, defaults to the search icon */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    icon</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IThemeIcon</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token maybe-class-name\">ReactElement</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></details></div><p>Usage of this layer can be seen in the <a href=\"#reusing-uilayers\" class=\"css-0\">Reusing UILayers</a> section of this page.</p></section></section></section>","scope":{}},"ToC":[{"name":"UI layers","children":[{"name":"UI sections","children":[{"name":"Data storage","children":[]}]},{"name":"Paths","children":[]},{"name":"UILayer class","children":[{"name":"Interface","children":[]},{"name":"Model completion","children":[]},{"name":"Searchable menu","children":[]},{"name":"Menu content","children":[]},{"name":"Overlays","children":[]},{"name":"Key barrier","children":[]}]},{"name":"Custom UILayer","children":[{"name":"Reusing UILayers","children":[]}]},{"name":"Types","children":[{"name":"InputLayer","children":[]},{"name":"SelectLayer","children":[]},{"name":"MultiSelectLayer","children":[]},{"name":"ContextMenuLayer","children":[]},{"name":"MenuSearchLayer","children":[]}]}]}],"index":{"rootPath":"/docs","items":[{"name":"Guide","opened":false,"children":[{"name":"1.-Overview"},{"name":"2.-Environment-setup"},{"name":"3.-Applet-interface"},{"name":"4.-Items-and-searches"},{"name":"5.-Content-and-theming"},{"name":"6.-UILayers-and-menus"},{"name":"7.-Settings"},{"name":"8.-Actions"},{"name":"9.-Publishing-and-usage"}]},{"name":"Concepts","opened":true,"children":[{"name":"Applet-format"},{"name":"base","opened":false,"children":[{"name":"LaunchMenu"},{"name":"Session"},{"name":"IOContext"}]},{"name":"UI","opened":true,"children":[{"name":"MenuItems"},{"name":"UILayers","selected":true},{"name":"Menu"},{"name":"TextField"},{"name":"Content"}]},{"name":"Interaction","opened":false,"children":[{"name":"Actions"},{"name":"Common-actions"},{"name":"Search-system"},{"name":"Undo-redo"},{"name":"Key-handlers"}]},{"name":"Settings"}]},{"name":"API-overview"}]}},"__N_SSG":true}