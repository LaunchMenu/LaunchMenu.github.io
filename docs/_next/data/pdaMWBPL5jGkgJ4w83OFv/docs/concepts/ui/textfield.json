{"pageProps":{"url":"https://launchmenu.github.io/docs/concepts/ui/textfield","source":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", {\n    \"name\": \"TextField\",\n    \"depth\": 1\n  }, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"TextField\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Text fields provide users with the ability to enter textual input. Text fields consist of 3 separate components:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"model: A data model\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"view: A react component to visualize the data\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"controller: A key handler to interact with the data\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"When talking about text fields we're either talking about the data model, or the entire setup that includes all 3 aspects. There is only a single standard implementation provided for the data model, but for both the controller and view several implementations are available: a standard view and controller, as well as a more advanced view and controller as can be seen in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#multiline\"\n  }, \"the multiline section\"), \".\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The data model is rather simple, and takes care of the following functionality:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Track the textual value\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Track the text selection/cursor\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Possibly provide a resource for locking this field to allow only 1 edit at a time\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"title=ITextField.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/textFields/_types/ITextField.ts\",\n    \"title\": \"ITextField.ts\",\n    \"source\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/textFields/_types/ITextField.ts\"\n  }, \"export type ITextField = {\\n    /** The lock for this text resource */\\n    resource?: Resource;\\n\\n    /**\\n     * Sets the value of the text field\\n     * @param text The new text\\n     */\\n    set(text: string): void;\\n\\n    /**\\n     * Retrieves the value of the text field\\n     * @param hook The hook to subscribe to changes\\n     * @returns The current text\\n     */\\n    get(hook?: IDataHook): string;\\n\\n    /**\\n     * Sets the selection range\\n     * @param selection The new selection\\n     */\\n    setSelection(selection: ITextSelection): void;\\n\\n    /**\\n     * Retrieves the selected range (or cursor if start==end)\\n     * @param hook The hook to subscribe to changes\\n     * @returns The selected range\\n     */\\n    getSelection(hook?: IDataHook): ITextSelection;\\n};\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The views are pretty advanced react components and take care of the following functionality:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Visualize the entered text\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Visualize the cursor and selection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Handle mouse text selection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Perform syntax highlighting\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Finally the controller is a simple \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/concepts/interaction/key-handlers\"\n  }, \"key handler\"), \" and takes care of these aspects:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Text entering\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Text deletion\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cursor movement/text selection (arrows + home/end, ctrl, shift)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Text copy and paste\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"For simple usage of a text field, all you have to do is create the data structure and open it using a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/concepts/ui/uilayers\"\n  }, \"UILayer\"), \" class instance, which will take care of creating the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createStandardTextFieldKeyHandler\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TextFieldView\"), \":\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textField video=https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textField/recordings/demo.webm\",\n    \"title\": \"src/index.tsx\",\n    \"source\": \"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textField\",\n    \"video\": \"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textField/recordings/demo.webm\"\n  }, \"export default declare({\\n    info,\\n    settings,\\n    open({context, onClose}) {\\n        const field = new TextField();\\n        context.open(\\n            new UILayer(\\n                () => ({\\n                    field,\\n                    icon: \\\"edit\\\",\\n                    handleClose: true,\\n                    onClose: () => {\\n                        alert(field.get());\\n                        onClose();\\n                    },\\n                }),\\n                {\\n                    path: \\\"Example\\\",\\n                }\\n            )\\n        );\\n    },\\n});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Now whenever the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"example\"), \" applet is opened, it will open a new text field. When the UILayer is exited, it will alert the result of what was entered.\"), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"View\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"View\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The text view is quite complex and entirely custom. We use this custom solution rather than a standard html text field in order to have better control over the text selection and properties such as blink speed, as well as allow for \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#highlight\"\n  }, \"syntax highlighting\"), \".\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"It is possible to create a custom view from scratch, but it will be quite some effort. The standard view is built-up from several nested components however, so it may be possible to use part of the existing code. Feel free to check the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/components/fields/TextFieldView.tsx\"\n  }, \"source code\"), \" to find out more. We recommend to try to minimize customizations, and possibly just change some css like in the example below:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textFieldCustomView video=https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldCustomView/recordings/demo.webm\",\n    \"title\": \"src/index.tsx\",\n    \"source\": \"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textFieldCustomView\",\n    \"video\": \"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldCustomView/recordings/demo.webm\"\n  }, \"export default declare({\\n    info,\\n    settings,\\n    open({context, onClose}) {\\n        const field = new TextField();\\n        context.open(\\n            new UILayer(\\n                () => ({\\n                    field,\\n                    fieldView: (\\n                        <TextFieldView\\n                            field={field}\\n                            css={{\\n                                fontWeight: \\\"bold\\\",\\n                                \\\".selection\\\": {backgroundColor: \\\"purple\\\"},\\n                            }}\\n                        />\\n                    ),\\n                    handleClose: true,\\n                    onClose,\\n                }),\\n                {\\n                    path: \\\"Example\\\",\\n                }\\n            )\\n        );\\n    },\\n});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Now whenever the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"example\"), \" applet is opened, it will show a text field where the entered text is bold, and the text selection is purple.\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Controller\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Controller\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The keyboard handler is relatively simple an can easily be augmented and customized because of its modularity. In order to customize it, simply copy \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/textFields/interaction/keyHandler/createStandardTextFieldKeyHandler.ts\"\n  }, \"the source code\"), \" and take out what you don't need. To augment it, wrap it in your own key handler like in the example below:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textFieldCustomController video=https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldCustomController/recordings/demo.webm\",\n    \"title\": \"src/index.tsx\",\n    \"source\": \"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textFieldCustomController\",\n    \"video\": \"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldCustomController/recordings/demo.webm\"\n  }, \"export default declare({\\n    info,\\n    settings,\\n    open({context, onClose}) {\\n        context.open(\\n            new UILayer(\\n                (context, close) => {\\n                    const field = new TextField();\\n                    const baseHandler = createStandardTextFieldKeyHandler(\\n                        field,\\n                        context,\\n                        {onExit: close}\\n                    );\\n                    const handler: IKeyEventListener = event => {\\n                        const index = event.key.char\\n                            ? \\\"abcdefghijklmnopqrstuvwxyz\\\".indexOf(\\n                                  event.key.char\\n                              )\\n                            : -1;\\n                        if (\\n                            index != -1 &&\\n                            [\\\"down\\\", \\\"repeat\\\"].includes(event.type)\\n                        ) {\\n                            new InsertTextCommand(field, index + \\\"\\\").execute();\\n                            return true;\\n                        }\\n\\n                        return baseHandler(event);\\n                    };\\n\\n                    return {\\n                        field,\\n                        fieldHandler: handler,\\n                        onClose,\\n                    };\\n                },\\n                {\\n                    path: \\\"Example\\\",\\n                }\\n            )\\n        );\\n    },\\n});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Now whenever the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"example\"), \" applet is opened, it will show a text field with custom keyhandler. This key handler replaces typed characters with their 0-based index in the alphabet.\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Multiline\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Multiline\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"As mentioned before, multiple view and controller implementations exist. Apart from the simple text field setup we considered the use case of wanting a more advanced multiline setup. For this purpose the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createAdvancedTextFieldKeyHandler\"), \" factory and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EditorField\"), \" component exist. Note however that both of these are still somewhat experimental, and not as stable as our main controller and view. For instance: line wrapping is supported, but keyboard navigation won't consider the line as wrapped.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createAdvancedTextFieldKeyHandler\"), \" factory function creates a handler that allows for entering of multiple lines, and also allows for undoing of text changes.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EditorField\"), \" component is a wrapper for the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ace.c9.io/\"\n  }, \"ace text editor\"), \" and supports some of its options, and all of its syntax highlighters.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Since the text field area of LaunchMenu has a fixed height, it's not suited for a multiline setup. We can however pass these views and handlers as content data just fine:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textFieldMultiline video=https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldMultiline/recordings/demo.webm\",\n    \"title\": \"src/index.tsx\",\n    \"source\": \"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textFieldMultiline\",\n    \"video\": \"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldMultiline/recordings/demo.webm\"\n  }, \"export default declare({\\n    info,\\n    settings,\\n    open({context, onClose}) {\\n        context.open(\\n            new UILayer(\\n                (context, close) => {\\n                    const field = new TextField();\\n                    const handler = createAdvancedTextFieldKeyHandler(\\n                        field,\\n                        context,\\n                        {\\n                            onExit: close,\\n                        }\\n                    );\\n                    const view = (\\n                        <EditorField\\n                            field={field}\\n                            options={{mode: \\\"ace/mode/javascript\\\"}}\\n                        />\\n                    );\\n\\n                    return {\\n                        contentView: view,\\n                        contentHandler: handler,\\n                        onClose,\\n                    };\\n                },\\n                {\\n                    path: \\\"Example\\\",\\n                }\\n            )\\n        );\\n    },\\n});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Now whenever the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"example\"), \" applet is opened, it will show content that acts as a multiline textfield. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ctrl+z\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ctrl+y\"), \" can be used for undo and redo.\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Highlight\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Highlight\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The default \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TextFieldView\"), \" component allows you to pass a syntax highlighter. This highlighter must have the following interface:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=IHighlighter.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/textFields/syntax/_types/IHighlighter.ts\",\n    \"title\": \"IHighlighter.ts\",\n    \"source\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/textFields/syntax/_types/IHighlighter.ts\"\n  }, \"export type IHighlighter = {\\n    /**\\n     * Extracts the highlight data from the given syntax\\n     * @param syntax The syntax to highlight\\n     * @param hook The hook to subscribe to changes\\n     * @returns The highlight nodes and possibly syntax and or semantic errors\\n     */\\n    highlight(\\n        syntax: string,\\n        hook?: IDataHook\\n    ): {nodes: IHighlightNode[]; errors: IHighlightError[]};\\n};\\n\\ntype IHighlightNode = {\\n    /** The tags for the highlighting */\\n    tags: string[];\\n    /** The start of the node */\\n    start: number;\\n    /** The end of the node */\\n    end: number;\\n    /** The text of the node */\\n    text: string;\\n    /** Optional css styling to force (use with care, it's better to assign tags in order to allow for theming as well as node merging) */\\n    style?: CSSProperties;\\n};\\n\\ntype IHighlightError = {\\n    /** The human readable error message */\\n    message: string;\\n    /** An identifier type that can be used to recognize the kind of error */\\n    type: any;\\n    /** The range of the text that caused the error */\\n    syntaxRange: {\\n        start: number;\\n        end: number;\\n        text: string;\\n    };\\n};\\n\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Lexer\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Lexer\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In order to perform syntax highlighting, you will have to do some lexical analysis of the input. The easiest way to do this is to use our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createHighlightTokens\"), \" function and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HighlightLexer\"), \" class. This lexer class is simply a light wrapper of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://chevrotain.io/docs/tutorial/step1_lexing.html#introduction\"\n  }, \"Chevrotain's Lexer class\"), \" to also allow for highlighting.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Below is an example of a simple math lexer:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textFieldHighlightLexer video=https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldHighlightLexer/recordings/demo.webm\",\n    \"title\": \"src/index.tsx\",\n    \"source\": \"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textFieldHighlightLexer\",\n    \"video\": \"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldHighlightLexer/recordings/demo.webm\"\n  }, \"const {tokenList} = createHighlightTokens({\\n    lBracket: {\\n        pattern: /\\\\(/,\\n        tags: [highlightTags.bracket, highlightTags.left],\\n    },\\n    rBracket: {\\n        pattern: /\\\\)/,\\n        tags: [highlightTags.bracket, highlightTags.right],\\n    },\\n    add: {pattern: /\\\\+/, tags: [highlightTags.operator]},\\n    sub: {pattern: /\\\\-/, tags: [highlightTags.operator]},\\n    mul: {pattern: /\\\\*/, tags: [highlightTags.operator]},\\n    div: {pattern: /\\\\//, tags: [highlightTags.operator]},\\n    value: {\\n        pattern: /[0-9]+/,\\n        tags: [highlightTags.literal, highlightTags.number],\\n    },\\n    whiteSpace: {\\n        pattern: /\\\\s+/,\\n        tags: [highlightTags.whiteSpace],\\n        group: Lexer.SKIPPED,\\n    },\\n});\\n\\nexport default declare({\\n    info,\\n    settings,\\n    open({context, onClose}) {\\n        const field = new TextField();\\n        context.open(\\n            new UILayer(\\n                () => ({\\n                    field,\\n                    highlighter: new HighlightLexer(tokenList),\\n                    handleClose: true,\\n                }),\\n                {\\n                    path: \\\"Example\\\",\\n                }\\n            )\\n        );\\n    },\\n});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Now whenever the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"example\"), \" applet is opened, it will show a text field that highlights its input according to the highlight theme. Additionally it will mark unmatched pieces of text as errors.\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Grammar\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Grammar\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In order to augment the syntax highlighting with some grammar validation, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HighlightParser\"), \" class can be used, which is a light wrap around \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://chevrotain.io/docs/tutorial/step3b_adding_actions_embedded.html#simple-example\"\n  }, \"Chevrotain's EmbeddedActionsParser class\"), \" to allow for highlighting. This will act similar to the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#lexer\"\n  }, \"HighlightLexer\"), \" class in terms of highlighting, but also marks syntax errors in red.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"This parser can also immediately be used to parse the user's input and turn it into some structured output. Below is an example of a simple calculator:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\",\n    \"metastring\": \"title=src/index.tsx source=source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textFieldHighlightGrammar video=https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldHighlightGrammar/recordings/demo.webm spoiler\",\n    \"title\": \"src/index.tsx\",\n    \"source\": \"source\",\n    \"video\": \"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldHighlightGrammar/recordings/demo.webm\",\n    \"spoiler\": true\n  }, \"const {tokens, tokenList} = createHighlightTokens({\\n    lBracket: {\\n        pattern: /\\\\(/,\\n        tags: [highlightTags.bracket, highlightTags.left],\\n    },\\n    rBracket: {\\n        pattern: /\\\\)/,\\n        tags: [highlightTags.bracket, highlightTags.right],\\n    },\\n    add: {pattern: /\\\\+/, tags: [highlightTags.operator]},\\n    sub: {pattern: /\\\\-/, tags: [highlightTags.operator]},\\n    mul: {pattern: /\\\\*/, tags: [highlightTags.operator]},\\n    div: {pattern: /\\\\//, tags: [highlightTags.operator]},\\n    value: {\\n        pattern: /[0-9]+/,\\n        tags: [highlightTags.literal, highlightTags.number],\\n    },\\n    whiteSpace: {\\n        pattern: /\\\\s+/,\\n        tags: [highlightTags.whiteSpace],\\n        group: Lexer.SKIPPED,\\n    },\\n});\\n\\nclass MathParser extends HighlightParser<number> {\\n    constructor() {\\n        super(tokenList);\\n        this.performSelfAnalysis();\\n    }\\n\\n    // Note that by default the first defined rule becomes the start rule\\n    // (this can be change by passing a config to the constructor)\\n    protected expression = this.RULE(\\\"expression\\\", () => {\\n        let result: number = this.SUBRULE(this.term);\\n        this.MANY(() => {\\n            const {tokenType} = this.OR([\\n                {ALT: () => this.CONSUME(tokens.add)}, //\\n                {ALT: () => this.CONSUME(tokens.sub)},\\n            ]);\\n            const value = this.SUBRULE2(this.term);\\n            result = tokenType == tokens.add ? result + value : result - value;\\n        });\\n        return result;\\n    });\\n    protected term = this.RULE(\\\"term\\\", () => {\\n        let result = this.SUBRULE(this.factor);\\n        this.MANY(() => {\\n            const {tokenType} = this.OR([\\n                {ALT: () => this.CONSUME(tokens.mul)}, //\\n                {ALT: () => this.CONSUME(tokens.div)},\\n            ]);\\n            const value = this.SUBRULE2(this.factor);\\n            result = tokenType == tokens.mul ? result * value : result / value;\\n        });\\n        return result;\\n    });\\n    protected factor = this.RULE(\\\"factor\\\", () =>\\n        this.OR([\\n            {\\n                ALT: () => {\\n                    this.CONSUME(tokens.lBracket);\\n                    const value = this.SUBRULE(this.expression);\\n                    this.CONSUME(tokens.rBracket);\\n                    return value;\\n                },\\n            },\\n            {\\n                ALT: () => {\\n                    const {image} = this.CONSUME(tokens.value);\\n                    return parseInt(image);\\n                },\\n            },\\n        ])\\n    );\\n}\\n\\nexport default declare({\\n    info,\\n    settings,\\n    open({context, onClose}) {\\n        const field = new TextField();\\n        const parser = new MathParser();\\n        context.open(\\n            new UILayer(\\n                () => ({\\n                    field,\\n                    highlighter: parser,\\n                    handleClose: true,\\n                    onClose: () => {\\n                        const res = parser.execute(field.get());\\n                        if (res.result) alert(res.result);\\n                        else alert(\\\"Parsing error!\\\");\\n                        onClose();\\n                    },\\n                }),\\n                {\\n                    path: \\\"Example\\\",\\n                }\\n            )\\n        );\\n    },\\n});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Now whenever the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"example\"), \" applet is opened, it will show a text field that highlights its input according to the highlight theme. Additionally it will mark unmatched pieces of text or grammatic mistakes (such as missing brackets) as errors. Finally when the field is exited, if it was provided with a valid input, the result of the calculation will be prompted.\")))));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#textfield\" class=\"css-nn640c\"><h1>TextField</h1></a><p>Text fields provide users with the ability to enter textual input. Text fields consist of 3 separate components:</p><ul><li>model: A data model</li><li>view: A react component to visualize the data</li><li>controller: A key handler to interact with the data</li></ul><p>When talking about text fields we&#x27;re either talking about the data model, or the entire setup that includes all 3 aspects. There is only a single standard implementation provided for the data model, but for both the controller and view several implementations are available: a standard view and controller, as well as a more advanced view and controller as can be seen in <a href=\"#multiline\" class=\"css-0\">the multiline section</a>.</p><p>The data model is rather simple, and takes care of the following functionality:</p><ul><li>Track the textual value</li><li>Track the text selection/cursor</li><li>Possibly provide a resource for locking this field to allow only 1 edit at a time</li></ul><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=ITextField.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/textFields/_types/ITextField.ts\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">ITextField.ts</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/textFields/_types/ITextField.ts\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss18\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><code class=\"language-tsx undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">ITextField</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/** The lock for this text resource */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    resource</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">Resource</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Sets the value of the text field\n</span><span style=\"flex-wrap:wrap\">     * @param text The new text\n</span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">set</span><span class=\"token\" style=\"color:#393A34\">(</span><span>text</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Retrieves the value of the text field\n</span><span style=\"flex-wrap:wrap\">     * @param hook The hook to subscribe to changes\n</span><span style=\"flex-wrap:wrap\">     * @returns The current text\n</span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Sets the selection range\n</span><span style=\"flex-wrap:wrap\">     * @param selection The new selection\n</span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">setSelection</span><span class=\"token\" style=\"color:#393A34\">(</span><span>selection</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">ITextSelection</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Retrieves the selected range (or cursor if start==end)\n</span><span style=\"flex-wrap:wrap\">     * @param hook The hook to subscribe to changes\n</span><span style=\"flex-wrap:wrap\">     * @returns The selected range\n</span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">getSelection</span><span class=\"token\" style=\"color:#393A34\">(</span><span>hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">ITextSelection</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></div><p>The views are pretty advanced react components and take care of the following functionality:</p><ul><li>Visualize the entered text</li><li>Visualize the cursor and selection</li><li>Handle mouse text selection</li><li>Perform syntax highlighting</li></ul><p>Finally the controller is a simple <a href=\"/docs/concepts/interaction/key-handlers\" class=\"css-0\">key handler</a> and takes care of these aspects:</p><ul><li>Text entering</li><li>Text deletion</li><li>Cursor movement/text selection (arrows + home/end, ctrl, shift)</li><li>Text copy and paste</li></ul><p>For simple usage of a text field, all you have to do is create the data structure and open it using a <a href=\"/docs/concepts/ui/uilayers\" class=\"css-0\">UILayer</a> class instance, which will take care of creating the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">createStandardTextFieldKeyHandler</code> and <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">TextFieldView</code>:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textField video=https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textField/recordings/demo.webm\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">src/index.tsx</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textField\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss19\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Show demo\" title=\"Show demo\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M8 5v14l11-7z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div><style data-emotion=\"css 1vrs79m\">.css-1vrs79m{border:2px solid #EEEEEE;width:100%;max-width:100%;}</style><div class=\"MuiBox-root jss20 css-1vrs79m\"><style data-emotion=\"css qhzqsw\">.css-qhzqsw{max-width:100%;width:100%;display:block;}</style><video class=\"css-qhzqsw\"><source src=\"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textField/recordings/demo.webm\" type=\"video/mp4\"/><p>Your browser doesn&#x27;t support HTML5 video. Here is a<!-- --> <a href=\"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textField/recordings/demo.webm\">link to the video</a> instead.</p></video><style data-emotion=\"css 1o4n3gn\">.css-1o4n3gn{position:absolute;left:0;right:0;bottom:0;top:0;}</style><style data-emotion=\"css tpej70\">.css-tpej70{pointer-events:none;position:absolute;left:0;right:0;bottom:0;top:0;}</style><div class=\"MuiBox-root jss21 css-tpej70\"><style data-emotion=\"css 6s3hx\">.css-6s3hx{color:#008DFA;}.css-6s3hx >*{position:absolute;}</style><div class=\"MuiBox-root jss22 css-6s3hx\"><style data-emotion=\"css 1lbyebv\">.css-1lbyebv{background-color:#fff;box-shadow:0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12);}</style><div class=\"MuiBox-root jss23 css-1lbyebv\" style=\"transform:scale(0)\"><style data-emotion=\"css 1riqxhg\">.css-1riqxhg{font-size:60px;}</style><svg class=\"MuiSvgIcon-root css-1riqxhg\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M8 5v14l11-7z\"></path></svg></div></div></div></div></div></div></div><code class=\"language-tsx undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">default</span><span> </span><span class=\"token\" style=\"color:#0000ff\">declare</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    info</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    settings</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\" style=\"color:#393A34\">{</span><span class=\"token parameter\">context</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> onClose</span><span class=\"token parameter\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> field </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">TextField</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    field</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    icon</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;edit&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    handleClose</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token function-variable\" style=\"color:#393A34\">onClose</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">alert</span><span class=\"token\" style=\"color:#393A34\">(</span><span>field</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">onClose</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Example&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></div><p>Now whenever the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">example</code> applet is opened, it will open a new text field. When the UILayer is exited, it will alert the result of what was entered.</p><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#view\" class=\"css-nn640c\"><h2>View</h2></a><p>The text view is quite complex and entirely custom. We use this custom solution rather than a standard html text field in order to have better control over the text selection and properties such as blink speed, as well as allow for <a href=\"#highlight\" class=\"css-0\">syntax highlighting</a>.</p><p>It is possible to create a custom view from scratch, but it will be quite some effort. The standard view is built-up from several nested components however, so it may be possible to use part of the existing code. Feel free to check the <a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/components/fields/TextFieldView.tsx\" class=\"css-0\">source code</a> to find out more. We recommend to try to minimize customizations, and possibly just change some css like in the example below:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textFieldCustomView video=https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldCustomView/recordings/demo.webm\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">src/index.tsx</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textFieldCustomView\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss24\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Show demo\" title=\"Show demo\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M8 5v14l11-7z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div><style data-emotion=\"css 1vrs79m\">.css-1vrs79m{border:2px solid #EEEEEE;width:100%;max-width:100%;}</style><div class=\"MuiBox-root jss25 css-1vrs79m\"><style data-emotion=\"css qhzqsw\">.css-qhzqsw{max-width:100%;width:100%;display:block;}</style><video class=\"css-qhzqsw\"><source src=\"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldCustomView/recordings/demo.webm\" type=\"video/mp4\"/><p>Your browser doesn&#x27;t support HTML5 video. Here is a<!-- --> <a href=\"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldCustomView/recordings/demo.webm\">link to the video</a> instead.</p></video><style data-emotion=\"css 1o4n3gn\">.css-1o4n3gn{position:absolute;left:0;right:0;bottom:0;top:0;}</style><style data-emotion=\"css tpej70\">.css-tpej70{pointer-events:none;position:absolute;left:0;right:0;bottom:0;top:0;}</style><div class=\"MuiBox-root jss26 css-tpej70\"><style data-emotion=\"css 6s3hx\">.css-6s3hx{color:#008DFA;}.css-6s3hx >*{position:absolute;}</style><div class=\"MuiBox-root jss27 css-6s3hx\"><style data-emotion=\"css 1lbyebv\">.css-1lbyebv{background-color:#fff;box-shadow:0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12);}</style><div class=\"MuiBox-root jss28 css-1lbyebv\" style=\"transform:scale(0)\"><style data-emotion=\"css 1riqxhg\">.css-1riqxhg{font-size:60px;}</style><svg class=\"MuiSvgIcon-root css-1riqxhg\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M8 5v14l11-7z\"></path></svg></div></div></div></div></div></div></div><code class=\"language-tsx undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">default</span><span> </span><span class=\"token\" style=\"color:#0000ff\">declare</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    info</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    settings</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\" style=\"color:#393A34\">{</span><span class=\"token parameter\">context</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> onClose</span><span class=\"token parameter\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> field </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">TextField</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    field</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    fieldView</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">TextFieldView</span><span class=\"token\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#800000\">                            </span><span class=\"token\" style=\"color:#ff0000\">field</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#800000\">field</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#800000\">                            </span><span class=\"token\" style=\"color:#ff0000\">css</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token script language-javascript\" style=\"color:#800000\">                                fontWeight</span><span class=\"token script language-javascript\" style=\"color:#393A34\">:</span><span class=\"token script language-javascript\" style=\"color:#800000\"> </span><span class=\"token script language-javascript\" style=\"color:#A31515\">&quot;bold&quot;</span><span class=\"token script language-javascript\" style=\"color:#393A34\">,</span><span class=\"token script language-javascript\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token script language-javascript\" style=\"color:#800000\">                                </span><span class=\"token script language-javascript\" style=\"color:#A31515\">&quot;.selection&quot;</span><span class=\"token script language-javascript\" style=\"color:#393A34\">:</span><span class=\"token script language-javascript\" style=\"color:#800000\"> </span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#800000\">backgroundColor</span><span class=\"token script language-javascript\" style=\"color:#393A34\">:</span><span class=\"token script language-javascript\" style=\"color:#800000\"> </span><span class=\"token script language-javascript\" style=\"color:#A31515\">&quot;purple&quot;</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token script language-javascript\" style=\"color:#393A34\">,</span><span class=\"token script language-javascript\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token script language-javascript\" style=\"color:#800000\">                            </span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#800000\">                        </span><span class=\"token\" style=\"color:#393A34\">/&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    handleClose</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    onClose</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Example&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></div><p>Now whenever the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">example</code> applet is opened, it will show a text field where the entered text is bold, and the text selection is purple.</p></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#controller\" class=\"css-nn640c\"><h2>Controller</h2></a><p>The keyboard handler is relatively simple an can easily be augmented and customized because of its modularity. In order to customize it, simply copy <a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/textFields/interaction/keyHandler/createStandardTextFieldKeyHandler.ts\" class=\"css-0\">the source code</a> and take out what you don&#x27;t need. To augment it, wrap it in your own key handler like in the example below:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textFieldCustomController video=https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldCustomController/recordings/demo.webm\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">src/index.tsx</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textFieldCustomController\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss29\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Show demo\" title=\"Show demo\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M8 5v14l11-7z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div><style data-emotion=\"css 1vrs79m\">.css-1vrs79m{border:2px solid #EEEEEE;width:100%;max-width:100%;}</style><div class=\"MuiBox-root jss30 css-1vrs79m\"><style data-emotion=\"css qhzqsw\">.css-qhzqsw{max-width:100%;width:100%;display:block;}</style><video class=\"css-qhzqsw\"><source src=\"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldCustomController/recordings/demo.webm\" type=\"video/mp4\"/><p>Your browser doesn&#x27;t support HTML5 video. Here is a<!-- --> <a href=\"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldCustomController/recordings/demo.webm\">link to the video</a> instead.</p></video><style data-emotion=\"css 1o4n3gn\">.css-1o4n3gn{position:absolute;left:0;right:0;bottom:0;top:0;}</style><style data-emotion=\"css tpej70\">.css-tpej70{pointer-events:none;position:absolute;left:0;right:0;bottom:0;top:0;}</style><div class=\"MuiBox-root jss31 css-tpej70\"><style data-emotion=\"css 6s3hx\">.css-6s3hx{color:#008DFA;}.css-6s3hx >*{position:absolute;}</style><div class=\"MuiBox-root jss32 css-6s3hx\"><style data-emotion=\"css 1lbyebv\">.css-1lbyebv{background-color:#fff;box-shadow:0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12);}</style><div class=\"MuiBox-root jss33 css-1lbyebv\" style=\"transform:scale(0)\"><style data-emotion=\"css 1riqxhg\">.css-1riqxhg{font-size:60px;}</style><svg class=\"MuiSvgIcon-root css-1riqxhg\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M8 5v14l11-7z\"></path></svg></div></div></div></div></div></div></div><code class=\"language-tsx undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">default</span><span> </span><span class=\"token\" style=\"color:#0000ff\">declare</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    info</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    settings</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\" style=\"color:#393A34\">{</span><span class=\"token parameter\">context</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> onClose</span><span class=\"token parameter\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\">context</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> close</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> field </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">TextField</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> baseHandler </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">createStandardTextFieldKeyHandler</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        field</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        context</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">{</span><span>onExit</span><span class=\"token\" style=\"color:#393A34\">:</span><span> close</span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> handler</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token function-variable maybe-class-name\" style=\"color:#393A34\">IKeyEventListener</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token parameter\">event</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> index </span><span class=\"token\" style=\"color:#393A34\">=</span><span> event</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">key</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">char</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            </span><span class=\"token\" style=\"color:#393A34\">?</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">indexOf</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                                  event</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">key</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">char</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                              </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            </span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">-</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#0000ff\">if</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            index </span><span class=\"token\" style=\"color:#393A34\">!=</span><span> </span><span class=\"token\" style=\"color:#393A34\">-</span><span class=\"token\" style=\"color:#36acaa\">1</span><span> </span><span class=\"token\" style=\"color:#393A34\">&amp;&amp;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            </span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;down&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;repeat&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">includes</span><span class=\"token\" style=\"color:#393A34\">(</span><span>event</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">type</span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">InsertTextCommand</span><span class=\"token\" style=\"color:#393A34\">(</span><span>field</span><span class=\"token\" style=\"color:#393A34\">,</span><span> index </span><span class=\"token\" style=\"color:#393A34\">+</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">execute</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#393A34\">baseHandler</span><span class=\"token\" style=\"color:#393A34\">(</span><span>event</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        field</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        fieldHandler</span><span class=\"token\" style=\"color:#393A34\">:</span><span> handler</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        onClose</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Example&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></div><p>Now whenever the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">example</code> applet is opened, it will show a text field with custom keyhandler. This key handler replaces typed characters with their 0-based index in the alphabet.</p></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#multiline\" class=\"css-nn640c\"><h2>Multiline</h2></a><p>As mentioned before, multiple view and controller implementations exist. Apart from the simple text field setup we considered the use case of wanting a more advanced multiline setup. For this purpose the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">createAdvancedTextFieldKeyHandler</code> factory and <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">EditorField</code> component exist. Note however that both of these are still somewhat experimental, and not as stable as our main controller and view. For instance: line wrapping is supported, but keyboard navigation won&#x27;t consider the line as wrapped.</p><p>The <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">createAdvancedTextFieldKeyHandler</code> factory function creates a handler that allows for entering of multiple lines, and also allows for undoing of text changes.</p><p>The <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">EditorField</code> component is a wrapper for the <a href=\"https://ace.c9.io/\" class=\"css-0\">ace text editor</a> and supports some of its options, and all of its syntax highlighters.</p><p>Since the text field area of LaunchMenu has a fixed height, it&#x27;s not suited for a multiline setup. We can however pass these views and handlers as content data just fine:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textFieldMultiline video=https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldMultiline/recordings/demo.webm\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">src/index.tsx</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textFieldMultiline\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss34\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Show demo\" title=\"Show demo\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M8 5v14l11-7z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div><style data-emotion=\"css 1vrs79m\">.css-1vrs79m{border:2px solid #EEEEEE;width:100%;max-width:100%;}</style><div class=\"MuiBox-root jss35 css-1vrs79m\"><style data-emotion=\"css qhzqsw\">.css-qhzqsw{max-width:100%;width:100%;display:block;}</style><video class=\"css-qhzqsw\"><source src=\"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldMultiline/recordings/demo.webm\" type=\"video/mp4\"/><p>Your browser doesn&#x27;t support HTML5 video. Here is a<!-- --> <a href=\"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldMultiline/recordings/demo.webm\">link to the video</a> instead.</p></video><style data-emotion=\"css 1o4n3gn\">.css-1o4n3gn{position:absolute;left:0;right:0;bottom:0;top:0;}</style><style data-emotion=\"css tpej70\">.css-tpej70{pointer-events:none;position:absolute;left:0;right:0;bottom:0;top:0;}</style><div class=\"MuiBox-root jss36 css-tpej70\"><style data-emotion=\"css 6s3hx\">.css-6s3hx{color:#008DFA;}.css-6s3hx >*{position:absolute;}</style><div class=\"MuiBox-root jss37 css-6s3hx\"><style data-emotion=\"css 1lbyebv\">.css-1lbyebv{background-color:#fff;box-shadow:0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12);}</style><div class=\"MuiBox-root jss38 css-1lbyebv\" style=\"transform:scale(0)\"><style data-emotion=\"css 1riqxhg\">.css-1riqxhg{font-size:60px;}</style><svg class=\"MuiSvgIcon-root css-1riqxhg\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M8 5v14l11-7z\"></path></svg></div></div></div></div></div></div></div><code class=\"language-tsx undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">default</span><span> </span><span class=\"token\" style=\"color:#0000ff\">declare</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    info</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    settings</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\" style=\"color:#393A34\">{</span><span class=\"token parameter\">context</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> onClose</span><span class=\"token parameter\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\">context</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> close</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> field </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">TextField</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> handler </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">createAdvancedTextFieldKeyHandler</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        field</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        context</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                            onExit</span><span class=\"token\" style=\"color:#393A34\">:</span><span> close</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> view </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">EditorField</span><span class=\"token\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#800000\">                            </span><span class=\"token\" style=\"color:#ff0000\">field</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#800000\">field</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#800000\">                            </span><span class=\"token\" style=\"color:#ff0000\">options</span><span class=\"token script language-javascript script-punctuation\" style=\"color:#800000\">=</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#393A34\">{</span><span class=\"token script language-javascript\" style=\"color:#800000\">mode</span><span class=\"token script language-javascript\" style=\"color:#393A34\">:</span><span class=\"token script language-javascript\" style=\"color:#800000\"> </span><span class=\"token script language-javascript\" style=\"color:#A31515\">&quot;ace/mode/javascript&quot;</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token script language-javascript\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#800000\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#800000\">                        </span><span class=\"token\" style=\"color:#393A34\">/&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        contentView</span><span class=\"token\" style=\"color:#393A34\">:</span><span> view</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        contentHandler</span><span class=\"token\" style=\"color:#393A34\">:</span><span> handler</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        onClose</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Example&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></div><p>Now whenever the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">example</code> applet is opened, it will show content that acts as a multiline textfield. <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">ctrl+z</code> and <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">ctrl+y</code> can be used for undo and redo.</p></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#highlight\" class=\"css-nn640c\"><h2>Highlight</h2></a><p>The default <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">TextFieldView</code> component allows you to pass a syntax highlighter. This highlighter must have the following interface:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=IHighlighter.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/textFields/syntax/_types/IHighlighter.ts\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">IHighlighter.ts</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/textFields/syntax/_types/IHighlighter.ts\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss39\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><code class=\"language-ts undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IHighlighter</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Extracts the highlight data from the given syntax\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">syntax</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The syntax to highlight\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">hook</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The hook to subscribe to changes\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The highlight nodes and possibly syntax and or semantic errors\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">highlight</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        syntax</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        hook</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>nodes</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IHighlightNode</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">;</span><span> errors</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">IHighlightError</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IHighlightNode</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The tags for the highlighting */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    tags</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The start of the node */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    start</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">number</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The end of the node */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    end</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">number</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The text of the node */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    text</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Optional css styling to force (use with care, it&#x27;s better to assign tags in order to allow for theming as well as node merging) */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    style</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">CSSProperties</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">IHighlightError</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The human readable error message */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    message</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** An identifier type that can be used to recognize the kind of error */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">type</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">any</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The range of the text that caused the error */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    syntaxRange</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        start</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">number</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        end</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">number</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        text</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></div><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#lexer\" class=\"css-nn640c\"><h3>Lexer</h3></a><p>In order to perform syntax highlighting, you will have to do some lexical analysis of the input. The easiest way to do this is to use our <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">createHighlightTokens</code> function and <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">HighlightLexer</code> class. This lexer class is simply a light wrapper of <a href=\"https://chevrotain.io/docs/tutorial/step1_lexing.html#introduction\" class=\"css-0\">Chevrotain&#x27;s Lexer class</a> to also allow for highlighting.</p><p>Below is an example of a simple math lexer:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=src/index.tsx source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textFieldHighlightLexer video=https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldHighlightLexer/recordings/demo.webm\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">src/index.tsx</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textFieldHighlightLexer\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss40\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Show demo\" title=\"Show demo\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M8 5v14l11-7z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div><style data-emotion=\"css 1vrs79m\">.css-1vrs79m{border:2px solid #EEEEEE;width:100%;max-width:100%;}</style><div class=\"MuiBox-root jss41 css-1vrs79m\"><style data-emotion=\"css qhzqsw\">.css-qhzqsw{max-width:100%;width:100%;display:block;}</style><video class=\"css-qhzqsw\"><source src=\"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldHighlightLexer/recordings/demo.webm\" type=\"video/mp4\"/><p>Your browser doesn&#x27;t support HTML5 video. Here is a<!-- --> <a href=\"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldHighlightLexer/recordings/demo.webm\">link to the video</a> instead.</p></video><style data-emotion=\"css 1o4n3gn\">.css-1o4n3gn{position:absolute;left:0;right:0;bottom:0;top:0;}</style><style data-emotion=\"css tpej70\">.css-tpej70{pointer-events:none;position:absolute;left:0;right:0;bottom:0;top:0;}</style><div class=\"MuiBox-root jss42 css-tpej70\"><style data-emotion=\"css 6s3hx\">.css-6s3hx{color:#008DFA;}.css-6s3hx >*{position:absolute;}</style><div class=\"MuiBox-root jss43 css-6s3hx\"><style data-emotion=\"css 1lbyebv\">.css-1lbyebv{background-color:#fff;box-shadow:0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12);}</style><div class=\"MuiBox-root jss44 css-1lbyebv\" style=\"transform:scale(0)\"><style data-emotion=\"css 1riqxhg\">.css-1riqxhg{font-size:60px;}</style><svg class=\"MuiSvgIcon-root css-1riqxhg\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M8 5v14l11-7z\"></path></svg></div></div></div></div></div></div></div><code class=\"language-tsx undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">const</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>tokenList</span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">createHighlightTokens</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    lBracket</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        pattern</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token regex-source language-regex\" style=\"color:#ff0000\">\\(</span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        tags</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">bracket</span><span class=\"token\" style=\"color:#393A34\">,</span><span> highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">left</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    rBracket</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        pattern</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token regex-source language-regex\" style=\"color:#ff0000\">\\)</span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        tags</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">bracket</span><span class=\"token\" style=\"color:#393A34\">,</span><span> highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">right</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    add</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>pattern</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token regex-source language-regex\" style=\"color:#ff0000\">\\+</span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token\" style=\"color:#393A34\">,</span><span> tags</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">operator</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    sub</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>pattern</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token regex-source language-regex\" style=\"color:#ff0000\">\\-</span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token\" style=\"color:#393A34\">,</span><span> tags</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">operator</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    mul</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>pattern</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token regex-source language-regex\" style=\"color:#ff0000\">\\*</span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token\" style=\"color:#393A34\">,</span><span> tags</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">operator</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    div</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>pattern</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token regex-source language-regex\" style=\"color:#ff0000\">\\/</span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token\" style=\"color:#393A34\">,</span><span> tags</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">operator</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    value</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        pattern</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token regex-source language-regex\" style=\"color:#ff0000\">[0-9]+</span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        tags</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">literal</span><span class=\"token\" style=\"color:#393A34\">,</span><span> highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">number</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    whiteSpace</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        pattern</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token regex-source language-regex\" style=\"color:#ff0000\">\\s+</span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        tags</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">whiteSpace</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        group</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">Lexer</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">SKIPPED</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">default</span><span> </span><span class=\"token\" style=\"color:#0000ff\">declare</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    info</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    settings</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\" style=\"color:#393A34\">{</span><span class=\"token parameter\">context</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> onClose</span><span class=\"token parameter\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> field </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">TextField</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    field</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    highlighter</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">HighlightLexer</span><span class=\"token\" style=\"color:#393A34\">(</span><span>tokenList</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    handleClose</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Example&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></div><p>Now whenever the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">example</code> applet is opened, it will show a text field that highlights its input according to the highlight theme. Additionally it will mark unmatched pieces of text as errors.</p></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#grammar\" class=\"css-nn640c\"><h3>Grammar</h3></a><p>In order to augment the syntax highlighting with some grammar validation, the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">HighlightParser</code> class can be used, which is a light wrap around <a href=\"https://chevrotain.io/docs/tutorial/step3b_adding_actions_embedded.html#simple-example\" class=\"css-0\">Chevrotain&#x27;s EmbeddedActionsParser class</a> to allow for highlighting. This will act similar to the <a href=\"#lexer\" class=\"css-0\">HighlightLexer</a> class in terms of highlighting, but also marks syntax errors in red.</p><p>This parser can also immediately be used to parse the user&#x27;s input and turn it into some structured output. Below is an example of a simple calculator:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=src/index.tsx source=source=https://github.com/LaunchMenu/LM-applet-examples/tree/main/examples/textFieldHighlightGrammar video=https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldHighlightGrammar/recordings/demo.webm spoiler\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">src/index.tsx</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"source\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss45\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Show demo\" title=\"Show demo\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M8 5v14l11-7z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div><style data-emotion=\"css 1vrs79m\">.css-1vrs79m{border:2px solid #EEEEEE;width:100%;max-width:100%;}</style><div class=\"MuiBox-root jss46 css-1vrs79m\"><style data-emotion=\"css qhzqsw\">.css-qhzqsw{max-width:100%;width:100%;display:block;}</style><video class=\"css-qhzqsw\"><source src=\"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldHighlightGrammar/recordings/demo.webm\" type=\"video/mp4\"/><p>Your browser doesn&#x27;t support HTML5 video. Here is a<!-- --> <a href=\"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/textFieldHighlightGrammar/recordings/demo.webm\">link to the video</a> instead.</p></video><style data-emotion=\"css 1o4n3gn\">.css-1o4n3gn{position:absolute;left:0;right:0;bottom:0;top:0;}</style><style data-emotion=\"css tpej70\">.css-tpej70{pointer-events:none;position:absolute;left:0;right:0;bottom:0;top:0;}</style><div class=\"MuiBox-root jss47 css-tpej70\"><style data-emotion=\"css 6s3hx\">.css-6s3hx{color:#008DFA;}.css-6s3hx >*{position:absolute;}</style><div class=\"MuiBox-root jss48 css-6s3hx\"><style data-emotion=\"css 1lbyebv\">.css-1lbyebv{background-color:#fff;box-shadow:0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12);}</style><div class=\"MuiBox-root jss49 css-1lbyebv\" style=\"transform:scale(0)\"><style data-emotion=\"css 1riqxhg\">.css-1riqxhg{font-size:60px;}</style><svg class=\"MuiSvgIcon-root css-1riqxhg\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M8 5v14l11-7z\"></path></svg></div></div></div></div></div></div></div><details><summary class=\"css-1iuj5ih\">View code</summary> <code class=\"language-tsx undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">const</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>tokens</span><span class=\"token\" style=\"color:#393A34\">,</span><span> tokenList</span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">createHighlightTokens</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    lBracket</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        pattern</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token regex-source language-regex\" style=\"color:#ff0000\">\\(</span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        tags</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">bracket</span><span class=\"token\" style=\"color:#393A34\">,</span><span> highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">left</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    rBracket</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        pattern</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token regex-source language-regex\" style=\"color:#ff0000\">\\)</span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        tags</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">bracket</span><span class=\"token\" style=\"color:#393A34\">,</span><span> highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">right</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    add</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>pattern</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token regex-source language-regex\" style=\"color:#ff0000\">\\+</span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token\" style=\"color:#393A34\">,</span><span> tags</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">operator</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    sub</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>pattern</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token regex-source language-regex\" style=\"color:#ff0000\">\\-</span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token\" style=\"color:#393A34\">,</span><span> tags</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">operator</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    mul</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>pattern</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token regex-source language-regex\" style=\"color:#ff0000\">\\*</span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token\" style=\"color:#393A34\">,</span><span> tags</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">operator</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    div</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>pattern</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token regex-source language-regex\" style=\"color:#ff0000\">\\/</span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token\" style=\"color:#393A34\">,</span><span> tags</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">operator</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    value</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        pattern</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token regex-source language-regex\" style=\"color:#ff0000\">[0-9]+</span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        tags</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">literal</span><span class=\"token\" style=\"color:#393A34\">,</span><span> highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">number</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    whiteSpace</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        pattern</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token regex-source language-regex\" style=\"color:#ff0000\">\\s+</span><span class=\"token regex-delimiter\" style=\"color:#ff0000\">/</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        tags</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span>highlightTags</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">whiteSpace</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        group</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">Lexer</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">SKIPPED</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">class</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">MathParser</span><span> </span><span class=\"token\" style=\"color:#0000ff\">extends</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">HighlightParser</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token builtin\" style=\"color:#2B91AF\">number</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">constructor</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">super</span><span class=\"token\" style=\"color:#393A34\">(</span><span>tokenList</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">performSelfAnalysis</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Note that by default the first defined rule becomes the start rule</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#008000;font-style:italic\">// (this can be change by passing a config to the constructor)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">protected</span><span> expression </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">RULE</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;expression&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">let</span><span> result</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">number</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">SUBRULE</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">term</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">MANY</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>tokenType</span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">OR</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">[</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token function-variable maybe-class-name\" style=\"color:#393A34\">ALT</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">CONSUME</span><span class=\"token\" style=\"color:#393A34\">(</span><span>tokens</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">add</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#008000;font-style:italic\">//</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token function-variable maybe-class-name\" style=\"color:#393A34\">ALT</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">CONSUME</span><span class=\"token\" style=\"color:#393A34\">(</span><span>tokens</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">sub</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> value </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">SUBRULE2</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">term</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            result </span><span class=\"token\" style=\"color:#393A34\">=</span><span> tokenType </span><span class=\"token\" style=\"color:#393A34\">==</span><span> tokens</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">add</span><span> </span><span class=\"token\" style=\"color:#393A34\">?</span><span> result </span><span class=\"token\" style=\"color:#393A34\">+</span><span> value </span><span class=\"token\" style=\"color:#393A34\">:</span><span> result </span><span class=\"token\" style=\"color:#393A34\">-</span><span> value</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> result</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">protected</span><span> term </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">RULE</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;term&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">let</span><span> result </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">SUBRULE</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">factor</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">MANY</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>tokenType</span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">OR</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">[</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token function-variable maybe-class-name\" style=\"color:#393A34\">ALT</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">CONSUME</span><span class=\"token\" style=\"color:#393A34\">(</span><span>tokens</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">mul</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#008000;font-style:italic\">//</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token function-variable maybe-class-name\" style=\"color:#393A34\">ALT</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">CONSUME</span><span class=\"token\" style=\"color:#393A34\">(</span><span>tokens</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">div</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> value </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">SUBRULE2</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">factor</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            result </span><span class=\"token\" style=\"color:#393A34\">=</span><span> tokenType </span><span class=\"token\" style=\"color:#393A34\">==</span><span> tokens</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">mul</span><span> </span><span class=\"token\" style=\"color:#393A34\">?</span><span> result </span><span class=\"token\" style=\"color:#393A34\">*</span><span> value </span><span class=\"token\" style=\"color:#393A34\">:</span><span> result </span><span class=\"token\" style=\"color:#393A34\">/</span><span> value</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> result</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#0000ff\">protected</span><span> factor </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">RULE</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;factor&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">OR</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">[</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token function-variable maybe-class-name\" style=\"color:#393A34\">ALT</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">CONSUME</span><span class=\"token\" style=\"color:#393A34\">(</span><span>tokens</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">lBracket</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> value </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">SUBRULE</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">expression</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">CONSUME</span><span class=\"token\" style=\"color:#393A34\">(</span><span>tokens</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">rBracket</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> value</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token function-variable maybe-class-name\" style=\"color:#393A34\">ALT</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>image</span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">this</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#36acaa\">CONSUME</span><span class=\"token\" style=\"color:#393A34\">(</span><span>tokens</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">value</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#0000ff\">return</span><span> </span><span class=\"token\" style=\"color:#393A34\">parseInt</span><span class=\"token\" style=\"color:#393A34\">(</span><span>image</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">default</span><span> </span><span class=\"token\" style=\"color:#0000ff\">declare</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    info</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    settings</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token parameter\" style=\"color:#393A34\">{</span><span class=\"token parameter\">context</span><span class=\"token parameter\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> onClose</span><span class=\"token parameter\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> field </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">TextField</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> parser </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">MathParser</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        context</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">open</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#0000ff\">new</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">UILayer</span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    field</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    highlighter</span><span class=\"token\" style=\"color:#393A34\">:</span><span> parser</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    handleClose</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">true</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token function-variable\" style=\"color:#393A34\">onClose</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#0000ff\">const</span><span> res </span><span class=\"token\" style=\"color:#393A34\">=</span><span> parser</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token method property-access\" style=\"color:#393A34\">execute</span><span class=\"token\" style=\"color:#393A34\">(</span><span>field</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token\" style=\"color:#0000ff\">get</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#0000ff\">if</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>res</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">result</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">alert</span><span class=\"token\" style=\"color:#393A34\">(</span><span>res</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token property-access\">result</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#0000ff\">else</span><span> </span><span class=\"token\" style=\"color:#393A34\">alert</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;Parsing error!&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                        </span><span class=\"token\" style=\"color:#393A34\">onClose</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                    path</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;Example&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>                </span><span class=\"token\" style=\"color:#393A34\">}</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>            </span><span class=\"token\" style=\"color:#393A34\">)</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></details></div><p>Now whenever the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">example</code> applet is opened, it will show a text field that highlights its input according to the highlight theme. Additionally it will mark unmatched pieces of text or grammatic mistakes (such as missing brackets) as errors. Finally when the field is exited, if it was provided with a valid input, the result of the calculation will be prompted.</p></section></section></section>","scope":{}},"ToC":[{"name":"TextField","children":[{"name":"View","children":[]},{"name":"Controller","children":[]},{"name":"Multiline","children":[]},{"name":"Highlight","children":[{"name":"Lexer","children":[]},{"name":"Grammar","children":[]}]}]}],"index":{"rootPath":"/docs","items":[{"name":"Guide","opened":false,"children":[{"name":"1.-Overview"},{"name":"2.-Environment-setup"},{"name":"3.-Applet-interface"},{"name":"4.-Items-and-searches"},{"name":"5.-Content-and-theming"},{"name":"6.-UILayers-and-menus"},{"name":"7.-Settings"},{"name":"8.-Actions"},{"name":"9.-Publishing-and-usage"}]},{"name":"Concepts","opened":true,"children":[{"name":"Applet-format"},{"name":"base","opened":false,"children":[{"name":"LaunchMenu"},{"name":"Session"},{"name":"IOContext"}]},{"name":"UI","opened":true,"children":[{"name":"MenuItems"},{"name":"UILayers"},{"name":"Menu"},{"name":"TextField","selected":true},{"name":"Content"}]},{"name":"Interaction","opened":false,"children":[{"name":"Actions"},{"name":"Common-actions"},{"name":"Search-system"},{"name":"Undo-redo"},{"name":"Key-handlers"}]},{"name":"Settings"}]},{"name":"API-overview"}]}},"__N_SSG":true}