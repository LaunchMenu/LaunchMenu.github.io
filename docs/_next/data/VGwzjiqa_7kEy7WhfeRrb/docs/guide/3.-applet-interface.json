{"pageProps":{"url":"https://launchmenu.github.io/docs/guide/3.-applet-interface","source":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", {\n    \"name\": \"Applet interface\",\n    \"depth\": 1\n  }, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Applet interface\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Any applet has to export data about itself in a specific format from the main module entry. This way LaunchMenu knows what to expect and can properly load and interact with your applet.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"declare\"), \" function can be used to verify the structure of your export. Each applet requires at least some info about itself and settings to be present. For now we will provide the settings structure, but not provide any actual settings yet. Below is a minimal applet:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=index.tsx\",\n    \"title\": \"index.tsx\"\n  }, \"import {createSettings, createSettingsFolder, declare} from \\\"@launchmenu/core\\\";\\n\\nconst info = {\\n    name: \\\"HelloWorld\\\",\\n    description: \\\"A minimal example applet\\\",\\n    version: \\\"0.0.0\\\",\\n    icon: \\\"applets\\\" as const,\\n    tags: [\\\"cool\\\"],\\n};\\n\\nconst settings = createSettings({\\n    version: \\\"0.0.0\\\",\\n    settings: () => createSettingsFolder({...info, children: {}}),\\n});\\n\\nexport default declare({\\n    info,\\n    settings,\\n});\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"We declared 4 bits of information about the applet:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"name\"), \": The title to use to display this applet as from within LaunchMenu\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"description\"), \": A single line description of the applet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"version\"), \": The current version number of the applet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"icon\"), \": Either the name of a built-in icon, or a custom react component used as an icon\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"tags\"), \" (optional): A list of additional terms associated to the applet, used for searching\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"as const\"), \" on line 7 (tip: line numbers can be toggled with the button at the top right of the code section) is a TypeScript construct that makes sure that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"icon\"), \"'s type stores the literal icon name. This is required for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"declare\"), \" not to error, since only some strings are available as icons. This is not required when you provide your own react element as an icon.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"At this point the applet should already be 'functional', although it won't do anything yet. You can now start the applet:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"npm run dev\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"When you search for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hello\"), \", your applet should show up with the data you provided.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"At this point you can also test the live applet reloading behavior by changing the info data in your source code. Once you save your code, you will notice that data instantly updates in LaunchMenu too. This reloading behavior is very convenient during development, but it's not perfect. We will come back to some limitations later.\"), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Applet functionality\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Applet functionality\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The primary function of most applets will be to provide search results. This can be done by adding a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"search\"), \" function to your applet config. The next page will describe how to do this exactly.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Additionally you can provide a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"open\"), \" function which can be executed when your applet itself is searched explicitly, and can be used to open some interface of your applet. We will come back to this in a later section.\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Advanced\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Advanced\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"We can do some more advanced things using the config such as obtain the running LaunchMenu instance, obtain the currently running session, or add to the global context menu. This is outside of the scope of this guide, but you can check the in-depth \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/concepts/applet-format\"\n  }, \"applet format\"), \" page for more information.\"), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"complete interface\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"complete interface\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The exact interface is rather hard to read since there are many reference to other types, but it may still help you. We however recommend exploring the types in a proper IDE with intellisense such as VSCode allowing you to simply follow type references by ctrl-clicking.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\",\n    \"metastring\": \"title=IAppletConfig.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/application/applets/_types/IAppletConfig.ts spoiler\",\n    \"title\": \"IAppletConfig.ts\",\n    \"source\": \"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/application/applets/_types/IAppletConfig.ts\",\n    \"spoiler\": true\n  }, \"export type IAppletConfig<\\n    S extends IIdentifiedSettingsConfig<\\n        IJSON,\\n        ISettingsFolderMenuItem\\n    > = IIdentifiedSettingsConfig<IJSON, ISettingsFolderMenuItem>\\n> = {\\n    /** The applet info for listings */\\n    info: IAppletInfo;\\n    /** Settings of the applet */\\n    settings: S;\\n    /** A possible category for this applet */\\n    coreCategory?: CoreAppletType;\\n    /** Development time specific information/tools */\\n    development?: {\\n        /** Whether to listen for changes in code and auto reload the applet when detected */\\n        liveReload?: boolean;\\n        /** The directory to watch for changes (defaults to 'build') */\\n        watchDirectory?: string;\\n    };\\n    /** A function to get the execution data of the config given a LM (and potentially session) instance */\\n    init?: IAppletLMInitializer<TConfigSettings<S>>;\\n    /** A function to get the execution data of the config given a session instance  */\\n    withSession?: IAppletSessionInitializer;\\n} & Partial<IAppletExecutionConfig>;\\n\\ntype IAppletExecutionConfig = {\\n    /** Menu items that should appear in all context menus */\\n    globalContextMenuBindings?: ISubscribable<IActionBinding[]>;\\n    /** Opens the application */\\n    open?: (args: {context: IOContext; onClose: () => void}) => void;\\n    /**\\n     * Searches for items, by possibly returning an item, and a collection of sub-searches.\\n     * May also return a matched pattern to ignore all items that don't match a pattern.\\n     * @param query The query to be checked against\\n     * @param hook A data hook to listen for changes\\n     * @param executer The executer performing the search, for possible advanced optimizations\\n     * @returns The search result\\n     **/\\n    search?: (\\n        query: IQuery,\\n        hook: IDataHook,\\n        executer?: SearchExecuter<IQuery, IPrioritizedMenuItem>\\n    ) => Promise<ISearchableResult<IQuery, IPrioritizedMenuItem>>;\\n\\n    /** Development time specific information/tools */\\n    development?: {\\n        /** A callback for when the module is reloaded during development, can be used to programmatically navigate to a specific section of your app.\\n         * Return function is called when applet is disposed\\n         */\\n        onReload?: () => (() => void) | void;\\n    };\\n};\\n\\n// Supporting types\\ntype IAppletDisposer = {\\n    onDispose?: () => void | Promise<void>;\\n};\\n\\ntype IAppletLMInitializer<T extends ISettingsTree> = (data: {\\n    /** The settings for this applet */\\n    settings: T;\\n    /** The running lm instance */\\n    LM: LaunchMenu;\\n}) =>\\n    | IAppletSessionInitializer\\n    | ({withSession?: IAppletSessionInitializer} & IAppletExecutionConfig &\\n          IAppletDisposer);\\n\\ntype IAppletSessionInitializer = (\\n    session: LMSession\\n) => IAppletExecutionConfig & {onCloseSession?: () => void | Promise<void>};\\n\\nenum CoreAppletType {\\n    SETTINGS = \\\"settings\\\",\\n    APPLETS = \\\"applets\\\",\\n    HELP = \\\"help\\\",\\n    SESSIONS = \\\"sessions\\\",\\n    WINDOW = \\\"window\\\",\\n    STYLING = \\\"styling\\\",\\n    UNDO = \\\"undo\\\",\\n}\\n\")), mdx(GuideNav, {\n    prev: \"guide/2.-environment-setup\",\n    next: \"guide/4.-items-and-searches\",\n    mdxType: \"GuideNav\"\n  })))));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#applet-interface\" class=\"css-nn640c\"><h1>Applet interface</h1></a><p>Any applet has to export data about itself in a specific format from the main module entry. This way LaunchMenu knows what to expect and can properly load and interact with your applet.</p><p>The <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">declare</code> function can be used to verify the structure of your export. Each applet requires at least some info about itself and settings to be present. For now we will provide the settings structure, but not provide any actual settings yet. Below is a minimal applet:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=index.tsx\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">index.tsx</div><div class=\"MuiBox-root jss12\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><code class=\"language-ts undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">import</span><span> </span><span class=\"token imports\" style=\"color:#393A34\">{</span><span class=\"token imports\">createSettings</span><span class=\"token imports\" style=\"color:#393A34\">,</span><span class=\"token imports\"> createSettingsFolder</span><span class=\"token imports\" style=\"color:#393A34\">,</span><span class=\"token imports\"> </span><span class=\"token imports\" style=\"color:#0000ff\">declare</span><span class=\"token imports\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#0000ff\">from</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;@launchmenu/core&quot;</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">const</span><span> info </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    name</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;HelloWorld&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    description</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;A minimal example applet&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    version</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;0.0.0&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    icon</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;applets&quot;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">as</span><span> </span><span class=\"token\" style=\"color:#0000ff\">const</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    tags</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;cool&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">const</span><span> settings </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">createSettings</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    version</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;0.0.0&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token function-variable\" style=\"color:#393A34\">settings</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">createSettingsFolder</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token spread\" style=\"color:#393A34\">...</span><span>info</span><span class=\"token\" style=\"color:#393A34\">,</span><span> children</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">default</span><span> </span><span class=\"token\" style=\"color:#0000ff\">declare</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    info</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    settings</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span></span></code></div><p>We declared 4 bits of information about the applet:</p><ul><li><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">name</code>: The title to use to display this applet as from within LaunchMenu</li><li><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">description</code>: A single line description of the applet</li><li><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">version</code>: The current version number of the applet</li><li><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">icon</code>: Either the name of a built-in icon, or a custom react component used as an icon</li><li><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">tags</code> (optional): A list of additional terms associated to the applet, used for searching</li></ul><p><style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">as&nbsp;const</code> on line 7 (tip: line numbers can be toggled with the button at the top right of the code section) is a TypeScript construct that makes sure that <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">icon</code>&#x27;s type stores the literal icon name. This is required for <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">declare</code> not to error, since only some strings are available as icons. This is not required when you provide your own react element as an icon.</p><p>At this point the applet should already be &#x27;functional&#x27;, although it won&#x27;t do anything yet. You can now start the applet:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div class=\"css-1x06cmw\"><code class=\"language-text undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span>npm run dev</span></span></code></div><p>When you search for <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">hello</code>, your applet should show up with the data you provided.</p><p>At this point you can also test the live applet reloading behavior by changing the info data in your source code. Once you save your code, you will notice that data instantly updates in LaunchMenu too. This reloading behavior is very convenient during development, but it&#x27;s not perfect. We will come back to some limitations later.</p><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#applet-functionality\" class=\"css-nn640c\"><h2>Applet functionality</h2></a><p>The primary function of most applets will be to provide search results. This can be done by adding a <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">search</code> function to your applet config. The next page will describe how to do this exactly.</p><p>Additionally you can provide a <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">open</code> function which can be executed when your applet itself is searched explicitly, and can be used to open some interface of your applet. We will come back to this in a later section.</p></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#advanced\" class=\"css-nn640c\"><h2>Advanced</h2></a><p>We can do some more advanced things using the config such as obtain the running LaunchMenu instance, obtain the currently running session, or add to the global context menu. This is outside of the scope of this guide, but you can check the in-depth <a href=\"/docs/concepts/applet-format\" class=\"css-0\">applet format</a> page for more information.</p><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#complete-interface\" class=\"css-nn640c\"><h3>complete interface</h3></a><p>The exact interface is rather hard to read since there are many reference to other types, but it may still help you. We however recommend exploring the types in a proper IDE with intellisense such as VSCode allowing you to simply follow type references by ctrl-clicking.</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div metastring=\"title=IAppletConfig.ts source=https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/application/applets/_types/IAppletConfig.ts spoiler\" class=\"css-1x06cmw\"><style data-emotion=\"css 1rf12ws\">.css-1rf12ws{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#EEEEEE;}.css-1rf12ws .MuiButtonBase-root{padding:8px;border-radius:50%;}</style><div class=\"css-1rf12ws\"><style data-emotion=\"css 1iuj5ih\">.css-1iuj5ih{padding-left:8px;}</style><div class=\"css-1iuj5ih\">IAppletConfig.ts</div><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"https://github.com/LaunchMenu/LaunchMenu/blob/master/packages/core/src/application/applets/_types/IAppletConfig.ts\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"view source\" title=\"View source\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\"></path></svg></span></button></a><div class=\"MuiBox-root jss13\"></div><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy code\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"></path></svg></span></button><button class=\"MuiButtonBase-root MuiIconButton-root\" tabindex=\"0\" type=\"button\" aria-label=\"Toggle line numbers\" title=\"Toggle line numbers\"><span class=\"MuiIconButton-label\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"></path></svg></span></button><style data-emotion=\"css 1739oy8\">.css-1739oy8{z-index:1;}</style><div class=\"MuiBackdrop-root css-1739oy8\" aria-hidden=\"true\" style=\"opacity:0;visibility:hidden\"><div></div></div></div><details><summary class=\"css-1iuj5ih\">View code</summary> <code class=\"language-ts undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#0000ff\">export</span><span> </span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IAppletConfig</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#2B91AF\">    </span><span class=\"token\" style=\"color:#36acaa\">S</span><span class=\"token\" style=\"color:#2B91AF\"> </span><span class=\"token\" style=\"color:#0000ff\">extends</span><span class=\"token\" style=\"color:#2B91AF\"> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IIdentifiedSettingsConfig</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#2B91AF\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#2B91AF\">        </span><span class=\"token\" style=\"color:#36acaa\">IJSON</span><span class=\"token\" style=\"color:#393A34\">,</span><span class=\"token\" style=\"color:#2B91AF\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#2B91AF\">        </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">ISettingsFolderMenuItem</span><span class=\"token\" style=\"color:#2B91AF\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#2B91AF\">    </span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#2B91AF\"> </span><span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#2B91AF\"> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IIdentifiedSettingsConfig</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">IJSON</span><span class=\"token\" style=\"color:#393A34\">,</span><span class=\"token\" style=\"color:#2B91AF\"> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">ISettingsFolderMenuItem</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#2B91AF\">\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token\" style=\"color:#2B91AF\"></span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The applet info for listings */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    info</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IAppletInfo</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Settings of the applet */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    settings</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">S</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** A possible category for this applet */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    coreCategory</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">CoreAppletType</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Development time specific information/tools */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    development</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Whether to listen for changes in code and auto reload the applet when detected */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        liveReload</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">boolean</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The directory to watch for changes (defaults to &#x27;build&#x27;) */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        watchDirectory</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token builtin\">string</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** A function to get the execution data of the config given a LM (and potentially session) instance */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    init</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IAppletLMInitializer</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token maybe-class-name\">TConfigSettings</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">S</span><span class=\"token\" style=\"color:#393A34\">&gt;&gt;</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** A function to get the execution data of the config given a session instance  */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    withSession</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IAppletSessionInitializer</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#393A34\">&amp;</span><span> </span><span class=\"token maybe-class-name\">Partial</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token maybe-class-name\">IAppletExecutionConfig</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IAppletExecutionConfig</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Menu items that should appear in all context menus */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    globalContextMenuBindings</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">ISubscribable</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token maybe-class-name\">IActionBinding</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Opens the application */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    open</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>args</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>context</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IOContext</span><span class=\"token\" style=\"color:#393A34\">;</span><span> </span><span class=\"token function-variable\" style=\"color:#393A34\">onClose</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/**\n</span></span><span style=\"flex-wrap:wrap\">     * Searches for items, by possibly returning an item, and a collection of sub-searches.\n</span><span style=\"flex-wrap:wrap\">     * May also return a matched pattern to ignore all items that don&#x27;t match a pattern.\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">query</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The query to be checked against\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">hook</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> A data hook to listen for changes\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@param</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> </span><span class=\"token doc-comment parameter\" style=\"color:#008000;font-style:italic\">executer</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The executer performing the search, for possible advanced optimizations\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     * </span><span class=\"token doc-comment\" style=\"color:#0000ff;font-style:italic\">@returns</span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\"> The search result\n</span></span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">     **/</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    search</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        query</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IQuery</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        hook</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IDataHook</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        executer</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">SearchExecuter</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token maybe-class-name\">IQuery</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token maybe-class-name\">IPrioritizedMenuItem</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">Promise</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token maybe-class-name\">ISearchableResult</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token maybe-class-name\">IQuery</span><span class=\"token\" style=\"color:#393A34\">,</span><span> </span><span class=\"token maybe-class-name\">IPrioritizedMenuItem</span><span class=\"token\" style=\"color:#393A34\">&gt;&gt;</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** Development time specific information/tools */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    development</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** A callback for when the module is reloaded during development, can be used to programmatically navigate to a specific section of your app.\n</span></span><span style=\"flex-wrap:wrap\">         * Return function is called when applet is disposed\n</span><span style=\"flex-wrap:wrap\"><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">         */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>        onReload</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#008000;font-style:italic\">// Supporting types</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IAppletDisposer</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    onDispose</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">Promise</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IAppletLMInitializer</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#2B91AF\"> </span><span class=\"token\" style=\"color:#0000ff\">extends</span><span class=\"token\" style=\"color:#2B91AF\"> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">ISettingsTree</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>data</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The settings for this applet */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    settings</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#36acaa\">T</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token doc-comment\" style=\"color:#008000;font-style:italic\">/** The running lm instance */</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#36acaa\">LM</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">LaunchMenu</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token maybe-class-name\">IAppletSessionInitializer</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">{</span><span>withSession</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">IAppletSessionInitializer</span><span class=\"token\" style=\"color:#393A34\">}</span><span> </span><span class=\"token\" style=\"color:#393A34\">&amp;</span><span> </span><span class=\"token maybe-class-name\">IAppletExecutionConfig</span><span> </span><span class=\"token\" style=\"color:#393A34\">&amp;</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>          </span><span class=\"token maybe-class-name\">IAppletDisposer</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">type</span><span> </span><span class=\"token maybe-class-name\" style=\"color:#2B91AF\">IAppletSessionInitializer</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    session</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token maybe-class-name\">LMSession</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token maybe-class-name\">IAppletExecutionConfig</span><span> </span><span class=\"token\" style=\"color:#393A34\">&amp;</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>onCloseSession</span><span class=\"token\" style=\"color:#393A34\">?</span><span class=\"token\" style=\"color:#393A34\">:</span><span> </span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span> </span><span class=\"token arrow\" style=\"color:#393A34\">=&gt;</span><span> </span><span class=\"token\" style=\"color:#0000ff\">void</span><span> </span><span class=\"token\" style=\"color:#393A34\">|</span><span> </span><span class=\"token known-class-name\" style=\"color:#2B91AF\">Promise</span><span class=\"token\" style=\"color:#393A34\">&lt;</span><span class=\"token\" style=\"color:#0000ff\">void</span><span class=\"token\" style=\"color:#393A34\">&gt;</span><span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">;</span><span>\n</span></span><span style=\"flex-wrap:wrap\">\n</span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#0000ff\">enum</span><span> </span><span class=\"token maybe-class-name\">CoreAppletType</span><span> </span><span class=\"token\" style=\"color:#393A34\">{</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#36acaa\">SETTINGS</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;settings&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#36acaa\">APPLETS</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;applets&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#36acaa\">HELP</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;help&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#36acaa\">SESSIONS</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;sessions&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#36acaa\">WINDOW</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;window&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#36acaa\">STYLING</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;styling&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span>    </span><span class=\"token\" style=\"color:#36acaa\">UNDO</span><span> </span><span class=\"token\" style=\"color:#393A34\">=</span><span> </span><span class=\"token\" style=\"color:#A31515\">&quot;undo&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span><span>\n</span></span><span style=\"flex-wrap:wrap\"><span></span><span class=\"token\" style=\"color:#393A34\">}</span></span></code></details></div><style data-emotion=\"css 1y7ni7f\">.css-1y7ni7f{background:#EEEEEE;}</style><div class=\"MuiBox-root jss14 css-1y7ni7f\"><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"guide/2.-environment-setup\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiButton-root MuiButton-contained\" tabindex=\"0\" type=\"button\"><span class=\"MuiButton-label\">Previous</span></button></a><div class=\"MuiBox-root jss15\"></div><a href=\"guide/4.-items-and-searches\" class=\"css-nn640c\"><button class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary\" tabindex=\"0\" type=\"button\"><span class=\"MuiButton-label\">Next</span></button></a></div></section></section></section>","scope":{}},"ToC":[{"name":"Applet interface","children":[{"name":"Applet functionality","children":[]},{"name":"Advanced","children":[{"name":"complete interface","children":[]}]}]}],"index":{"rootPath":"/docs","items":[{"name":"Guide","opened":true,"children":[{"name":"1.-Overview"},{"name":"2.-Environment-setup"},{"name":"3.-Applet-interface","selected":true},{"name":"4.-Items-and-searches"},{"name":"5.-Content-and-theming"},{"name":"6.-UILayers-and-menus"},{"name":"7.-Settings"},{"name":"8.-Actions"},{"name":"9.-Publishing-and-usage"}]},{"name":"Concepts","opened":false,"children":[{"name":"Applet-format"},{"name":"base","opened":false,"children":[{"name":"LaunchMenu"},{"name":"Session"},{"name":"IOContext"}]},{"name":"UI","opened":false,"children":[{"name":"MenuItems"},{"name":"UILayers"},{"name":"Menu"},{"name":"TextField"},{"name":"Content"}]},{"name":"Interaction","opened":false,"children":[{"name":"Actions"},{"name":"Common-actions"},{"name":"Search-system"},{"name":"Undo-redo"},{"name":"Key-handlers"}]},{"name":"Settings"}]},{"name":"API-overview"}]}},"__N_SSG":true}