{"pageProps":{"source":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", {\n    \"name\": \"Applets\",\n    \"depth\": 1\n  }, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Applets\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"LaunchMenu is nothing without its applets.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Applets are divided into 2 primary categories:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Utility: Applets which provide services to the user\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Core: Applets that exist to customize and control aspects of LaunchMenu\")), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Contributing\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Contributing\"), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Official LaunchMenu Applets\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Official LaunchMenu Applets\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"There isn't a large collection of applets yet but we have some ideas for useful ones. If you want to contribute to any of these feel free to contact us and discuss your ideas, either the following social media:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://app.element.io/#/room/#launchmenu:matrix.org\"\n  }, \"Element\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://github.com/LaunchMenu/LaunchMenu/discussions/categories/general\"\n  }, \"GitHub discussionski \")))), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"3rd party applets\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"3rd party applets\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In the (hopefully near) future our applet-manager core applet will also support installation of applets. Any 3rd party can simply publish their applet on npm, and users will be able to search for them and install them directly.\")))));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#applets\" class=\"css-nn640c\"><h1>Applets</h1></a><p>LaunchMenu is nothing without its applets.</p><p>Applets are divided into 2 primary categories:</p><ul><li>Utility: Applets which provide services to the user</li><li>Core: Applets that exist to customize and control aspects of LaunchMenu</li></ul><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#contributing\" class=\"css-nn640c\"><h2>Contributing</h2></a><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#official-launchmenu-applets\" class=\"css-nn640c\"><h3>Official LaunchMenu Applets</h3></a><p>There isn&#x27;t a large collection of applets yet but we have some ideas for useful ones. If you want to contribute to any of these feel free to contact us and discuss your ideas, either the following social media:</p><ul><li><a href=\"https://app.element.io/#/room/#launchmenu:matrix.org\" class=\"css-0\">Element</a></li><li><a href=\"http://github.com/LaunchMenu/LaunchMenu/discussions/categories/general\" class=\"css-0\">GitHub discussionski </a></li></ul></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#3rd-party-applets\" class=\"css-nn640c\"><h3>3rd party applets</h3></a><p>In the (hopefully near) future our applet-manager core applet will also support installation of applets. Any 3rd party can simply publish their applet on npm, and users will be able to search for them and install them directly.</p></section></section></section>","scope":{}},"ToC":[{"name":"Applets","children":[{"name":"Contributing","children":[{"name":"Official LaunchMenu Applets","children":[]},{"name":"3rd party applets","children":[]}]}]}],"index":{"rootPath":"/applets","items":[{"name":"utility","children":[{"name":"dictionary"},{"name":"notes"},{"name":"file-manager"},{"name":"internet-search"},{"name":"calculator"},{"name":"translator"},{"name":"snippets"},{"name":"time-tracker"},{"name":"calendar"}]},{"name":"core","children":[{"name":"help"},{"name":"applet-manager"},{"name":"settings-manager"},{"name":"window-manager"},{"name":"session-manager"},{"name":"theme-manager"},{"name":"undo-redo-manager"},{"name":"user-scripts"}]}]}},"__N_SSG":true}