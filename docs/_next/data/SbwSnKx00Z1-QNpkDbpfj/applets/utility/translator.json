{"pageProps":{"url":"https://launchmenu.github.io/applets/utility/translator","source":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", {\n    \"name\": \"Translator\",\n    \"depth\": 1\n  }, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Translator\"), mdx(StatusNotice, {\n    mdxType: \"StatusNotice\"\n  }), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Roadmap\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Roadmap\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The exact features of this applet have yet to be determined, but it will generally just provide simple quick translation results.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"This could be provided by using a specific search pattern, such as:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"en-nl: I like trains\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"which would translate \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"I like trains\"), \" from English to Dutch.\"), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"API\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"API\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"We would need to find a free, credentialless API that would allow for translation, which may be challenging if not impossible. LaunchMenu doesn't have a back-end in which it can securely hide credentials however, so if this isn't feasible we might need to find another way to achieve this.\")))));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#translator\" class=\"css-nn640c\"><h1>Translator</h1></a><style data-emotion=\"css 16q8120\">.css-16q8120{margin-top:20px;font-size:20px;font-weight:800;}</style><div class=\"css-16q8120\"><span aria-label=\"Nothing has been implemented yet\" class=\"\"><style data-emotion=\"css 1cd6ilh\">.css-1cd6ilh{color:red;}.css-1cd6ilh >*{vertical-align:bottom;font-size:1.5em;}</style><div class=\"MuiBox-root jss72 css-1cd6ilh\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z\"></path></svg></div></span>This applet has not yet been developed, but is on the roadmap.</div><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#roadmap\" class=\"css-nn640c\"><h2>Roadmap</h2></a><p>The exact features of this applet have yet to be determined, but it will generally just provide simple quick translation results.</p><p>This could be provided by using a specific search pattern, such as:</p><style data-emotion=\"css 1x06cmw\">.css-1x06cmw{box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);border-radius:10px;overflow:hidden;margin-bottom:8px;}.css-1x06cmw .linenumber{min-width:30px!important;color:#AAA!important;}.css-1x06cmw span{word-break:break-all;}</style><div class=\"css-1x06cmw\"><code class=\"language-text undefined\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:11px;line-height:14px;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;display:block;background-color:#FAFAFA;padding:8px\"><span style=\"flex-wrap:wrap\"><span>en-nl: I like trains</span></span></code></div><p>which would translate <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">I&nbsp;like&nbsp;trains</code> from English to Dutch.</p><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#api\" class=\"css-nn640c\"><h3>API</h3></a><p>We would need to find a free, credentialless API that would allow for translation, which may be challenging if not impossible. LaunchMenu doesn&#x27;t have a back-end in which it can securely hide credentials however, so if this isn&#x27;t feasible we might need to find another way to achieve this.</p></section></section></section>","scope":{}},"ToC":[{"name":"Translator","children":[{"name":"Roadmap","children":[{"name":"API","children":[]}]}]}],"index":{"rootPath":"/applets","items":[{"name":"utility","opened":true,"children":[{"name":"dictionary"},{"name":"notes"},{"name":"file-manager"},{"name":"internet-search"},{"name":"calculator"},{"name":"translator","selected":true},{"name":"snippets"},{"name":"time-tracker"},{"name":"calendar"}]},{"name":"core","opened":false,"children":[{"name":"help"},{"name":"applet-manager"},{"name":"settings-manager"},{"name":"window-manager"},{"name":"session-manager"},{"name":"lm-recorder"},{"name":"theme-manager"},{"name":"undo-redo-manager"},{"name":"user-scripts"}]}]}},"__N_SSG":true}