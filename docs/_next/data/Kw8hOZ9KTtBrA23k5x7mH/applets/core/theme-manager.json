{"pageProps":{"source":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", {\n    \"name\": \"Theme manager\",\n    \"depth\": 1\n  }, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Theme manager\"), mdx(StatusNotice, {\n    mdxType: \"StatusNotice\"\n  }), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Roadmap\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Roadmap\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The theme manager will be able to adjust the internal theme of LaunchMenu.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"This theme is already present within the code, and is consistently used in both LaunchMenu itself and in applets. It contains the following properties:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Colors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Elevations (shadows)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fonts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Radii (rounding of boxes)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Borders (box outlines)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Spacings (distance around and between boxes)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Icons\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Currently LaunchMenu contains no way to customize these values. This theme manager applet should be able to change most, if not all, of these theme properties.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"This would preferably be done by means of regular settings, in order to benefit of any features that settings may get in future such as exportability.\"))));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#theme-manager\" class=\"css-nn640c\"><h1>Theme manager</h1></a><style data-emotion=\"css 16q8120\">.css-16q8120{margin-top:20px;font-size:20px;font-weight:800;}</style><div class=\"css-16q8120\"><span aria-label=\"Nothing has been implemented yet\" class=\"\"><style data-emotion=\"css 1cd6ilh\">.css-1cd6ilh{color:red;}.css-1cd6ilh >*{vertical-align:bottom;font-size:1.5em;}</style><div class=\"MuiBox-root jss2 css-1cd6ilh\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z\"></path></svg></div></span>This applet has not yet been developed, but is on the roadmap.</div><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#roadmap\" class=\"css-nn640c\"><h2>Roadmap</h2></a><p>The theme manager will be able to adjust the internal theme of LaunchMenu.</p><p>This theme is already present within the code, and is consistently used in both LaunchMenu itself and in applets. It contains the following properties:</p><ul><li>Colors</li><li>Elevations (shadows)</li><li>Fonts</li><li>Radii (rounding of boxes)</li><li>Borders (box outlines)</li><li>Spacings (distance around and between boxes)</li><li>Icons</li></ul><p>Currently LaunchMenu contains no way to customize these values. This theme manager applet should be able to change most, if not all, of these theme properties.</p><p>This would preferably be done by means of regular settings, in order to benefit of any features that settings may get in future such as exportability.</p></section></section>","scope":{}},"ToC":[{"name":"Theme manager","children":[{"name":"Roadmap","children":[]}]}],"index":{"rootPath":"/applets","items":[{"name":"utility","children":[{"name":"dictionary"},{"name":"notes"},{"name":"file-manager"},{"name":"internet-search"},{"name":"calculator"},{"name":"translator"},{"name":"snippets"},{"name":"time-tracker"},{"name":"calendar"}]},{"name":"core","children":[{"name":"help"},{"name":"applet-manager"},{"name":"settings-manager"},{"name":"window-manager"},{"name":"session-manager"},{"name":"theme-manager","selected":true},{"name":"undo-redo-manager"},{"name":"user-scripts"}]}]}},"__N_SSG":true}