{"pageProps":{"source":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", {\n    \"name\": \"Applet manager\",\n    \"depth\": 1\n  }, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Applet manager\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The applet-manager applet allows users to open open applets.\"), mdx(ScreenShot, {\n    src: \"/applets/applet-manager/banner.png\",\n    alt: \"Notes banner\",\n    mdxType: \"ScreenShot\"\n  }), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Features\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Features\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Currently the applet manager only allows you to open applets.\\nSimply search for the applet you're interested in, and execute the primary action on an applet to open it.\"), mdx(ScreenShot, {\n    src: \"/applets/applet-manager/banner.png\",\n    alt: \"Notes banner\",\n    mdxType: \"ScreenShot\"\n  }), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In addition, the pattern \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"applet:\"), \" followed by your query can be used to only get applet results.\"), mdx(ScreenShot, {\n    src: \"/applets/applet-manager/searchPattern.png\",\n    alt: \"Search only applets\",\n    section: \"field\",\n    mdxType: \"ScreenShot\"\n  })), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Roadmap\",\n    \"depth\": 2\n  }, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Roadmap\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"We do have some important additions planned for the near future, making tthe applet-manager much more important.\"), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Installation\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Installation\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The applet-manager should be able to install and uninstall applets in LaunchMenu. The ability to customize and extend LaunchMenu is very important to us, and all of the infrastructure of loading applets from dedicated packages is already present.\\nWe make use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.npmjs.com/\"\n  }, \"NPM\"), \" directly to manage our applets.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In order to get this feature operational, a few tasks are still left:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use either npm's CLI package (as done in the LM installer) or yarn's package in order to install and uninstall packages (modules)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create some way of tagging npm packages with data to indicate they are valid LM applets for a certain version\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Setup some kind of version testing, such that we can check whether a given package is compatible with the LM version you're trying to install it in\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a way of searching for LM applets on NPM\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create the LM UI to manage this entire process\"))), mdx(\"section\", {\n    parentName: \"section\",\n    \"name\": \"Enabling/disabling\",\n    \"depth\": 3\n  }, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Enabling/disabling\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"It will probably be quite useful to be able to enable and disable applets temporarily. This can already be done by directly updating the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"settings/applets.json\"), \" file, but it would be nice to add some way of doing this through some UI.\")))));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#applet-manager\" class=\"css-nn640c\"><h1>Applet manager</h1></a><p>The applet-manager applet allows users to open open applets.</p><div></div><style data-emotion=\"css eog8h5\">.css-eog8h5{width:662px;height:412px;position:relative;z-index:1;background-color:white;overflow:hidden;border-radius:20px;box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);}@media (min-width:1000px){.css-eog8h5{margin:16px;}}</style><div class=\"css-eog8h5\"><style data-emotion=\"css 8yiw9w\">.css-8yiw9w{margin:-19px;margin-left:-19px;margin-top:-19px;}</style><div class=\"css-8yiw9w\"><img alt=\"Notes banner\" src=\"/applets/applet-manager/banner.png\" width=\"700\"/></div></div><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#features\" class=\"css-nn640c\"><h2>Features</h2></a><p>Currently the applet manager only allows you to open applets.\nSimply search for the applet you&#x27;re interested in, and execute the primary action on an applet to open it.</p><div></div><style data-emotion=\"css eog8h5\">.css-eog8h5{width:662px;height:412px;position:relative;z-index:1;background-color:white;overflow:hidden;border-radius:20px;box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);}@media (min-width:1000px){.css-eog8h5{margin:16px;}}</style><div class=\"css-eog8h5\"><style data-emotion=\"css 8yiw9w\">.css-8yiw9w{margin:-19px;margin-left:-19px;margin-top:-19px;}</style><div class=\"css-8yiw9w\"><img alt=\"Notes banner\" src=\"/applets/applet-manager/banner.png\" width=\"700\"/></div></div><p>In addition, the pattern <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">applet:</code> followed by your query can be used to only get applet results.</p><div></div><style data-emotion=\"css o6hi24\">.css-o6hi24{width:662px;height:59.99999999999999px;position:relative;z-index:1;background-color:white;overflow:hidden;border-radius:20px;box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3);}@media (min-width:1000px){.css-o6hi24{margin:16px;}}</style><div class=\"css-o6hi24\"><style data-emotion=\"css 8yiw9w\">.css-8yiw9w{margin:-19px;margin-left:-19px;margin-top:-19px;}</style><div class=\"css-8yiw9w\"><img alt=\"Search only applets\" src=\"/applets/applet-manager/searchPattern.png\" width=\"700\"/></div></div></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#roadmap\" class=\"css-nn640c\"><h2>Roadmap</h2></a><p>We do have some important additions planned for the near future, making tthe applet-manager much more important.</p><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#installation\" class=\"css-nn640c\"><h3>Installation</h3></a><p>The applet-manager should be able to install and uninstall applets in LaunchMenu. The ability to customize and extend LaunchMenu is very important to us, and all of the infrastructure of loading applets from dedicated packages is already present.\nWe make use <a href=\"https://www.npmjs.com/\" class=\"css-0\">NPM</a> directly to manage our applets.</p><p>In order to get this feature operational, a few tasks are still left:</p><ul><li>Use either npm&#x27;s CLI package (as done in the LM installer) or yarn&#x27;s package in order to install and uninstall packages (modules)</li><li>Create some way of tagging npm packages with data to indicate they are valid LM applets for a certain version</li><li>Setup some kind of version testing, such that we can check whether a given package is compatible with the LM version you&#x27;re trying to install it in</li><li>Create a way of searching for LM applets on NPM</li><li>Create the LM UI to manage this entire process</li></ul></section><section><style data-emotion=\"css nn640c\">.css-nn640c{-webkit-text-decoration:none;text-decoration:none;color:inherit;}</style><a href=\"#enabling/disabling\" class=\"css-nn640c\"><h3>Enabling/disabling</h3></a><p>It will probably be quite useful to be able to enable and disable applets temporarily. This can already be done by directly updating the <style data-emotion=\"css an0xih\">.css-an0xih{display:inline-block;background-color:#EEEEEE;word-break:break-word;}</style><code class=\"css-an0xih\">settings/applets.json</code> file, but it would be nice to add some way of doing this through some UI.</p></section></section></section>","scope":{}},"ToC":[{"name":"Applet manager","children":[{"name":"Features","children":[]},{"name":"Roadmap","children":[{"name":"Installation","children":[]},{"name":"Enabling/disabling","children":[]}]}]}],"index":{"rootPath":"/applets","items":[{"name":"utility","children":[{"name":"dictionary"},{"name":"notes"},{"name":"file-manager"},{"name":"internet-search"},{"name":"calculator"},{"name":"translator"},{"name":"snippets"},{"name":"time-tracker"},{"name":"calendar"}]},{"name":"core","children":[{"name":"help"},{"name":"applet-manager","selected":true},{"name":"settings-manager"},{"name":"window-manager"},{"name":"session-manager"},{"name":"theme-manager"},{"name":"undo-redo-manager"},{"name":"user-scripts"}]}]}},"__N_SSG":true}