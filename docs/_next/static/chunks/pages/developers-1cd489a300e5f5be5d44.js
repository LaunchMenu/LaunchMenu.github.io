_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[15],{CRg7:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/developers",function(){return n("D/4S")}])},"D/4S":function(e,t,n){"use strict";n.r(t);var c=n("Ji2X"),a=n("q1tI"),o=n("Indg"),s=n("AeFk"),i=n("hlFM"),r=n("Z3vd"),l=n("ofer"),m=n("qorR"),u=n.n(m),d=n("8Koj"),p=n.n(d),h=n("4HzQ"),b=n.n(h),g=n("Ff27"),y=n("YFqc"),f=n.n(y),j=n("kC8x");var x={name:"10k79is",styles:"width:min(400px, 100%)"},O={name:"q5y1la",styles:"min-width:min(550px, 100%)"},w=function(e){var t=e.children;return Object(s.c)(i.a,{display:"flex",my:8,flexWrap:"wrap",css:Object(s.b)({flexDirection:"row-reverse",justifyContent:"center"},"","")},Object(s.c)(i.a,{css:x,mb:2,flexShrink:0},Object(s.c)(v,null),Object(s.c)(j.a,{css:function(e){return{alignSelf:"center",fontWeight:800,fontSize:18,marginBottom:e.spacing(2)}}},"Make it. Make it now."),Object(s.c)(f.a,{href:"/docs/guide/1.-overview"},Object(s.c)(r.a,{variant:"contained",color:"primary",startIcon:Object(s.c)(u.a,null)},"Get started")),Object(s.c)(i.a,{mt:4,mb:2},Object(s.c)(j.a,null,"Learn about all the modules available in LaunchMenu:")),Object(s.c)(f.a,{href:"/docs/api-overview"},Object(s.c)(r.a,{variant:"contained",color:"default",startIcon:Object(s.c)(p.a,null),disableElevation:!0},"Api overview"))),Object(s.c)(i.a,{mr:2}),Object(s.c)(i.a,{flex:1,display:"flex",justifyContent:"center",css:O},Object(s.c)(i.a,null,t)))},v=function(){return Object(g.a)(),Object(s.c)(l.a,{variant:"h1",color:"primary",css:function(e){return{alignSelf:"center",fontSize:60,marginBottom:e.spacing(2)}}},Object(s.c)(b.a,null,"LaunchMenu Development"))},M=n("rg9q"),k=n("1fmr"),S=n("laQT"),L=n("wCtz"),T=n("wDVd"),I=function(e){var t=e.category,n=e.content,c=e.children,a=Object(k.a)({name:t});return Object(s.c)(i.a,{display:"flex",py:2,flexWrap:"wrap",css:function(e){return{marginTop:200,marginBottom:100,gap:e.spacing(2)}}},Object(s.c)(i.a,{minWidth:"fit-content",flex:1,display:"flex",justifyContent:"center"},Object(s.c)(i.a,{display:"inline-block"},n)),Object(s.c)(i.a,{flex:1,flexShrink:1,minWidth:"min(100%, 300px)",maxWidth:"500px"},Object(s.c)("section",{ref:a},Object(s.c)(L.b,{href:"#".concat(Object(S.a)(t))},Object(s.c)(T.a,null,t)),Object(s.c)(i.a,{mt:.5},c))))},C=n("wZIX"),B=n("LgGQ"),H=n("TPYD"),A=n("88CI"),E=n("YYT2"),P=n.n(E),z=n("csfp"),F=function(e){var t=e.title,n=e.children,c=e.docs,a=e.status,o=void 0===a?"supported":a,i=Object(k.a)({name:t});return Object(s.c)("section",{ref:i},Object(s.c)(A.a,{css:function(e){return{marginTop:e.spacing(2)}}},Object(s.c)(L.b,{href:"#".concat(Object(S.a)(t))},Object(s.c)(H.a,{status:o},t)),c&&Object(s.c)(z.a,{title:"Docs"},Object(s.c)(L.b,{href:c,css:function(e){return{marginLeft:e.spacing(2),">*":{verticalAlign:"middle"}}}},Object(s.c)(P.a,null)))),Object(s.c)("div",{css:function(e){return{paddingTop:e.spacing(1)}}},n))},D=n("WYSt"),_=function(e){var t=e.title,n=e.links,c=e.children,a=Object(k.a)(t);return Object(s.c)("section",{ref:a},Object(s.c)(T.a,{css:function(e){return{marginTop:e.spacing(4),marginBottom:e.spacing(2)}}},t),c,Object(s.c)("ul",null,n.map((function(e,t){var n=e.name,c=e.url;return Object(s.c)("li",{key:t},Object(s.c)("a",{href:c},n))}))))},U=n("tcPF"),W=n("ogp7"),q=n("HALo"),R=n("xyb1"),V=n.n(R),N=function(e){var t=Object(a.useState)(),n=t[0],c=t[1],o=Object(a.useCallback)((function(e,t){e>=t.duration&&(t.currentTime=0,t.play())}),[]);return Object(s.c)(V.a,null,(function(t){var a=t.isVisible;return n&&a!=n.isPlaying()&&n.play(),Object(s.c)(W.a,Object(q.a)({},e,{getControls:c,onTimeUpdate:o}))}))},Y=n("g4pe"),$=n.n(Y);var X={name:"13c5v93",styles:"box-shadow:0px 0px 30px -5px rgba(0,0,0,0.3)"};t.default=function(){return Object(s.c)(c.a,null,Object(s.c)($.a,null,Object(s.c)("meta",{property:"og:url",content:"https://launchmenu.github.io/developers",key:"og-url"}),Object(s.c)("meta",{property:"og:description",content:"Create easy and fast to use applets using LaunchMenu",key:"og-description"}),Object(s.c)("meta",{property:"description",content:"Create easy and fast to use applets using LaunchMenu",key:"description"}),Object(s.c)("meta",{name:"keywords",content:"Open Source, Utility, Keyboard, Applets, Development",key:"keywords"})),Object(s.c)(w,null,Object(s.c)(o.a,{title:"HelloWorld.ts",code:'export const info = {\n    name: "HelloWorld",\n    description: "A minimal example applet",\n    version: "0.0.0",\n    icon: <img width={30} src={Path.join(__dirname, "..", "images", "icon.png")} />,\n};\n\nexport const settings = createSettings({\n    version: "0.0.0",\n    settings: () => createSettingsFolder({ ...info, children: {\n        username: createStringSetting({name: "Username", init: "Bob"}),\n    }}),\n});\n\nconst items = [\n    createStandardMenuItem({\n        name: "Hello world",\n        onExecute: ({context}) => \n            alert(`Hello ${context.settings.get(settings).username.get()}!`)\n    }),\n];\n\nexport default declare({\n    info,\n    settings,\n    search: async (query, hook) => ({children: searchAction.get(items)}),\n});',language:"tsx",source:"https://github.com/LaunchMenu/LM-applet-examples/blob/main/examples/demosBasics/src/index.tsx",result:Object(s.c)(W.a,{src:"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/demosBasics/recordings/demo.webm"})})),Object(s.c)(B.a,{margin:2},Object(s.c)(C.a,{title:"Super flexible",body:Object(s.c)(a.Fragment,null,"LaunchMenu consists of independent composable building blocks, allowing you to create any experience you desire. The interfaces are designed to be as flexible as possible without restricting utility.")}),Object(s.c)(C.a,{title:"Quality environment",body:Object(s.c)(a.Fragment,null,"Use common web technologies to create applets, including"," ",Object(s.c)("a",{href:"https://www.typescriptlang.org/"},"TypeScript")," ","and ",Object(s.c)("a",{href:"https://reactjs.org/"},"React"),", which increase the maintainability of your code. Given LaunchMenu is built with"," ",Object(s.c)("a",{href:"https://www.electronjs.org/"},"Electron")," your applets will be cross-platform and able to reach a larger audience.")}),Object(s.c)(C.a,{title:"Vast API",body:Object(s.c)(a.Fragment,null,"LaunchMenu contains several systems to simplify common scenarios. Applets can make use of the settings system, menus and items, context menu actions, search handlers, themed components and more.")})),Object(s.c)(M.b,null,Object(s.c)(I,{category:"Ease of development",content:Object(s.c)(N,{src:"development/environment.mp4",maxWidth:600,css:X})},Object(s.c)(F,{title:"Composable approach"},"LaunchMenu has been created as a set of independent building blocks. This allows for more reuse, and more customization. When no block exists for your exact use case, you can often find a block that's doing something similar to what you want and reuse functions,"," ",Object(s.c)("a",{href:"https://reactjs.org/"},"React components")," and other structures that it uses internally."),Object(s.c)(F,{title:"Developer environment"},"LaunchMenu is written in"," ",Object(s.c)("a",{href:"https://www.typescriptlang.org/"},"TypeScript")," and all methods are documented with"," ",Object(s.c)("a",{href:"https://tsdoc.org/"},"TSDoc"),". This provides excellent intellisense support in modern IDEs (e.g."," ",Object(s.c)("a",{href:"https://code.visualstudio.com/"},"VSCode"),") which helps you understand what functions are doing under the hood and how to communicate with them."),Object(s.c)(F,{title:"LaunchMenu build tools"},"LaunchMenu includes a build utility, which compiles all TypeScript and resources into LaunchMenu-ready packages. A system is also provided which auto-reloads applets as you modify them to ease testing."),Object(s.c)(F,{title:"Applet ecosystem",status:{type:"longTerm",tooltip:"We will start working on this soon"}},"Simply upload your completed applet with the keyword",Object(s.c)(D.a,{children:"launchmenu-applet"})," to NPM in order for it to load into the applet ecosystem."),Object(s.c)(F,{title:"Open source"},"This is still a developing project, and we value your input. We welcome all new suggestions and contributions! We have already been through several re-designs, and we're not afraid of rewriting code when better alternatives are discovered."))),Object(s.c)(I,{category:"Menu items",content:Object(s.c)(a.Fragment,null,Object(s.c)(o.a,{title:"Item Creation",code:'const category = createStandardCategory({\n    name: "Hello"\n});\nconst items = [\n    createStandardMenuItem({\n        name: "Hello world",\n        icon: <img width={30} src={Path.join(__dirname, "..", "images", "icon.png")} />,\n        content: <Box>Hello world!</Box>,\n        onExecute: () => alert(`Hello john!`),\n    }),\n    createFolderMenuItem({\n        name: "Some folder",\n        category,\n        children: [\n            createStandardMenuItem({\n                name: "Bye world",\n                description: "More items within this directory",\n                content: <Box>Bye world!</Box>,\n                onExecute: () => alert(`Bye bob`),\n            }),\n        ],\n    }),\n];',language:"tsx",source:"https://github.com/LaunchMenu/LM-applet-examples/blob/main/examples/demosItems/src/index.tsx",result:Object(s.c)(W.a,{src:"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/demosItems/recordings/demo.webm"})}))},Object(s.c)(F,{title:"Standard items",docs:"/docs/concepts/ui/menuitems#standard-menu-items"},"Standard factories exist for creating simple but very customizable items. It automatically supports functionality like: searching, categories, content and context-items."),Object(s.c)(F,{title:"Custom items",docs:"/docs/concepts/ui/menuitems#custom-menu-items"},"Despite standardized factories being provided, menu items can be any react component with attached functionality. Menu-item sub-components can be reused to reduce duplicate code, yet allow you to customize whatever is necessary."),Object(s.c)(F,{title:"Context-menu",docs:"/docs/concepts/interaction/common-actions#context-menu-action"},"Using the ",Object(s.c)(L.a,{href:"#action-system"},"action system")," any additional functionality can be added to menu items."),Object(s.c)(F,{title:"Categories",docs:"/docs/concepts/ui/menu#categories"},"LaunchMenu supports simple item grouping using categories, to neatly organize your menus.")),Object(s.c)(M.b,null,Object(s.c)(I,{category:"Search system",content:Object(s.c)(a.Fragment,null,Object(s.c)(o.a,{title:"Search",code:'// Use a cache to keep the same items when typing\nconst resultCache = new SearchCache((name: string, image: string, species: string) =>\n    createStandardMenuItem({\n        name,\n        description: species,\n        content: <img width="100%" src={image} />,\n        onExecute: () => alert(`${name}!`),\n    })\n);\n\nexport default declare({\n    info,\n    settings,\n    search: async (query, hook) => {\n        const rawData = await fetch(\n            `https://rickandmortyapi.com/api/character?name=${query.search}`\n        );\n        const data: {\n            results: {name: string; image: string; species: string}[];\n        } = rawData.ok ? await rawData.json() : {results: []};\n\n        const items = data.results.map(({name, image, species}) =>\n            resultCache.get(name, image, species)\n        );\n        return {children: searchAction.get(items)};\n    },\n});',language:"tsx",source:"https://github.com/LaunchMenu/LM-applet-examples/blob/main/examples/demosSearch/src/index.tsx",result:Object(s.c)(W.a,{src:"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/demosSearch/recordings/demo.webm"})}))},Object(s.c)(F,{title:"Asynchronous searches",docs:"/docs/concepts/interaction/search-system#searchables"},"Searches are always asynchronous, allowing you to fetch remote data."),Object(s.c)(F,{title:"Recursive searches",docs:"/docs/concepts/interaction/search-system#recursive-searches"},"The search system is built for performing recursive searches, allowing you to add or remove a whole subtree of search results at once."),Object(s.c)(F,{title:"Dynamic searches",docs:"/docs/concepts/interaction/search-system#searchables"},"Using"," ",Object(s.c)("a",{href:"https://tarvk.github.io/model-react/examples/build/"},"model-react")," ","any search result can be added or removed after the search was performed, dynamically updating the results."))),Object(s.c)(I,{category:"Action system",content:Object(s.c)(a.Fragment,null,Object(s.c)(o.a,{title:"setTaskPriority.ts",code:'import { createContextAction,  singlePromptExecuteHandler, promptSelectExecuteHandler, \n    Priority, createStandardMenuItem } from "@launchmenu/core";\nimport {Field} from "model-react";\n\nexport type ITaskPriority = "high" | "medium" | "low";\nexport const setTaskPriority = createContextAction({\n    name: "Set priority level",\n    contextItem: { priority: Priority.MEDIUM /* Not to be confused with ITaskPriority */ },\n    core: (fields: Field<ITaskPriority>[]) => {\n        const executeBinding = singlePromptExecuteHandler.createBinding({\n            fields,\n            valueRetriever: ({field}) =>\n                promptSelectExecuteHandler.createBinding({\n                    field,\n                    options: ["low", "medium", "high"],\n                    createOptionView: level => createStandardMenuItem({name: level}),\n                }),\n        });\n\n        return {\n            // Return the bindings for executing the action in the menu\n            actionBindings: [executeBinding],\n        };\n    },\n});',language:"tsx",source:"https://github.com/LaunchMenu/LM-applet-examples/blob/main/examples/demosActions/src/setTaskPriority.tsx"}),Object(s.c)(o.a,{title:"Action Usage",code:'import {ITaskPriority, createStandardMenuItem} from "@launchmenu/core";\nfunction createTaskMenuItem({name}: {name: string}) {\n    const level = new Field<ITaskPriority>("medium");\n    return createStandardMenuItem({\n        name,\n        description: hook => level.get(hook),\n        onExecute: () => alert(level.get()),\n        actionBindings: [setTaskPriority.createBinding(level)],\n    });\n}\n\nconst items = [\n    createTaskMenuItem({name: "Meet Alice"}),\n    createTaskMenuItem({name: "Make pancakes"}),\n    createTaskMenuItem({name: "Free Hat"}),\n];',language:"tsx",source:"https://github.com/LaunchMenu/LM-applet-examples/blob/main/examples/demosActions/src/index.tsx",result:Object(s.c)(W.a,{src:"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/demosActions/recordings/demo.webm"})}))},Object(s.c)(F,{title:"Powerful action system",docs:"/docs/concepts/interaction/actions"},"LaunchMenu provides a generic action system. Menu items only provide functionality through their action bindings. This includes providing items to context menus, keyboard input handling, search handling, execution handling, and even selection event handling."),Object(s.c)(F,{title:"Multiple item selection"},"The action system is especially designed to support combined behavior of multiple selected actions. This makes sure users don't have to repeat the same actions multiple times and instead allows them to bulk operations."),Object(s.c)(F,{title:"Action specialization",docs:"/docs/concepts/interaction/actions#action-handlers"},"Actions can easily be extended in order to specialize them. This allows one action in the context-menu to perform different - but similar - tasks depending on the selected item."),Object(s.c)(F,{title:"Item specialization",docs:"/docs/concepts/interaction/common-actions#item-overrides"},"When an action is specialized, the context-menu item can also be specialized. This way a more specific name can be displayed as long as all selected items perform the exact same task."),Object(s.c)(F,{title:"Undo/redo integration",docs:"/docs/concepts/interaction/common-actions#execute-action"},"The primary execute action has built-in support for commands, allowing the user to undo and redo their performed actions.")),Object(s.c)(M.b,null,Object(s.c)(I,{category:"Settings",content:Object(s.c)(a.Fragment,null,Object(s.c)(o.a,{title:"Settings",code:'export const settings = createSettings({\n    version: "0.0.0",\n    settings: () =>\n        createSettingsFolder({\n            ...info,\n            children: {\n                username: createStringSetting({name: "Username", init: "Bob"}),\n            },\n        }),\n});\n\nconst Content: FC<{text: string}> = ({text}) => {\n    const context = useIOContext();\n    const [hook] = useDataHook();\n    const name = context?.settings.get(settings).username.get(hook);\n    return (\n        <Box color="primary">\n            {text} {name}!\n        </Box>\n    );\n};\n\nconst items = [\n    createStandardMenuItem({\n        name: "Hello world",\n        content: <Content text="Hello" />,\n        onExecute: ({context}) =>\n            alert(`Hello ${context.settings.get(settings).username.get()}!`),\n    }),\n];',language:"tsx",source:"https://github.com/LaunchMenu/LM-applet-examples/blob/main/examples/demosSettings/src/index.tsx",result:Object(s.c)(W.a,{src:"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/demosSettings/recordings/demo.webm"})}))},Object(s.c)(F,{title:"Simple setting declarations",docs:"/docs/concepts/settings"},"Easily create settings that users are able to alter to their likings, using the same menu items as used elsewhere."),Object(s.c)(F,{title:"Simple setting usage",docs:"/docs/concepts/settings"},"Obtain the setting values using the IOContext in a variety of places. Settings can also easily be subscribed to, instantly updating whatever depends on the setting."),Object(s.c)(F,{title:"Custom setting types",docs:"/docs/concepts/settings#custom-settings"},"Since settings are simply menu-items, one can easily make their own setting type."))),Object(s.c)(I,{category:"Undo/redo system",content:Object(s.c)(a.Fragment,null,Object(s.c)(o.a,{title:"Undo/redo",code:'const createTimesItem = (name: string) => {\n    const times = new Field(1);\n    return createStandardMenuItem({\n        name: hook => `${name} x${times.get(hook)}`,\n        // Use a command to allow the user to revert the change\n        onExecute: () => new SetFieldCommand(times, times.get() + 1),\n    });\n};\nconst items = [createTimesItem("Hello world"), createTimesItem("Bye world")];',language:"tsx",source:"https://github.com/LaunchMenu/LM-applet-examples/blob/main/examples/demosUndoRedo/src/index.tsx",result:Object(s.c)(W.a,{src:"https://raw.github.com/LaunchMenu/LM-applet-examples/main/examples/demosUndoRedo/recordings/demo.webm"})}))},Object(s.c)(F,{title:"Integrated undo/redo system",status:{type:"comingSoon",tooltip:"No applet to control the undo/redo facility is available yet"},docs:"/docs/concepts/interaction/undo-redo"},"Easily dispatch undoable commands from throughout your apple, and allow users to make mistakes without any consequences."),Object(s.c)(F,{title:"Asynchronous command execution",docs:"/docs/concepts/interaction/undo-redo#commands"},"Commands are allow to execute asynchronously, and perform any complex tasks."),Object(s.c)(F,{title:"Channeled command execution",docs:"/docs/concepts/interaction/undo-redo#resources"},'Since commands may execute asynchronously, "resources" can be used to define different channels for unrelated commands to execute in parallel.')),Object(s.c)(U.a,{amount:100}),Object(s.c)(M.b,null,Object(s.c)(U.a,{amount:100}),Object(s.c)(_,{title:"Community",links:[{name:"Github",url:"https://github.com/LaunchMenu/LaunchMenu/discussions"},{name:"Matrix chat",url:"https://matrix.to/#/!oKdXnjYicRtcwpbwAl:matrix.org?via=matrix.org?"}]},"As mentioned before, LaunchMenu is fully open-source! We welcome any contributions to the project, especially third party applets. In case that you want to contribute to our official repository, we do recommend discussing your ideas with us first however. This prevents you from investing a lot of time into something that doesn't line up with our vision. That said, we're open to most ideas, and definitely to any discussions! So don't hesitate to join the community, both as developer or as user, at one of the following links:"),Object(s.c)(U.a,{amount:100})),Object(s.c)(U.a,{amount:400}))}},YYT2:function(e,t,n){"use strict";var c=n("mBgD"),a=n("ey9+");Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=a(n("q1tI")),s=(0,c(n("8/g6")).default)(o.createElement("path",{d:"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.97.89 1.66.89H22c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 13.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm5 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm5 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"}),"More");t.default=s},qorR:function(e,t,n){"use strict";var c=n("mBgD"),a=n("ey9+");Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=a(n("q1tI")),s=(0,c(n("8/g6")).default)(o.createElement("path",{d:"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9H9V9h10v2zm-4 4H9v-2h6v2zm4-8H9V5h10v2z"}),"LibraryBooks");t.default=s}},[["CRg7",0,2,1,3,4,5,9]]]);