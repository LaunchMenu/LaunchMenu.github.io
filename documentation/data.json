{
    "classes": {
        "ChannelHandler": {
            "file": {
                "filename": "channelHandler.js",
                "directory": "I:\\projects\\Github\\LaunchMenu\\src\\core\\communication\\channel"
            },
            "range": [
                280,
                1448
            ],
            "name": "ChannelHandler",
            "description": "The public class to create channel senders and recievers, as the creation of a channel sender is asynchronous",
            "static": true,
            "methods": {
                "static": {
                    "public": [
                        {
                            "range": [
                                802,
                                937
                            ],
                            "name": "createSender",
                            "description": "Create a new channel sender, allowing to send messages to the channel",
                            "parameters": [
                                {
                                    "name": "ID",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The unique identifier for the channel",
                                    "optional": false
                                },
                                {
                                    "name": "subChannelID",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The subChannelID that will be used to access special subchannel methods",
                                    "optional": false
                                },
                                {
                                    "name": "senderID",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "An ID that the reciever of this channel can respond to (can be left out)",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Promise"
                                ],
                                "description": "An instance of the ChannelSender class"
                            }
                        },
                        {
                            "range": [
                                1331,
                                1445
                            ],
                            "name": "createReceiver",
                            "description": "Create a new channel reciever, allowing to recieve messages from the channel",
                            "parameters": [
                                {
                                    "name": "ID",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The unique identifier for the channel",
                                    "optional": false
                                },
                                {
                                    "name": "listeners",
                                    "type": [
                                        "Object"
                                    ],
                                    "description": "An object of functions to act on messages indexed by message type",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Promise"
                                ],
                                "description": "An instance of the ChannelReceiver class"
                            }
                        }
                    ],
                    "protected": [],
                    "private": []
                },
                "instance": {
                    "public": [],
                    "protected": [],
                    "private": []
                }
            },
            "fields": {
                "static": [],
                "instance": []
            },
            "types": []
        },
        "ChannelReceiver": {
            "file": {
                "filename": "channelReceiver.js",
                "directory": "I:\\projects\\Github\\LaunchMenu\\src\\core\\communication\\channel"
            },
            "range": [
                610,
                2085
            ],
            "name": "ChannelReceiver",
            "static": true,
            "methods": {
                "static": {
                    "public": [],
                    "protected": [],
                    "private": []
                },
                "instance": {
                    "public": [
                        {
                            "range": [
                                2435,
                                2570
                            ],
                            "name": "createSubChannel",
                            "description": "Create a subchannel that can overwrite certain listeners on the channel, or add listeners just for the sub channel",
                            "parameters": [
                                {
                                    "name": "ID",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The ID of the subchannel",
                                    "optional": false
                                },
                                {
                                    "name": "listeners",
                                    "type": [
                                        "Object"
                                    ],
                                    "description": "An object of functions to act on messages indexed by message type",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                2722,
                                2788
                            ],
                            "name": "deleteSubChannel",
                            "description": "Delete a subchannel",
                            "parameters": [
                                {
                                    "name": "ID",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The subChannel to remove",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                2895,
                                2936
                            ],
                            "name": "getID",
                            "description": "Get the channel ID",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "string"
                                ],
                                "description": "The channel ID"
                            }
                        },
                        {
                            "range": [
                                3035,
                                3298
                            ],
                            "name": "close",
                            "description": "Dispose of all data",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        }
                    ],
                    "protected": [],
                    "private": [
                        {
                            "range": [
                                3683,
                                4319
                            ],
                            "name": "__emitEvent",
                            "description": "Emit an event to the registered listener",
                            "parameters": [
                                {
                                    "name": "message",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The event type to invoke",
                                    "optional": false
                                },
                                {
                                    "name": "event",
                                    "type": [
                                        "ChannelReceiver~ChannelEvent"
                                    ],
                                    "description": "The event data to pass to the listener",
                                    "optional": false
                                },
                                {
                                    "name": "subChannelID",
                                    "type": [
                                        "string",
                                        "undefined"
                                    ],
                                    "description": "The subchannel of which to take the listener if available",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                4573,
                                5301
                            ],
                            "name": "__broadCastMessageTypes",
                            "description": "Broadcast all available message types to the specified processes/windows",
                            "parameters": [
                                {
                                    "name": "processes",
                                    "type": [
                                        "string",
                                        "Array"
                                    ],
                                    "description": "The processes/windows to send the message types to",
                                    "optional": true
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        }
                    ]
                }
            },
            "fields": {
                "static": [],
                "instance": []
            },
            "types": [
                {
                    "name": "ChannelEvent",
                    "type": {
                        "names": [
                            "object"
                        ]
                    },
                    "properties": [
                        {
                            "name": "senderID",
                            "description": "The ID of the channel that sent the message",
                            "type": [
                                "number"
                            ]
                        },
                        {
                            "name": "data",
                            "description": "The data that was sent with the event",
                            "type": [
                                "*"
                            ]
                        }
                    ]
                }
            ]
        },
        "ChannelSender": {
            "file": {
                "filename": "channelSender.js",
                "directory": "I:\\projects\\Github\\LaunchMenu\\src\\core\\communication\\channel"
            },
            "range": [
                512,
                900
            ],
            "name": "ChannelSender",
            "static": true,
            "methods": {
                "static": {
                    "public": [],
                    "protected": [],
                    "private": []
                },
                "instance": {
                    "public": [],
                    "protected": [
                        {
                            "range": [
                                1213,
                                2693
                            ],
                            "name": "_setupMethods",
                            "description": "Either requests methods to be set up according to the available message types,\rOr sets up the actual methods according to the passed data",
                            "parameters": [
                                {
                                    "name": "types",
                                    "type": [
                                        "Object"
                                    ],
                                    "description": "The available message types to set",
                                    "optional": true
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                2804,
                                2853
                            ],
                            "name": "_getID",
                            "description": "Get the channel ID",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "string"
                                ],
                                "description": "The channel ID"
                            }
                        },
                        {
                            "range": [
                                2970,
                                3039
                            ],
                            "name": "_getSubChannelID",
                            "description": "Get the subchannel ID",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "string"
                                ],
                                "description": "The subchannel ID"
                            }
                        }
                    ],
                    "private": [
                        {
                            "range": [
                                3197,
                                4029
                            ],
                            "name": "__setupChannelMessageTypeListener",
                            "description": "Starts listening for the channel receiver to send its available message types",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                4270,
                                4739
                            ],
                            "name": "__sendMessage",
                            "description": "Send a message to the channel receiver",
                            "parameters": [
                                {
                                    "name": "message",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The message type",
                                    "optional": false
                                },
                                {
                                    "name": "args",
                                    "type": [
                                        "Array"
                                    ],
                                    "description": "The data to send as an argument array",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        }
                    ]
                }
            },
            "fields": {
                "static": [],
                "instance": []
            },
            "types": []
        },
        "GlobalData": {
            "file": {
                "filename": "globalData.js",
                "directory": "I:\\projects\\Github\\LaunchMenu\\src\\core\\communication\\data\\globalData"
            },
            "range": [
                310,
                751
            ],
            "name": "GlobalData",
            "static": true,
            "methods": {
                "static": {
                    "public": [],
                    "protected": [],
                    "private": []
                },
                "instance": {
                    "public": [
                        {
                            "range": [
                                1088,
                                1283
                            ],
                            "name": "change",
                            "description": "Changes the data by providing an object with the field you want to alter,\rThe value 'undefined' can be used to delete a field",
                            "parameters": [
                                {
                                    "name": "data",
                                    "type": [
                                        "Object"
                                    ],
                                    "description": "The object with the altered fields",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Object"
                                ],
                                "description": "The currently saved data after the alteration"
                            }
                        },
                        {
                            "range": [
                                1518,
                                1937
                            ],
                            "name": "get",
                            "description": "Gets a specific property by specifying the path to said property",
                            "parameters": [
                                {
                                    "name": "path",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The path to the property",
                                    "optional": true
                                }
                            ],
                            "returns": {
                                "type": [
                                    "*"
                                ],
                                "description": "The data saved under the specified field"
                            }
                        },
                        {
                            "range": [
                                2400,
                                2801
                            ],
                            "name": "on",
                            "description": "Adds a listener to the object which will get invoked when data changes",
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": [
                                        "'update'",
                                        "'delete'",
                                        "'create'",
                                        "'change'"
                                    ],
                                    "description": "The event type to listen to (may be prefexid by path E.G. 'field.subField.update')",
                                    "optional": false
                                },
                                {
                                    "name": "listener",
                                    "type": [
                                        "function"
                                    ],
                                    "description": "The function to call once a property has been changed",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                3206,
                                3703
                            ],
                            "name": "off",
                            "description": "Removes a listener from the object which would have gotten invoked when data changes",
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": [
                                        "'update'",
                                        "'delete'",
                                        "'create'",
                                        "'change'"
                                    ],
                                    "description": "The event type that was listened to (may be prefexid by path E.G. 'field.subField.update')",
                                    "optional": false
                                },
                                {
                                    "name": "listener",
                                    "type": [
                                        "function"
                                    ],
                                    "description": "The function that was listening to said event type",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                3852,
                                3976
                            ],
                            "name": "dispose",
                            "description": "Gets rid of all connected data such that the object is safely removed",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        }
                    ],
                    "protected": [
                        {
                            "range": [
                                4202,
                                4252
                            ],
                            "name": "_setData",
                            "description": "Sets the initial data of the object, without sending events to other instances",
                            "parameters": [
                                {
                                    "name": "data",
                                    "type": [
                                        "Object"
                                    ],
                                    "description": "The data to store in the instance",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        }
                    ],
                    "private": [
                        {
                            "range": [
                                4598,
                                5757
                            ],
                            "name": "__setField",
                            "description": "Alters a local field and sends out an event to all listeners",
                            "parameters": [
                                {
                                    "name": "path",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The path to the field to change",
                                    "optional": false
                                },
                                {
                                    "name": "value",
                                    "type": [
                                        "*"
                                    ],
                                    "description": "The new value to store in the field",
                                    "optional": false
                                },
                                {
                                    "name": "type",
                                    "type": [
                                        "'delete'",
                                        "'create'",
                                        "'change'"
                                    ],
                                    "description": "The event type to execute",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                6118,
                                7355
                            ],
                            "name": "__emitEvent",
                            "description": "Sends an event to the correct listeners with the correct data",
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": [
                                        "'update'",
                                        "'delete'",
                                        "'create'",
                                        "'change'"
                                    ],
                                    "description": "The type of event to emit",
                                    "optional": false
                                },
                                {
                                    "name": "path",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The path to the field for which to emit the event",
                                    "optional": false
                                },
                                {
                                    "name": "event",
                                    "type": [
                                        "Object"
                                    ],
                                    "description": "The event to emit",
                                    "optional": true
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        }
                    ]
                }
            },
            "fields": {
                "static": [],
                "instance": []
            },
            "types": []
        },
        "GlobalDataHandler": {
            "file": {
                "filename": "globalDataHandler.js",
                "directory": "I:\\projects\\Github\\LaunchMenu\\src\\core\\communication\\data\\globalData"
            },
            "range": [
                279,
                7254
            ],
            "name": "GlobalDataHandler",
            "description": "A static class that allows you to create global data which will be synchronised between modules",
            "static": true,
            "methods": {
                "static": {
                    "public": [
                        {
                            "range": [
                                674,
                                1280
                            ],
                            "name": "create",
                            "description": "Creates a new globalData instance",
                            "parameters": [
                                {
                                    "name": "ID",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The identifier of the globalData (preferably prefixed with some class ID)",
                                    "optional": false
                                },
                                {
                                    "name": "defaultData",
                                    "type": [
                                        "Object"
                                    ],
                                    "description": "The data that the globalData should contain if it hasn't been initialised yet",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "GlobalData"
                                ],
                                "description": "The globalData instance"
                            }
                        }
                    ],
                    "protected": [
                        {
                            "range": [
                                1752,
                                5790
                            ],
                            "name": "_changeField",
                            "description": "Changes a field of for all instances of a specific globalData object",
                            "parameters": [
                                {
                                    "name": "ID",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The identifier of the globalData that this data belongs to",
                                    "optional": false
                                },
                                {
                                    "name": "currentData",
                                    "type": [
                                        "*"
                                    ],
                                    "description": "The data that is currently located at this path",
                                    "optional": false
                                },
                                {
                                    "name": "newData",
                                    "type": [
                                        "*"
                                    ],
                                    "description": "The data that we want to assign to this path",
                                    "optional": false
                                },
                                {
                                    "name": "path",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The path to assign the data to",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Object"
                                ],
                                "description": "The newly set data"
                            }
                        }
                    ],
                    "private": [
                        {
                            "range": [
                                5971,
                                7251
                            ],
                            "name": "__setup",
                            "description": "The initial setup method to be called by this file itself, initialises the static fields of the class",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        }
                    ]
                },
                "instance": {
                    "public": [],
                    "protected": [],
                    "private": []
                }
            },
            "fields": {
                "static": [],
                "instance": []
            },
            "types": []
        },
        "Settings": {
            "file": {
                "filename": "settings.js",
                "directory": "I:\\projects\\Github\\LaunchMenu\\src\\core\\communication\\data\\settings"
            },
            "range": [
                483,
                572
            ],
            "name": "Settings",
            "extends": [
                "GlobalData"
            ],
            "static": true,
            "methods": {
                "static": {
                    "public": [],
                    "protected": [],
                    "private": []
                },
                "instance": {
                    "public": [
                        {
                            "range": [
                                832,
                                975
                            ],
                            "name": "dispose",
                            "description": "Gets rid of all connected data such that the object is safely removed and saves the data in the file",
                            "parameters": [
                                {
                                    "name": "dontSave",
                                    "type": [
                                        "boolean"
                                    ],
                                    "description": "Whether to not save the file when disposing",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                1106,
                                1311
                            ],
                            "name": "save",
                            "description": "Saves the data in the specified file",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                1446,
                                1657
                            ],
                            "name": "reload",
                            "description": "Reloads the data from the specified file",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                1088,
                                1283
                            ],
                            "name": "change",
                            "description": "Changes the data by providing an object with the field you want to alter,\rThe value 'undefined' can be used to delete a field",
                            "parameters": [
                                {
                                    "name": "data",
                                    "type": [
                                        "Object"
                                    ],
                                    "description": "The object with the altered fields",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Object"
                                ],
                                "description": "The currently saved data after the alteration"
                            }
                        },
                        {
                            "range": [
                                1518,
                                1937
                            ],
                            "name": "get",
                            "description": "Gets a specific property by specifying the path to said property",
                            "parameters": [
                                {
                                    "name": "path",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The path to the property",
                                    "optional": true
                                }
                            ],
                            "returns": {
                                "type": [
                                    "*"
                                ],
                                "description": "The data saved under the specified field"
                            }
                        },
                        {
                            "range": [
                                2400,
                                2801
                            ],
                            "name": "on",
                            "description": "Adds a listener to the object which will get invoked when data changes",
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": [
                                        "'update'",
                                        "'delete'",
                                        "'create'",
                                        "'change'"
                                    ],
                                    "description": "The event type to listen to (may be prefexid by path E.G. 'field.subField.update')",
                                    "optional": false
                                },
                                {
                                    "name": "listener",
                                    "type": [
                                        "function"
                                    ],
                                    "description": "The function to call once a property has been changed",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                3206,
                                3703
                            ],
                            "name": "off",
                            "description": "Removes a listener from the object which would have gotten invoked when data changes",
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": [
                                        "'update'",
                                        "'delete'",
                                        "'create'",
                                        "'change'"
                                    ],
                                    "description": "The event type that was listened to (may be prefexid by path E.G. 'field.subField.update')",
                                    "optional": false
                                },
                                {
                                    "name": "listener",
                                    "type": [
                                        "function"
                                    ],
                                    "description": "The function that was listening to said event type",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        }
                    ],
                    "protected": [
                        {
                            "range": [
                                4202,
                                4252
                            ],
                            "name": "_setData",
                            "description": "Sets the initial data of the object, without sending events to other instances",
                            "parameters": [
                                {
                                    "name": "data",
                                    "type": [
                                        "Object"
                                    ],
                                    "description": "The data to store in the instance",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        }
                    ],
                    "private": [
                        {
                            "range": [
                                4598,
                                5757
                            ],
                            "name": "__setField",
                            "description": "Alters a local field and sends out an event to all listeners",
                            "parameters": [
                                {
                                    "name": "path",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The path to the field to change",
                                    "optional": false
                                },
                                {
                                    "name": "value",
                                    "type": [
                                        "*"
                                    ],
                                    "description": "The new value to store in the field",
                                    "optional": false
                                },
                                {
                                    "name": "type",
                                    "type": [
                                        "'delete'",
                                        "'create'",
                                        "'change'"
                                    ],
                                    "description": "The event type to execute",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                6118,
                                7355
                            ],
                            "name": "__emitEvent",
                            "description": "Sends an event to the correct listeners with the correct data",
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": [
                                        "'update'",
                                        "'delete'",
                                        "'create'",
                                        "'change'"
                                    ],
                                    "description": "The type of event to emit",
                                    "optional": false
                                },
                                {
                                    "name": "path",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The path to the field for which to emit the event",
                                    "optional": false
                                },
                                {
                                    "name": "event",
                                    "type": [
                                        "Object"
                                    ],
                                    "description": "The event to emit",
                                    "optional": true
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        }
                    ]
                }
            },
            "fields": {
                "static": [],
                "instance": []
            },
            "types": []
        },
        "SettingsHandler": {
            "file": {
                "filename": "settingsHandler.js",
                "directory": "I:\\projects\\Github\\LaunchMenu\\src\\core\\communication\\data\\settings"
            },
            "range": [
                608,
                8037
            ],
            "name": "SettingsHandler",
            "description": "A static class that allows you to create settings which will be synchronised between modules and can be saved in files",
            "static": true,
            "methods": {
                "static": {
                    "public": [
                        {
                            "range": [
                                979,
                                1325
                            ],
                            "name": "create",
                            "description": "Creates a new settings instance",
                            "parameters": [
                                {
                                    "name": "ID",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The identifier of the settings (preferably prefixed with some class ID)",
                                    "optional": false
                                },
                                {
                                    "name": "defaultData",
                                    "type": [
                                        "Object"
                                    ],
                                    "description": "The data that the settings should contain if no file exists yet",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Settings"
                                ],
                                "description": "The settings instance"
                            }
                        }
                    ],
                    "protected": [
                        {
                            "range": [
                                1759,
                                2448
                            ],
                            "name": "_create",
                            "description": "Creates a new settings instance",
                            "parameters": [
                                {
                                    "name": "ID",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The identifier of the settings (preferably prefixed with some class ID)",
                                    "optional": false
                                },
                                {
                                    "name": "defaultData",
                                    "type": [
                                        "Object"
                                    ],
                                    "description": "The data that the settings should contain if no file exists yet",
                                    "optional": false
                                },
                                {
                                    "name": "fileName",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The name of the file to store the settings in",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Settings"
                                ],
                                "description": "The settings instance"
                            }
                        },
                        {
                            "range": [
                                4466,
                                4717
                            ],
                            "name": "_getModuleFile",
                            "description": "Gets the contents of a file corresponding to a specific requestPath",
                            "parameters": [
                                {
                                    "name": "requestPath",
                                    "type": [
                                        "RequestPath"
                                    ],
                                    "description": "The path for which to get a file",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Object"
                                ],
                                "description": "The data that was retrieved from the file"
                            }
                        }
                    ],
                    "private": [
                        {
                            "range": [
                                2719,
                                3356
                            ],
                            "name": "__getFile",
                            "description": "Gets the contents of the file at the speciifed path",
                            "parameters": [
                                {
                                    "name": "path",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The path to get the data from",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Object"
                                ],
                                "description": "The data that was retrieved from the file"
                            }
                        },
                        {
                            "range": [
                                3608,
                                3772
                            ],
                            "name": "__setFile",
                            "description": "Writes contents in the file at the speciifed path",
                            "parameters": [
                                {
                                    "name": "path",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The path to write the data to",
                                    "optional": false
                                },
                                {
                                    "name": "data",
                                    "type": [
                                        "Object"
                                    ],
                                    "description": "The data to write to the file",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                4014,
                                4203
                            ],
                            "name": "__getPath",
                            "description": "Gets the correct fle path based on the file name (without extension)",
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The name of the file",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Object"
                                ],
                                "description": "The data that was retrieved from the file"
                            }
                        },
                        {
                            "range": [
                                4898,
                                8034
                            ],
                            "name": "__setup",
                            "description": "The initial setup method to be called by this file itself, initialises the static fields of the class",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        }
                    ]
                },
                "instance": {
                    "public": [],
                    "protected": [],
                    "private": []
                }
            },
            "fields": {
                "static": [],
                "instance": []
            },
            "types": []
        },
        "ExtendedJSON": {
            "file": {
                "filename": "extendedJSON.js",
                "directory": "I:\\projects\\Github\\LaunchMenu\\src\\core\\communication"
            },
            "range": [
                618,
                13615
            ],
            "name": "ExtendedJSON",
            "description": "An extended version of JSON that is able to also encode the following information:\r - Module classes\r - Module class instances (if the class has serialize and deserialize methods)\r - recursive objects/internal object references",
            "static": true,
            "methods": {
                "static": {
                    "public": [
                        {
                            "range": [
                                888,
                                6085
                            ],
                            "name": "encode",
                            "description": "Encode more complicated data into a serializable object",
                            "parameters": [
                                {
                                    "name": "object",
                                    "type": [
                                        "Object"
                                    ],
                                    "description": "The data you want to map",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Object"
                                ],
                                "description": "The object that represents your data as as serializable string"
                            }
                        },
                        {
                            "range": [
                                6374,
                                11254
                            ],
                            "name": "decode",
                            "description": "Decode the more complicated data that was encoded into a serializable object",
                            "parameters": [
                                {
                                    "name": "object",
                                    "type": [
                                        "Object"
                                    ],
                                    "description": "The data you want return into its source data",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Object"
                                ],
                                "description": "The source data in its format before encoding was applied"
                            }
                        },
                        {
                            "range": [
                                11525,
                                11603
                            ],
                            "name": "parse",
                            "description": "Use ExtendedJSON to turn a string into an object just like JSON would",
                            "parameters": [
                                {
                                    "name": "string",
                                    "type": [
                                        "String"
                                    ],
                                    "description": "The string to translate back into an object",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Object"
                                ],
                                "description": "The source object that the string was made from"
                            }
                        },
                        {
                            "range": [
                                11867,
                                11953
                            ],
                            "name": "stringify",
                            "description": "Use ExtendedJSON to turn an object into a string just like JSON would",
                            "parameters": [
                                {
                                    "name": "object",
                                    "type": [
                                        "Object"
                                    ],
                                    "description": "The source object to turn into a string",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "String"
                                ],
                                "description": "The string that the object was translated into"
                            }
                        }
                    ],
                    "protected": [],
                    "private": [
                        {
                            "range": [
                                12832,
                                13612
                            ],
                            "name": "__cleanObject",
                            "description": "Goes through an object and returns all the pathSymbols from it",
                            "parameters": [
                                {
                                    "name": "object",
                                    "type": [
                                        "Object"
                                    ],
                                    "description": "0 The object to clean up",
                                    "optional": false
                                },
                                {
                                    "name": "prop",
                                    "type": [
                                        "Symbol",
                                        "string"
                                    ],
                                    "description": "The property to remove from the object",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ],
                                "description": "The method returns no useful information"
                            }
                        }
                    ]
                },
                "instance": {
                    "public": [],
                    "protected": [],
                    "private": []
                }
            },
            "fields": {
                "static": [
                    {
                        "range": [
                            12148,
                            12218
                        ],
                        "name": "serializeSymbol",
                        "description": "Get the serializeSymbol to use as a function name in your own class, allowing said class to be serialized by ExtendedJSON",
                        "type": [
                            "Symbol"
                        ]
                    },
                    {
                        "range": [
                            12415,
                            12489
                        ],
                        "name": "deserializeSymbol",
                        "description": "Get the deserializeSymbol to use as a function name in your own class, allowing said class to be deserialized by ExtendedJSON",
                        "type": [
                            "Symbol"
                        ]
                    }
                ],
                "instance": []
            },
            "types": []
        },
        "IPC": {
            "file": {
                "filename": "IPC.js",
                "directory": "I:\\projects\\Github\\LaunchMenu\\src\\core\\communication"
            },
            "range": [
                501,
                18766
            ],
            "name": "IPC",
            "description": "A static class that allows for communication between different processes and windows",
            "static": true,
            "methods": {
                "static": {
                    "public": [
                        {
                            "range": [
                                967,
                                1153
                            ],
                            "name": "send",
                            "description": "Send data to another window or the main script",
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The event type to send (preferably prefixed with some class ID)",
                                    "optional": false
                                },
                                {
                                    "name": "data",
                                    "type": [
                                        "Object"
                                    ],
                                    "description": "The data to send",
                                    "optional": false
                                },
                                {
                                    "name": "dest",
                                    "type": [
                                        "string",
                                        "Array"
                                    ],
                                    "description": "The process/window ID(s) to send this data to",
                                    "optional": true
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Promise"
                                ],
                                "description": "An array of all the data that listeners for the event have returned"
                            }
                        },
                        {
                            "range": [
                                1482,
                                1662
                            ],
                            "name": "sendSync",
                            "description": "Send data synchronously to the main script",
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The event type to send (preferably prefixed with some class ID)",
                                    "optional": false
                                },
                                {
                                    "name": "data",
                                    "type": [
                                        "*"
                                    ],
                                    "description": "The data to send",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Array"
                                ],
                                "description": "An array of all the data that listeners for the event have returned"
                            }
                        },
                        {
                            "range": [
                                2004,
                                2460
                            ],
                            "name": "on",
                            "description": "Listens for data being sent by a process/window",
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The type of event to listen for",
                                    "optional": false
                                },
                                {
                                    "name": "handler",
                                    "type": [
                                        "function"
                                    ],
                                    "description": "The function to handle the event occuring",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                2759,
                                3258
                            ],
                            "name": "once",
                            "description": "Listens for data being sent by a process/window, but only listen for it once",
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The type of event to listen for",
                                    "optional": false
                                },
                                {
                                    "name": "handler",
                                    "type": [
                                        "function"
                                    ],
                                    "description": "The function to handle the event occuring",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                3548,
                                3949
                            ],
                            "name": "off",
                            "description": "Stops listening for data being sent by a process/window",
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": [
                                        "String"
                                    ],
                                    "description": "The type of event that is being listened for",
                                    "optional": false
                                },
                                {
                                    "name": "handler",
                                    "type": [
                                        "function"
                                    ],
                                    "description": "The function that handles the event when occuring",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                4149,
                                4197
                            ],
                            "name": "getID",
                            "description": "Gets the identifier of this process or window which other processes or windows can use to communicate",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "number"
                                ],
                                "description": "The numeric identifier"
                            }
                        }
                    ],
                    "protected": [
                        {
                            "range": [
                                4405,
                                4464
                            ],
                            "name": "_getWindows",
                            "description": "Get all the windows that are registered and can be communicated with (only works in the main process)",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "Array"
                                ],
                                "description": "The actual windows"
                            }
                        },
                        {
                            "range": [
                                4769,
                                4860
                            ],
                            "name": "_registerWindow",
                            "description": "Register a window such that it can start communicating with other processes and windows",
                            "parameters": [
                                {
                                    "name": "window",
                                    "type": [
                                        "BrowserWindow"
                                    ],
                                    "description": "The window to register",
                                    "optional": false
                                },
                                {
                                    "name": "windowID",
                                    "type": [
                                        "number"
                                    ],
                                    "description": "The ID to register the window under",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                5112,
                                5195
                            ],
                            "name": "_deregisterWindow",
                            "description": "Deregister a window for when it is destroyed, such that it is no longer listed as a valid window",
                            "parameters": [
                                {
                                    "name": "windowID",
                                    "type": [
                                        "number"
                                    ],
                                    "description": "The ID the window is registered under",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        }
                    ],
                    "private": [
                        {
                            "range": [
                                5663,
                                6845
                            ],
                            "name": "__emitEvent",
                            "description": "Emit an event to all the registered listeners in this process/window",
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The event type to invoke",
                                    "optional": false
                                },
                                {
                                    "name": "event",
                                    "type": [
                                        "IPC~IPCevent"
                                    ],
                                    "description": "The event data to pass to the listeners",
                                    "optional": false
                                },
                                {
                                    "name": "sync",
                                    "type": [
                                        "boolean"
                                    ],
                                    "description": "Whether to act synchronously and only allow sync returns",
                                    "optional": true
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Promise"
                                ],
                                "description": "An array of all the data that listeners for the event have returned"
                            }
                        },
                        {
                            "range": [
                                7486,
                                11256
                            ],
                            "name": "__send",
                            "description": "Send data to other processes/windows",
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The event type to send (preferbly prefixed with some module ID)",
                                    "optional": false
                                },
                                {
                                    "name": "data",
                                    "type": [
                                        "*"
                                    ],
                                    "description": "The data to send",
                                    "optional": false
                                },
                                {
                                    "name": "dest",
                                    "type": [
                                        "string",
                                        "Array"
                                    ],
                                    "description": "The process/window ID(s) to send this data to",
                                    "optional": true
                                },
                                {
                                    "name": "source",
                                    "type": [
                                        "number"
                                    ],
                                    "description": "The process/window ID that the event was originally sent from",
                                    "optional": false
                                },
                                {
                                    "name": "respID",
                                    "type": [
                                        "number"
                                    ],
                                    "description": "The ID of the response listener in the source process/window to call",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Promise"
                                ],
                                "description": "An array of all the data that listeners for the event have returned"
                            }
                        },
                        {
                            "range": [
                                11681,
                                12415
                            ],
                            "name": "__sendSync",
                            "description": "Send data synchronously to the main script",
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The event type to send (preferably prefixed with some class ID)",
                                    "optional": false
                                },
                                {
                                    "name": "data",
                                    "type": [
                                        "*"
                                    ],
                                    "description": "The data to send",
                                    "optional": false
                                },
                                {
                                    "name": "source",
                                    "type": [
                                        "number"
                                    ],
                                    "description": "The process/window ID that the event was originally sent from",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Array"
                                ],
                                "description": "An array of all the data that listeners for the event have returned"
                            }
                        },
                        {
                            "range": [
                                13001,
                                14500
                            ],
                            "name": "__sendResponse",
                            "description": "Send a response to the source window that emitted the event",
                            "parameters": [
                                {
                                    "name": "sourceID",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The ID of the event source process/window",
                                    "optional": false
                                },
                                {
                                    "name": "responseData",
                                    "type": [
                                        "object"
                                    ],
                                    "description": "The response data",
                                    "optional": false
                                },
                                {
                                    "name": "responseData.responseID",
                                    "type": [
                                        "number"
                                    ],
                                    "description": "The ID of the response in said process/window",
                                    "optional": false
                                },
                                {
                                    "name": "responseData.responses",
                                    "type": [
                                        "Array"
                                    ],
                                    "description": "The actual array of returned responses",
                                    "optional": false
                                },
                                {
                                    "name": "responseData.responseOriginCount",
                                    "type": [
                                        "number"
                                    ],
                                    "description": "The number of processes/windows that need to return responses",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                14926,
                                15656
                            ],
                            "name": "__recieveResponse",
                            "description": "Recieve a response from some process/window, and resolve promise when all are recieved",
                            "parameters": [
                                {
                                    "name": "responseID",
                                    "type": [
                                        "number"
                                    ],
                                    "description": "The ID of the response identifier",
                                    "optional": false
                                },
                                {
                                    "name": "responses",
                                    "type": [
                                        "Array"
                                    ],
                                    "description": "The actual array of returned responses",
                                    "optional": false
                                },
                                {
                                    "name": "responseOriginCount",
                                    "type": [
                                        "number"
                                    ],
                                    "description": "The number of processes/windows that need to return responses",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                15837,
                                18763
                            ],
                            "name": "__setup",
                            "description": "The initial setup method to be called by this file itself, initialises the static fields of the class",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        }
                    ]
                },
                "instance": {
                    "public": [],
                    "protected": [],
                    "private": []
                }
            },
            "fields": {
                "static": [],
                "instance": []
            },
            "types": [
                {
                    "name": "IPCevent",
                    "type": {
                        "names": [
                            "object"
                        ]
                    },
                    "properties": [
                        {
                            "name": "sourceID",
                            "description": "The ID of the process/window that original sent the event",
                            "type": [
                                "number"
                            ]
                        },
                        {
                            "name": "data",
                            "description": "The data that was sent with the event",
                            "type": [
                                "*"
                            ]
                        }
                    ]
                }
            ]
        },
        "Module": {
            "file": {
                "filename": "module.js",
                "directory": "I:\\projects\\Github\\LaunchMenu\\src\\core\\registry"
            },
            "range": [
                588,
                1897
            ],
            "name": "Module",
            "static": false,
            "methods": {
                "static": {
                    "public": [
                        {
                            "range": [
                                7324,
                                7482
                            ],
                            "name": "getPath",
                            "description": "Returns the path to this module class",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "string"
                                ],
                                "description": "The path to this module class"
                            }
                        },
                        {
                            "range": [
                                7626,
                                7684
                            ],
                            "name": "toString",
                            "description": "Returns the path to this module class",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "string"
                                ],
                                "description": "The path to this module class"
                            }
                        }
                    ],
                    "protected": [],
                    "private": []
                },
                "instance": {
                    "public": [
                        {
                            "range": [
                                6544,
                                6684
                            ],
                            "name": "toString",
                            "description": "Returns the path to this module instance",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "string"
                                ],
                                "description": "The path to this module instance"
                            }
                        },
                        {
                            "range": [
                                6843,
                                6960
                            ],
                            "name": "getClass",
                            "description": "Returns the class of this module instance",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "Class"
                                ],
                                "description": "The class of this module instance"
                            }
                        },
                        {
                            "range": [
                                7116,
                                7180
                            ],
                            "name": "getPath",
                            "description": "Returns the requestPath that created this module instance",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "RequestPath"
                                ],
                                "description": "The request path"
                            }
                        },
                        {
                            "range": [
                                11797,
                                13872
                            ],
                            "name": "dispose",
                            "description": "Disposes this module entirely, also getting rid of its connections to other modules",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "Promise"
                                ],
                                "description": "The promise that resolves once disposal has completed"
                            }
                        },
                        {
                            "range": [
                                14216,
                                16077
                            ],
                            "name": "requestHandle",
                            "description": "Request modules to handle the passed data and establish a connection with these modules",
                            "parameters": [
                                {
                                    "name": "request",
                                    "type": [
                                        "Registry~Request"
                                    ],
                                    "description": "The information on how to handle the data",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Promise"
                                ],
                                "description": "The channel(s) that have been created to answer the request"
                            }
                        }
                    ],
                    "protected": [],
                    "private": [
                        {
                            "range": [
                                2062,
                                4931
                            ],
                            "name": "__register",
                            "description": "Registers the module if it wasn't registered already",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "Module"
                                ],
                                "description": "A reference to itself"
                            }
                        },
                        {
                            "range": [
                                5208,
                                5370
                            ],
                            "name": "__init",
                            "description": "Adds a function to run before indicating that initialisation has finished",
                            "parameters": [
                                {
                                    "name": "method",
                                    "type": [
                                        "function"
                                    ],
                                    "description": "The function to run (may be async)",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Promise"
                                ],
                                "description": "A promise that resolves when the module is initialised"
                            }
                        },
                        {
                            "range": [
                                5762,
                                5874
                            ],
                            "name": "__onRegister",
                            "description": "Adds a then and catch function to the registration completion promise",
                            "parameters": [
                                {
                                    "name": "then",
                                    "type": [
                                        "function"
                                    ],
                                    "description": "The function to run when registration has finished",
                                    "optional": true
                                },
                                {
                                    "name": "ctch",
                                    "type": [
                                        "function"
                                    ],
                                    "description": "The function to run if something goes wrong during registration",
                                    "optional": true
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Promise"
                                ],
                                "description": "A reference to this module instance"
                            }
                        },
                        {
                            "range": [
                                6272,
                                6361
                            ],
                            "name": "onInit",
                            "description": "Adds a then and catch function to the initialization completion promise",
                            "parameters": [
                                {
                                    "name": "then",
                                    "type": [
                                        "function"
                                    ],
                                    "description": "The function to run when initialization has finished",
                                    "optional": true
                                },
                                {
                                    "name": "ctch",
                                    "type": [
                                        "function"
                                    ],
                                    "description": "The function to run if something goes wrong during initialization",
                                    "optional": true
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Promise"
                                ],
                                "description": "A reference to this module instance"
                            }
                        },
                        {
                            "range": [
                                8004,
                                9298
                            ],
                            "name": "__getMethods",
                            "description": "Gets all the methods of this module that are available for channels",
                            "parameters": [
                                {
                                    "name": "regexFilter",
                                    "type": [
                                        "Regex"
                                    ],
                                    "description": "The filter to apply to determine whether or not the method should be returned",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Object"
                                ],
                                "description": "All methods indexed by name"
                            }
                        },
                        {
                            "range": [
                                9467,
                                10597
                            ],
                            "name": "__createChannelMethods",
                            "description": "Creates all methods to interact with this module over a channel",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "Object"
                                ],
                                "description": "All methods indexed by name"
                            }
                        },
                        {
                            "range": [
                                10914,
                                11567
                            ],
                            "name": "__disconnectDescendant",
                            "description": "Disconnects a module from this module (But doesn't dispose it)",
                            "parameters": [
                                {
                                    "name": "requestPath",
                                    "type": [
                                        "RequestPath"
                                    ],
                                    "description": "The request path for the module to disconnect",
                                    "optional": false
                                },
                                {
                                    "name": "type",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The type of request that the module was instiated for",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        }
                    ]
                }
            },
            "fields": {
                "static": [],
                "instance": []
            },
            "types": []
        },
        "Registry": {
            "file": {
                "filename": "registry.js",
                "directory": "I:\\projects\\Github\\LaunchMenu\\src\\core\\registry"
            },
            "range": [
                1721,
                23557
            ],
            "name": "Registry",
            "description": "A class to track all the modules, and handle module requests",
            "static": true,
            "methods": {
                "static": {
                    "public": [
                        {
                            "range": [
                                2069,
                                2726
                            ],
                            "name": "requestHandle",
                            "description": "Request modules to handle the passed data and establish a connection with these modules",
                            "parameters": [
                                {
                                    "name": "request",
                                    "type": [
                                        "Request"
                                    ],
                                    "description": "The information on how to handle the data",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Promise"
                                ],
                                "description": "The channel(s) that have been created to answer the request"
                            }
                        },
                        {
                            "range": [
                                3004,
                                4581
                            ],
                            "name": "requestModule",
                            "description": "Request module classes of a specific type",
                            "parameters": [
                                {
                                    "name": "request",
                                    "type": [
                                        "Request"
                                    ],
                                    "description": "The information on what module to get",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Class",
                                    "Array"
                                ],
                                "description": "The module(s) that it could find with the specified type"
                            }
                        },
                        {
                            "range": [
                                17223,
                                18452
                            ],
                            "name": "getModuleInstanceChannels",
                            "description": "Gets channels to all instances of a specific module class",
                            "parameters": [
                                {
                                    "name": "module",
                                    "type": [
                                        "Class",
                                        "Module"
                                    ],
                                    "description": "The module to get the instance of",
                                    "optional": false
                                },
                                {
                                    "name": "subChannel",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The sub channel to target",
                                    "optional": true
                                },
                                {
                                    "name": "source",
                                    "type": [
                                        "Module",
                                        "string"
                                    ],
                                    "description": "The channelID to return messages to if needed",
                                    "optional": false
                                },
                                {
                                    "name": "windowID",
                                    "type": [
                                        "number"
                                    ],
                                    "description": "Only looks in this window for instances if provided",
                                    "optional": true
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Promise"
                                ],
                                "description": "The channels that were set up for the found modules"
                            }
                        }
                    ],
                    "protected": [
                        {
                            "range": [
                                4838,
                                6098
                            ],
                            "name": "_loadModule",
                            "description": "Loads a module at the specified path relative to the modules folder",
                            "parameters": [
                                {
                                    "name": "path",
                                    "type": [
                                        "string"
                                    ],
                                    "description": "The path to the module class",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Class"
                                ],
                                "description": "The module class"
                            }
                        },
                        {
                            "range": [
                                6256,
                                6327
                            ],
                            "name": "_loadAllModules",
                            "description": "Loads all the modules",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "Array"
                                ],
                                "description": "All the module classes that have been loaded"
                            }
                        },
                        {
                            "range": [
                                6607,
                                7216
                            ],
                            "name": "_registerModuleInstance",
                            "description": "Registeres the module so the registry knows of its existence",
                            "parameters": [
                                {
                                    "name": "moduleInstance",
                                    "type": [
                                        "Module"
                                    ],
                                    "description": "The module to register",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "number"
                                ],
                                "description": "The unique ID that the module instance has now been assigned"
                            }
                        },
                        {
                            "range": [
                                7445,
                                8141
                            ],
                            "name": "_deregisterModuleInstance",
                            "description": "Deregisters the module so the registry knows it is no longer used",
                            "parameters": [
                                {
                                    "name": "moduleInstance",
                                    "type": [
                                        "Module"
                                    ],
                                    "description": "The module to deregister",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        },
                        {
                            "range": [
                                8327,
                                8413
                            ],
                            "name": "_getModuleInstanceCount",
                            "description": "Returns the amount of modules that are currently registered",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "number"
                                ],
                                "description": "The amount of modules are currently registered"
                            }
                        }
                    ],
                    "private": [
                        {
                            "range": [
                                8791,
                                9111
                            ],
                            "name": "__getListeners",
                            "description": "Creates an object to store what classes can answer a certain request type if it hasn't been created already, and returns it",
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": [
                                        "String"
                                    ],
                                    "description": "The request type to return the object of",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Registry~Requestlistener"
                                ],
                                "description": "An object that tracks the listeners for a certain request type"
                            }
                        },
                        {
                            "range": [
                                9370,
                                9469
                            ],
                            "name": "__getModulesPath",
                            "description": "Returns the relative path from this class to the modules directory",
                            "parameters": [
                                {
                                    "name": "path",
                                    "type": [
                                        "String"
                                    ],
                                    "description": "The path to append to the modules directory",
                                    "optional": true
                                }
                            ],
                            "returns": {
                                "type": [
                                    "String"
                                ],
                                "description": "The relative path to the directory"
                            }
                        },
                        {
                            "range": [
                                9779,
                                11100
                            ],
                            "name": "__getModules",
                            "description": "Retrieves the modules that can handle the passed request",
                            "parameters": [
                                {
                                    "name": "request",
                                    "type": [
                                        "Registry~Request"
                                    ],
                                    "description": "The request to find module classes for",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Class",
                                    "Array"
                                ],
                                "description": "The module classes that have been chosen to handle the request"
                            }
                        },
                        {
                            "range": [
                                11755,
                                14592
                            ],
                            "name": "__finishRequest",
                            "description": "Finishes the request by serving the correct data based on the module classes that were found",
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": [
                                        "'module'",
                                        "'handle'"
                                    ],
                                    "description": "The type of request that was made (either to handle data, or to get modules)",
                                    "optional": false
                                },
                                {
                                    "name": "requests",
                                    "type": [
                                        "Array"
                                    ],
                                    "description": "The requests that are being finished (only contains 1 if type=='handle')",
                                    "optional": false
                                },
                                {
                                    "name": "requestsModules",
                                    "type": [
                                        "Array"
                                    ],
                                    "description": "The modules that are found to match each request",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Promise",
                                    "Promise",
                                    "Promise"
                                ],
                                "description": "The data that the request results in"
                            }
                        },
                        {
                            "range": [
                                15147,
                                16632
                            ],
                            "name": "__request",
                            "description": "Handles one or more requests and serves the responses",
                            "parameters": [
                                {
                                    "name": "requests",
                                    "type": [
                                        "Array"
                                    ],
                                    "description": "The requests to make",
                                    "optional": false
                                },
                                {
                                    "name": "type",
                                    "type": [
                                        "'module'",
                                        "'handle'"
                                    ],
                                    "description": "The type of request that was made (either to handle data, or to get modules)",
                                    "optional": false
                                },
                                {
                                    "name": "synced",
                                    "type": [
                                        "boolean"
                                    ],
                                    "description": "Whether or not to request data synchronously (can only be synced if type=='module')",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Promise",
                                    "Promise",
                                    "Promise"
                                ],
                                "description": "The data that the request results in"
                            }
                        },
                        {
                            "range": [
                                18633,
                                23554
                            ],
                            "name": "__setup",
                            "description": "The initial setup method to be called by this file itself, initialises the static fields of the class",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        }
                    ]
                },
                "instance": {
                    "public": [],
                    "protected": [],
                    "private": []
                }
            },
            "fields": {
                "static": [],
                "instance": []
            },
            "types": [
                {
                    "name": "Request",
                    "description": "A request that can be made to retrieve a module",
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "properties": [
                        {
                            "name": "type",
                            "description": "The type of handeling you are requesting",
                            "type": [
                                "string"
                            ]
                        },
                        {
                            "name": "use",
                            "description": "What modules to use to answer the request",
                            "type": [
                                "'all'",
                                "'one'",
                                "function"
                            ]
                        },
                        {
                            "name": "data",
                            "description": "Any extra data you want to pass that modules can use to determine if they can answer the request",
                            "type": [
                                "Object"
                            ]
                        },
                        {
                            "name": "source",
                            "description": "The module that sent out the request (can be left out when usimg Module.requestHandle)",
                            "type": [
                                "Module"
                            ]
                        },
                        {
                            "name": "methods",
                            "description": "Extra methods that can get called by the handle (is only used by Module.requestHandle)",
                            "type": [
                                "Object"
                            ]
                        }
                    ]
                },
                {
                    "name": "Requestlistener",
                    "description": "The data that is stored to track what modules can answer what requests",
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "properties": [
                        {
                            "name": "type",
                            "description": "The type of request to handle",
                            "type": [
                                "string"
                            ]
                        },
                        {
                            "name": "listeners",
                            "description": "The modules that can answer this request",
                            "type": [
                                "Array"
                            ]
                        },
                        {
                            "name": "listeners[].module",
                            "description": "The module class that can answer the request",
                            "type": [
                                "Class"
                            ]
                        },
                        {
                            "name": "listeners[].filter",
                            "description": "The filter to make sure the class can handle this request",
                            "type": [
                                "function"
                            ]
                        }
                    ]
                }
            ]
        },
        "RequestPath": {
            "file": {
                "filename": "requestPath.js",
                "directory": "I:\\projects\\Github\\LaunchMenu\\src\\core\\registry"
            },
            "range": [
                494,
                1128
            ],
            "name": "RequestPath",
            "static": false,
            "methods": {
                "static": {
                    "public": [],
                    "protected": [],
                    "private": []
                },
                "instance": {
                    "public": [
                        {
                            "range": [
                                1393,
                                1632
                            ],
                            "name": "toString",
                            "description": "Gets the string representation of this path",
                            "parameters": [
                                {
                                    "name": "unique",
                                    "type": [
                                        "boolean"
                                    ],
                                    "description": "Whether or not to include the unique ID of each module instance",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "string"
                                ],
                                "description": "The string representation of this request path"
                            }
                        },
                        {
                            "range": [
                                1884,
                                2270
                            ],
                            "name": "getSubPath",
                            "description": "Creates a new instance of RequestPath with the last n modules removed",
                            "parameters": [
                                {
                                    "name": "removeCount",
                                    "type": [
                                        "number"
                                    ],
                                    "description": "The number of modules to remove",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "RequestPath"
                                ],
                                "description": "The newly created request path"
                            }
                        },
                        {
                            "range": [
                                2590,
                                3184
                            ],
                            "name": "augmentPath",
                            "description": "Creates a new instance of RequestPath with a new module added",
                            "parameters": [
                                {
                                    "name": "module",
                                    "type": [
                                        "Module",
                                        "string"
                                    ],
                                    "description": "The module to append to the path",
                                    "optional": false
                                },
                                {
                                    "name": "ID",
                                    "type": [
                                        "number"
                                    ],
                                    "description": "The unique ID of the module that is added",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "RequestPath"
                                ],
                                "description": "The newly created request path"
                            }
                        },
                        {
                            "range": [
                                3431,
                                3650
                            ],
                            "name": "getModuleID",
                            "description": "Returns the moduleID at a specific index",
                            "parameters": [
                                {
                                    "name": "index",
                                    "type": [
                                        "number"
                                    ],
                                    "description": "The indedx at which to get the module (returns the last if left out)",
                                    "optional": true
                                }
                            ],
                            "returns": {
                                "type": [
                                    "RequestPath~ModuleID"
                                ],
                                "description": "The moduleID"
                            }
                        }
                    ],
                    "protected": [],
                    "private": []
                }
            },
            "fields": {
                "static": [],
                "instance": []
            },
            "types": [
                {
                    "name": "ModuleID",
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "properties": [
                        {
                            "name": "module",
                            "description": "The path to the module class",
                            "type": [
                                "string"
                            ]
                        },
                        {
                            "name": "ID",
                            "description": "The unique ID of the module instance",
                            "type": [
                                "number"
                            ]
                        }
                    ]
                }
            ]
        },
        "State": {
            "file": {
                "filename": "booleanProcess.js",
                "directory": "I:\\projects\\Github\\LaunchMenu\\src\\core\\utils"
            },
            "range": [
                223,
                284
            ],
            "name": "State",
            "static": false,
            "methods": {
                "static": {
                    "public": [],
                    "protected": [],
                    "private": []
                },
                "instance": {
                    "public": [
                        {
                            "range": [
                                506,
                                601
                            ],
                            "name": "true",
                            "description": "Check whether the state is true, or turn it to true",
                            "parameters": [
                                {
                                    "name": "setState",
                                    "type": [
                                        "boolean"
                                    ],
                                    "description": "Whether to turn the state to true",
                                    "optional": true
                                }
                            ],
                            "returns": {
                                "type": [
                                    "boolean"
                                ],
                                "description": "If the state is true"
                            }
                        },
                        {
                            "range": [
                                827,
                                923
                            ],
                            "name": "false",
                            "description": "Check whether the state is false, or turn it to false",
                            "parameters": [
                                {
                                    "name": "setState",
                                    "type": [
                                        "boolean"
                                    ],
                                    "description": "Whether to turn the state to false",
                                    "optional": true
                                }
                            ],
                            "returns": {
                                "type": [
                                    "boolean"
                                ],
                                "description": "If the state is false"
                            }
                        },
                        {
                            "range": [
                                1177,
                                1279
                            ],
                            "name": "turningTrue",
                            "description": "Check whether the state is turning true, or turn it to turning true",
                            "parameters": [
                                {
                                    "name": "setState",
                                    "type": [
                                        "boolean"
                                    ],
                                    "description": "Whether to turn the state to turning true",
                                    "optional": true
                                }
                            ],
                            "returns": {
                                "type": [
                                    "boolean"
                                ],
                                "description": "If the state is turning true"
                            }
                        },
                        {
                            "range": [
                                1537,
                                1640
                            ],
                            "name": "turningFalse",
                            "description": "Check whether the state is turning false, or turn it to turning false",
                            "parameters": [
                                {
                                    "name": "setState",
                                    "type": [
                                        "boolean"
                                    ],
                                    "description": "Whether to turn the state to turning false",
                                    "optional": true
                                }
                            ],
                            "returns": {
                                "type": [
                                    "boolean"
                                ],
                                "description": "If the state is turning false"
                            }
                        },
                        {
                            "range": [
                                1801,
                                1881
                            ],
                            "name": "trueOrTurningTrue",
                            "description": "Check whether the state is true ot turning true",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "boolean"
                                ],
                                "description": "If the state is true orturning true"
                            }
                        },
                        {
                            "range": [
                                2046,
                                2128
                            ],
                            "name": "falseOrTurningFalse",
                            "description": "Check whether the state is false ot turning false",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "boolean"
                                ],
                                "description": "If the state is false orturning false"
                            }
                        }
                    ],
                    "protected": [],
                    "private": []
                }
            },
            "fields": {
                "static": [],
                "instance": []
            },
            "types": []
        },
        "WindowHandler": {
            "file": {
                "filename": "windowHandler.js",
                "directory": "I:\\projects\\Github\\LaunchMenu\\src\\core\\window"
            },
            "range": [
                1035,
                13233
            ],
            "name": "WindowHandler",
            "description": "A static class that allows for the creation and destruction of windows",
            "static": true,
            "methods": {
                "static": {
                    "public": [
                        {
                            "range": [
                                8725,
                                9949
                            ],
                            "name": "openModuleInstance",
                            "description": "Opens a module in the proper window, will automatically open the window if it isn't already",
                            "parameters": [
                                {
                                    "name": "moduleData",
                                    "type": [
                                        "object"
                                    ],
                                    "description": "The settings data for the module to open",
                                    "optional": false
                                },
                                {
                                    "name": "request",
                                    "type": [
                                        "Registry~Request"
                                    ],
                                    "description": "The request that caused this module to be opened",
                                    "optional": false
                                },
                                {
                                    "name": "modulePath",
                                    "type": [
                                        "strubg"
                                    ],
                                    "description": "The path to the class of the module to be instantiated",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Promise"
                                ],
                                "description": "A channel to the module that has been created"
                            }
                        }
                    ],
                    "protected": [
                        {
                            "range": [
                                6656,
                                8217
                            ],
                            "name": "_close",
                            "description": "Close a window (Doesn't properly dispose the modules loaded inside it)",
                            "parameters": [
                                {
                                    "name": "windowID",
                                    "type": [
                                        "number"
                                    ],
                                    "description": "The ID of the window to close",
                                    "optional": true
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Promise"
                                ],
                                "description": "Resolves once the window has fulyl closed"
                            }
                        }
                    ],
                    "private": [
                        {
                            "range": [
                                1322,
                                6381
                            ],
                            "name": "__open",
                            "description": "Opens a window according to the saved settings of that window",
                            "parameters": [
                                {
                                    "name": "windowID",
                                    "type": [
                                        "number"
                                    ],
                                    "description": "The ID of the window to open",
                                    "optional": false
                                }
                            ],
                            "returns": {
                                "type": [
                                    "Promise"
                                ],
                                "description": "Resolves once the window fully opened and loaded"
                            }
                        },
                        {
                            "range": [
                                10130,
                                13230
                            ],
                            "name": "__setup",
                            "description": "The initial setup method to be called by this file itself, initialises the static fields of the class",
                            "parameters": [],
                            "returns": {
                                "type": [
                                    "undefined"
                                ]
                            }
                        }
                    ]
                },
                "instance": {
                    "public": [],
                    "protected": [],
                    "private": []
                }
            },
            "fields": {
                "static": [],
                "instance": []
            },
            "types": []
        }
    },
    "global": {
        "functions": []
    }
}